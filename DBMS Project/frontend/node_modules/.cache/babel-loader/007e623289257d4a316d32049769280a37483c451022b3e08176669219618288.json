{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\OutputPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useStateContext } from '../context/StateContext';\nimport DraggableStep from './DraggableStep';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEY = 'workflowStepPositions';\nconst OutputPanel = () => {\n  _s();\n  const {\n    workflowSteps,\n    setCurrentCode\n  } = useStateContext();\n  const [positions, setPositions] = useState({});\n  const [scale, setScale] = useState(1);\n  const containerRef = useRef(null);\n\n  // Store breakpoints in state: { \"stepA-stepB\": [{x, y}, ...] }\n  const [breakPointsMap, setBreakPointsMap] = useState({});\n\n  // Ref to track if initial positions loaded or set\n  const positionsInitialized = useRef(false);\n\n  // Box and spacing sizes\n  const boxWidth = 140;\n  const boxHeight = 44;\n  const horizontalSpacing = 60;\n  const verticalSpacing = 60;\n\n  // Load saved positions on mount\n  useEffect(() => {\n    const savedPositions = localStorage.getItem(STORAGE_KEY);\n    if (savedPositions) {\n      try {\n        const parsedPositions = JSON.parse(savedPositions);\n        setPositions(parsedPositions);\n        positionsInitialized.current = true;\n      } catch {\n        console.warn('Failed to parse saved positions');\n      }\n    }\n  }, []);\n\n  // Initialize default positions once\n  useEffect(() => {\n    if (positionsInitialized.current) return;\n    if (!containerRef.current) return;\n    const containerWidth = containerRef.current.clientWidth;\n    const initialPositions = {};\n    let x = 50; // left margin\n    let y = 60; // top margin\n\n    workflowSteps.forEach(step => {\n      if (x + boxWidth > containerWidth - 20) {\n        x = 50;\n        y += boxHeight + verticalSpacing;\n      }\n      initialPositions[step] = {\n        x,\n        y\n      };\n      x += boxWidth + horizontalSpacing;\n    });\n    setPositions(prev => ({\n      ...prev,\n      ...initialPositions\n    }));\n    positionsInitialized.current = true;\n  }, [workflowSteps]);\n\n  // Save positions when changed\n  useEffect(() => {\n    if (positionsInitialized.current) {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(positions));\n    }\n  }, [positions]);\n  const handlePositionChange = (step, pos) => {\n    setPositions(prev => ({\n      ...prev,\n      [step]: pos\n    }));\n  };\n  const handleClickStep = async step => {\n    try {\n      const response = await axios.get(`/api/code/${step}`);\n      setCurrentCode(response.data.code || '');\n    } catch {\n      setCurrentCode('Failed to load code');\n    }\n  };\n\n  // Drag handlers for breakpoints\n  const handleBreakPointDrag = (lineKey, index, e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const svg = e.target.ownerSVGElement;\n    if (!svg) return;\n    const pt = svg.createSVGPoint();\n    pt.x = e.clientX;\n    pt.y = e.clientY;\n    const cursorpt = pt.matrixTransform(svg.getScreenCTM().inverse());\n    setBreakPointsMap(prev => {\n      const updated = {\n        ...prev\n      };\n      if (!updated[lineKey]) return prev;\n      const newPoints = [...updated[lineKey]];\n      newPoints[index] = {\n        x: cursorpt.x / scale,\n        y: cursorpt.y / scale\n      }; // adjust for zoom scale\n\n      updated[lineKey] = newPoints;\n      return updated;\n    });\n  };\n\n  // Mouse event handlers for drag start/end\n  const draggingRef = useRef(null);\n  const dragIndexRef = useRef(null);\n  const onBreakPointMouseDown = (lineKey, index, e) => {\n    e.preventDefault();\n    draggingRef.current = lineKey;\n    dragIndexRef.current = index;\n    window.addEventListener('mousemove', onBreakPointMouseMove);\n    window.addEventListener('mouseup', onBreakPointMouseUp);\n  };\n  const onBreakPointMouseMove = e => {\n    if (draggingRef.current !== null && dragIndexRef.current !== null) {\n      handleBreakPointDrag(draggingRef.current, dragIndexRef.current, e);\n    }\n  };\n  const onBreakPointMouseUp = () => {\n    draggingRef.current = null;\n    dragIndexRef.current = null;\n    window.removeEventListener('mousemove', onBreakPointMouseMove);\n    window.removeEventListener('mouseup', onBreakPointMouseUp);\n  };\n  const renderLines = () => {\n    const dotRadius = 4;\n    const lines = [];\n    const containerWidth = containerRef.current ? containerRef.current.clientWidth : 1000;\n    const rightEdgeThreshold = containerWidth - 45;\n    const leftEdgeThreshold = 20;\n    for (let i = 0; i < workflowSteps.length - 1; i++) {\n      const from = positions[workflowSteps[i]];\n      const to = positions[workflowSteps[i + 1]];\n      if (from && to) {\n        const fromNearRightEdge = from.x + boxWidth > rightEdgeThreshold;\n        const fromNearLeftEdge = from.x < leftEdgeThreshold;\n        const toNearRightEdge = to.x + boxWidth > rightEdgeThreshold;\n        const toNearLeftEdge = to.x < leftEdgeThreshold;\n\n        // Outgoing start point\n        let startX;\n        if (fromNearRightEdge) startX = from.x - dotRadius;else if (fromNearLeftEdge) startX = from.x + boxWidth + dotRadius;else startX = from.x + boxWidth + dotRadius;\n        const startY = from.y + boxHeight / 2;\n\n        // Incoming end point\n        let endX;\n        if (toNearRightEdge) endX = to.x + boxWidth + dotRadius;else if (toNearLeftEdge) endX = to.x - dotRadius;else endX = to.x - dotRadius;\n        const endY = to.y + boxHeight / 2;\n\n        // Get breakpoints for this line\n        const key = `${workflowSteps[i]}-${workflowSteps[i + 1]}`;\n        const breakPoints = breakPointsMap[key] || [];\n\n        // Points array: start + breakpoints + end\n        const points = [{\n          x: startX,\n          y: startY\n        }, ...breakPoints, {\n          x: endX,\n          y: endY\n        }];\n        const pathParts = [`M${points[0].x},${points[0].y}`];\n\n        // Helper for control points for smooth curve\n        const getControlPoints = (p0, p1, p2) => {\n          const dx1 = p1.x - p0.x;\n          const dy1 = p1.y - p0.y;\n          const dx2 = p2.x - p1.x;\n          const dy2 = p2.y - p1.y;\n          const control1 = {\n            x: p1.x - dx1 / 3,\n            y: p1.y - dy1 / 3\n          };\n          const control2 = {\n            x: p1.x + dx2 / 3,\n            y: p1.y + dy2 / 3\n          };\n          return [control1, control2];\n        };\n        for (let j = 0; j < points.length - 1; j++) {\n          const p0 = j === 0 ? points[j] : points[j - 1];\n          const p1 = points[j];\n          const p2 = points[j + 1];\n          let c1, c2;\n          if (j === 0) {\n            // first segment, control points lie horizontally between p1 and p2\n            c1 = {\n              x: (p1.x + p2.x) / 2,\n              y: p1.y\n            };\n            c2 = {\n              x: (p1.x + p2.x) / 2,\n              y: p2.y\n            };\n          } else {\n            [c1, c2] = getControlPoints(p0, p1, p2);\n          }\n          pathParts.push(`C${c1.x},${c1.y} ${c2.x},${c2.y} ${p2.x},${p2.y}`);\n        }\n        const d = pathParts.join(' ');\n        lines.push(/*#__PURE__*/_jsxDEV(\"path\", {\n          d: d,\n          fill: \"none\",\n          stroke: \"rgba(184, 212, 249, 0.9)\",\n          strokeWidth: \"1.5\",\n          markerEnd: \"url(#arrowhead)\"\n        }, `line-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this));\n\n        // Render draggable breakpoints as circles\n        breakPoints.forEach((pt, idx) => {\n          lines.push(/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: pt.x,\n            cy: pt.y,\n            r: 6,\n            fill: \"rgba(100, 149, 237, 0.7)\",\n            stroke: \"rgba(50, 80, 130, 0.9)\",\n            strokeWidth: 1.5,\n            style: {\n              cursor: 'grab'\n            },\n            onMouseDown: e => onBreakPointMouseDown(key, idx, e),\n            onTouchStart: e => onBreakPointMouseDown(key, idx, e)\n          }, `breakpoint-${i}-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this));\n        });\n      }\n    }\n    return lines;\n  };\n\n  // Optional: add a button to add breakpoints between steps dynamically\n  const addBreakPointBetween = (fromStep, toStep) => {\n    const key = `${fromStep}-${toStep}`;\n    const fromPos = positions[fromStep];\n    const toPos = positions[toStep];\n    if (!fromPos || !toPos) return;\n    const midX = (fromPos.x + toPos.x) / 2;\n    const midY = (fromPos.y + toPos.y) / 2;\n    setBreakPointsMap(prev => {\n      const current = prev[key] || [];\n      return {\n        ...prev,\n        [key]: [...current, {\n          x: midX,\n          y: midY\n        }]\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"output-panel\",\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative',\n      overflow: 'auto',\n      padding: 20\n    },\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zoom-controls\",\n      style: {\n        position: 'absolute',\n        top: 5,\n        right: 5,\n        zIndex: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"zoom-btn\",\n        onClick: () => setScale(s => Math.min(2, +(s + 0.1).toFixed(2))),\n        title: \"Zoom in\",\n        style: {\n          marginRight: 5,\n          textAlign: 'center'\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"zoom-btn\",\n        onClick: () => setScale(s => Math.max(0.5, +(s - 0.1).toFixed(2))),\n        title: \"Zoom out\",\n        children: \"\\u2212\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-wrapper\",\n      style: {\n        transform: `scale(${scale})`,\n        transformOrigin: '0 0',\n        position: 'relative',\n        minHeight: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          pointerEvents: 'none',\n          overflow: 'visible',\n          top: 0,\n          left: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"marker\", {\n            id: \"arrowhead\",\n            markerWidth: \"10\",\n            markerHeight: \"7\",\n            refX: \"10\",\n            refY: \"3.5\",\n            orient: \"auto\",\n            fill: \"rgba(103, 121, 136, 0.9)\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"0 0, 10 3.5, 0 7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), renderLines()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), workflowSteps.map((step, index) => /*#__PURE__*/_jsxDEV(DraggableStep, {\n        step: step,\n        position: positions[step] || {\n          x: 0,\n          y: 0\n        },\n        onPositionChange: handlePositionChange,\n        onClick: handleClickStep,\n        isFirst: index === 0\n      }, step, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: 10,\n        left: 10,\n        zIndex: 10\n      },\n      children: workflowSteps.length > 1 && workflowSteps.slice(0, workflowSteps.length - 1).map((step, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addBreakPointBetween(step, workflowSteps[idx + 1]),\n        style: {\n          marginRight: 8\n        },\n        children: [\"Add Breakpoint between \", step, \" \\u2192 \", workflowSteps[idx + 1]]\n      }, `add-bp-${step}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n};\n_s(OutputPanel, \"E8FX19n1nCd4MOHt4CNmOzcN5gU=\", false, function () {\n  return [useStateContext];\n});\n_c = OutputPanel;\nexport default OutputPanel;\nvar _c;\n$RefreshReg$(_c, \"OutputPanel\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useStateContext","DraggableStep","axios","jsxDEV","_jsxDEV","STORAGE_KEY","OutputPanel","_s","workflowSteps","setCurrentCode","positions","setPositions","scale","setScale","containerRef","breakPointsMap","setBreakPointsMap","positionsInitialized","boxWidth","boxHeight","horizontalSpacing","verticalSpacing","savedPositions","localStorage","getItem","parsedPositions","JSON","parse","current","console","warn","containerWidth","clientWidth","initialPositions","x","y","forEach","step","prev","setItem","stringify","handlePositionChange","pos","handleClickStep","response","get","data","code","handleBreakPointDrag","lineKey","index","e","preventDefault","stopPropagation","svg","target","ownerSVGElement","pt","createSVGPoint","clientX","clientY","cursorpt","matrixTransform","getScreenCTM","inverse","updated","newPoints","draggingRef","dragIndexRef","onBreakPointMouseDown","window","addEventListener","onBreakPointMouseMove","onBreakPointMouseUp","removeEventListener","renderLines","dotRadius","lines","rightEdgeThreshold","leftEdgeThreshold","i","length","from","to","fromNearRightEdge","fromNearLeftEdge","toNearRightEdge","toNearLeftEdge","startX","startY","endX","endY","key","breakPoints","points","pathParts","getControlPoints","p0","p1","p2","dx1","dy1","dx2","dy2","control1","control2","j","c1","c2","push","d","join","fill","stroke","strokeWidth","markerEnd","fileName","_jsxFileName","lineNumber","columnNumber","idx","cx","cy","r","style","cursor","onMouseDown","onTouchStart","addBreakPointBetween","fromStep","toStep","fromPos","toPos","midX","midY","className","width","height","position","overflow","padding","ref","children","top","right","zIndex","onClick","s","Math","min","toFixed","title","marginRight","textAlign","max","transform","transformOrigin","minHeight","pointerEvents","left","id","markerWidth","markerHeight","refX","refY","orient","map","onPositionChange","isFirst","bottom","slice","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/OutputPanel.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useStateContext } from '../context/StateContext';\r\nimport DraggableStep from './DraggableStep';\r\nimport axios from 'axios';\r\n\r\nconst STORAGE_KEY = 'workflowStepPositions';\r\n\r\nconst OutputPanel = () => {\r\n  const { workflowSteps, setCurrentCode } = useStateContext();\r\n  const [positions, setPositions] = useState({});\r\n  const [scale, setScale] = useState(1);\r\n  const containerRef = useRef(null);\r\n\r\n  // Store breakpoints in state: { \"stepA-stepB\": [{x, y}, ...] }\r\n  const [breakPointsMap, setBreakPointsMap] = useState({});\r\n\r\n  // Ref to track if initial positions loaded or set\r\n  const positionsInitialized = useRef(false);\r\n\r\n  // Box and spacing sizes\r\n  const boxWidth = 140;\r\n  const boxHeight = 44;\r\n  const horizontalSpacing = 60;\r\n  const verticalSpacing = 60;\r\n\r\n  // Load saved positions on mount\r\n  useEffect(() => {\r\n    const savedPositions = localStorage.getItem(STORAGE_KEY);\r\n    if (savedPositions) {\r\n      try {\r\n        const parsedPositions = JSON.parse(savedPositions);\r\n        setPositions(parsedPositions);\r\n        positionsInitialized.current = true;\r\n      } catch {\r\n        console.warn('Failed to parse saved positions');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Initialize default positions once\r\n  useEffect(() => {\r\n    if (positionsInitialized.current) return;\r\n    if (!containerRef.current) return;\r\n\r\n    const containerWidth = containerRef.current.clientWidth;\r\n    const initialPositions = {};\r\n\r\n    let x = 50; // left margin\r\n    let y = 60; // top margin\r\n\r\n    workflowSteps.forEach((step) => {\r\n      if (x + boxWidth > containerWidth - 20) {\r\n        x = 50;\r\n        y += boxHeight + verticalSpacing;\r\n      }\r\n      initialPositions[step] = { x, y };\r\n      x += boxWidth + horizontalSpacing;\r\n    });\r\n\r\n    setPositions((prev) => ({ ...prev, ...initialPositions }));\r\n    positionsInitialized.current = true;\r\n  }, [workflowSteps]);\r\n\r\n  // Save positions when changed\r\n  useEffect(() => {\r\n    if (positionsInitialized.current) {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(positions));\r\n    }\r\n  }, [positions]);\r\n\r\n  const handlePositionChange = (step, pos) => {\r\n    setPositions((prev) => ({ ...prev, [step]: pos }));\r\n  };\r\n\r\n  const handleClickStep = async (step) => {\r\n    try {\r\n      const response = await axios.get(`/api/code/${step}`);\r\n      setCurrentCode(response.data.code || '');\r\n    } catch {\r\n      setCurrentCode('Failed to load code');\r\n    }\r\n  };\r\n\r\n  // Drag handlers for breakpoints\r\n  const handleBreakPointDrag = (lineKey, index, e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const svg = e.target.ownerSVGElement;\r\n    if (!svg) return;\r\n\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = e.clientX;\r\n    pt.y = e.clientY;\r\n\r\n    const cursorpt = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n\r\n    setBreakPointsMap((prev) => {\r\n      const updated = { ...prev };\r\n      if (!updated[lineKey]) return prev;\r\n\r\n      const newPoints = [...updated[lineKey]];\r\n      newPoints[index] = { x: cursorpt.x / scale, y: cursorpt.y / scale }; // adjust for zoom scale\r\n\r\n      updated[lineKey] = newPoints;\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  // Mouse event handlers for drag start/end\r\n  const draggingRef = useRef(null);\r\n  const dragIndexRef = useRef(null);\r\n\r\n  const onBreakPointMouseDown = (lineKey, index, e) => {\r\n    e.preventDefault();\r\n    draggingRef.current = lineKey;\r\n    dragIndexRef.current = index;\r\n    window.addEventListener('mousemove', onBreakPointMouseMove);\r\n    window.addEventListener('mouseup', onBreakPointMouseUp);\r\n  };\r\n\r\n  const onBreakPointMouseMove = (e) => {\r\n    if (draggingRef.current !== null && dragIndexRef.current !== null) {\r\n      handleBreakPointDrag(draggingRef.current, dragIndexRef.current, e);\r\n    }\r\n  };\r\n\r\n  const onBreakPointMouseUp = () => {\r\n    draggingRef.current = null;\r\n    dragIndexRef.current = null;\r\n    window.removeEventListener('mousemove', onBreakPointMouseMove);\r\n    window.removeEventListener('mouseup', onBreakPointMouseUp);\r\n  };\r\n\r\n  const renderLines = () => {\r\n    const dotRadius = 4;\r\n    const lines = [];\r\n    const containerWidth = containerRef.current ? containerRef.current.clientWidth : 1000;\r\n\r\n    const rightEdgeThreshold = containerWidth - 45;\r\n    const leftEdgeThreshold = 20;\r\n\r\n    for (let i = 0; i < workflowSteps.length - 1; i++) {\r\n      const from = positions[workflowSteps[i]];\r\n      const to = positions[workflowSteps[i + 1]];\r\n\r\n      if (from && to) {\r\n        const fromNearRightEdge = from.x + boxWidth > rightEdgeThreshold;\r\n        const fromNearLeftEdge = from.x < leftEdgeThreshold;\r\n\r\n        const toNearRightEdge = to.x + boxWidth > rightEdgeThreshold;\r\n        const toNearLeftEdge = to.x < leftEdgeThreshold;\r\n\r\n        // Outgoing start point\r\n        let startX;\r\n        if (fromNearRightEdge) startX = from.x - dotRadius;\r\n        else if (fromNearLeftEdge) startX = from.x + boxWidth + dotRadius;\r\n        else startX = from.x + boxWidth + dotRadius;\r\n        const startY = from.y + boxHeight / 2;\r\n\r\n        // Incoming end point\r\n        let endX;\r\n        if (toNearRightEdge) endX = to.x + boxWidth + dotRadius;\r\n        else if (toNearLeftEdge) endX = to.x - dotRadius;\r\n        else endX = to.x - dotRadius;\r\n        const endY = to.y + boxHeight / 2;\r\n\r\n        // Get breakpoints for this line\r\n        const key = `${workflowSteps[i]}-${workflowSteps[i + 1]}`;\r\n        const breakPoints = breakPointsMap[key] || [];\r\n\r\n        // Points array: start + breakpoints + end\r\n        const points = [{ x: startX, y: startY }, ...breakPoints, { x: endX, y: endY }];\r\n\r\n        const pathParts = [`M${points[0].x},${points[0].y}`];\r\n\r\n        // Helper for control points for smooth curve\r\n        const getControlPoints = (p0, p1, p2) => {\r\n          const dx1 = p1.x - p0.x;\r\n          const dy1 = p1.y - p0.y;\r\n          const dx2 = p2.x - p1.x;\r\n          const dy2 = p2.y - p1.y;\r\n\r\n          const control1 = {\r\n            x: p1.x - dx1 / 3,\r\n            y: p1.y - dy1 / 3,\r\n          };\r\n          const control2 = {\r\n            x: p1.x + dx2 / 3,\r\n            y: p1.y + dy2 / 3,\r\n          };\r\n          return [control1, control2];\r\n        };\r\n\r\n        for (let j = 0; j < points.length - 1; j++) {\r\n          const p0 = j === 0 ? points[j] : points[j - 1];\r\n          const p1 = points[j];\r\n          const p2 = points[j + 1];\r\n\r\n          let c1, c2;\r\n\r\n          if (j === 0) {\r\n            // first segment, control points lie horizontally between p1 and p2\r\n            c1 = { x: (p1.x + p2.x) / 2, y: p1.y };\r\n            c2 = { x: (p1.x + p2.x) / 2, y: p2.y };\r\n          } else {\r\n            [c1, c2] = getControlPoints(p0, p1, p2);\r\n          }\r\n\r\n          pathParts.push(`C${c1.x},${c1.y} ${c2.x},${c2.y} ${p2.x},${p2.y}`);\r\n        }\r\n\r\n        const d = pathParts.join(' ');\r\n\r\n        lines.push(\r\n          <path\r\n            key={`line-${i}`}\r\n            d={d}\r\n            fill=\"none\"\r\n            stroke=\"rgba(184, 212, 249, 0.9)\"\r\n            strokeWidth=\"1.5\"\r\n            markerEnd=\"url(#arrowhead)\"\r\n          />\r\n        );\r\n\r\n        // Render draggable breakpoints as circles\r\n        breakPoints.forEach((pt, idx) => {\r\n          lines.push(\r\n            <circle\r\n              key={`breakpoint-${i}-${idx}`}\r\n              cx={pt.x}\r\n              cy={pt.y}\r\n              r={6}\r\n              fill=\"rgba(100, 149, 237, 0.7)\"\r\n              stroke=\"rgba(50, 80, 130, 0.9)\"\r\n              strokeWidth={1.5}\r\n              style={{ cursor: 'grab' }}\r\n              onMouseDown={(e) => onBreakPointMouseDown(key, idx, e)}\r\n              onTouchStart={(e) => onBreakPointMouseDown(key, idx, e)}\r\n            />\r\n          );\r\n        });\r\n      }\r\n    }\r\n\r\n    return lines;\r\n  };\r\n\r\n  // Optional: add a button to add breakpoints between steps dynamically\r\n  const addBreakPointBetween = (fromStep, toStep) => {\r\n    const key = `${fromStep}-${toStep}`;\r\n    const fromPos = positions[fromStep];\r\n    const toPos = positions[toStep];\r\n    if (!fromPos || !toPos) return;\r\n\r\n    const midX = (fromPos.x + toPos.x) / 2;\r\n    const midY = (fromPos.y + toPos.y) / 2;\r\n\r\n    setBreakPointsMap((prev) => {\r\n      const current = prev[key] || [];\r\n      return { ...prev, [key]: [...current, { x: midX, y: midY }] };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"output-panel\"\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        padding: 20,\r\n      }}\r\n      ref={containerRef}\r\n    >\r\n      {/* Zoom controls */}\r\n      <div\r\n        className=\"zoom-controls\"\r\n        style={{ position: 'absolute', top: 5, right: 5, zIndex: 5 }}\r\n      >\r\n        <button\r\n          className=\"zoom-btn\"\r\n          onClick={() => setScale((s) => Math.min(2, +(s + 0.1).toFixed(2)))}\r\n          title=\"Zoom in\"\r\n          style={{ marginRight: 5, textAlign: 'center' }}\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n          className=\"zoom-btn\"\r\n          onClick={() => setScale((s) => Math.max(0.5, +(s - 0.1).toFixed(2)))}\r\n          title=\"Zoom out\"\r\n        >\r\n          −\r\n        </button>\r\n      </div>\r\n\r\n      {/* Canvas wrapper */}\r\n      <div\r\n        className=\"canvas-wrapper\"\r\n        style={{\r\n          transform: `scale(${scale})`,\r\n          transformOrigin: '0 0',\r\n          position: 'relative',\r\n          minHeight: '100%',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <svg\r\n          style={{\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            pointerEvents: 'none',\r\n            overflow: 'visible',\r\n            top: 0,\r\n            left: 0,\r\n          }}\r\n        >\r\n          <defs>\r\n            <marker\r\n              id=\"arrowhead\"\r\n              markerWidth=\"10\"\r\n              markerHeight=\"7\"\r\n              refX=\"10\"\r\n              refY=\"3.5\"\r\n              orient=\"auto\"\r\n              fill=\"rgba(103, 121, 136, 0.9)\"\r\n            >\r\n              <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n            </marker>\r\n          </defs>\r\n          {renderLines()}\r\n        </svg>\r\n\r\n        {/* Draggable steps */}\r\n        {workflowSteps.map((step, index) => (\r\n          <DraggableStep\r\n            key={step}\r\n            step={step}\r\n            position={positions[step] || { x: 0, y: 0 }}\r\n            onPositionChange={handlePositionChange}\r\n            onClick={handleClickStep}\r\n            isFirst={index === 0}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Add breakpoint buttons for demo (optional) */}\r\n      <div style={{ position: 'absolute', bottom: 10, left: 10, zIndex: 10 }}>\r\n        {workflowSteps.length > 1 &&\r\n          workflowSteps.slice(0, workflowSteps.length - 1).map((step, idx) => (\r\n            <button\r\n              key={`add-bp-${step}`}\r\n              onClick={() => addBreakPointBetween(step, workflowSteps[idx + 1])}\r\n              style={{ marginRight: 8 }}\r\n            >\r\n              Add Breakpoint between {step} → {workflowSteps[idx + 1]}\r\n            </button>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutputPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}