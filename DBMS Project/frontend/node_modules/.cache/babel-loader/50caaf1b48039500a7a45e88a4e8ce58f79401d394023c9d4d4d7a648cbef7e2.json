{"ast":null,"code":"import axios from 'axios';\n\n// Backend Base URL (adjust if needed)\nconst BASE_URL = 'http://localhost:5000';\n\n// Fetch list of normalized tables (for dropdown in MessagePanel)\nexport async function fetchNormalizedTables() {\n  try {\n    const res = await axios.get(`${BASE_URL}/api/normalized_tables`);\n    return res.data.tables; // Should return array like [\"table_1\", \"table_2\"]\n  } catch (err) {\n    console.error('Error fetching normalized tables:', err);\n    return [];\n  }\n}\n\n// Fetch code snippet for a workflow step (for CodePanel)\nexport async function fetchCodeForStep(stepName) {\n  try {\n    const res = await axios.get(`${BASE_URL}/api/code/${stepName}`);\n    return res.data.code; // Should return a string containing Python code\n  } catch (err) {\n    console.error(`Error fetching code for step ${stepName}:`, err);\n    return \"Error fetching code snippet.\";\n  }\n}\n\n// Validate whether adding a step is allowed (order checking)\nexport async function validateStep(currentSteps, nextStep) {\n  try {\n    const res = await axios.post(`${BASE_URL}/api/validate_step`, {\n      currentSteps,\n      nextStep\n    });\n    return res.data; // Should return { valid: true/false, message: \"...\"}\n  } catch (err) {\n    console.error('Error validating step:', err);\n    return {\n      valid: false,\n      message: \"Error validating step.\"\n    };\n  }\n}\n\n// Fetch the HTML content for a selected table (for MessagePanel)\nexport async function fetchTableHTML(tableName) {\n  try {\n    const res = await axios.get(`${BASE_URL}/api/table_html/${tableName}`);\n    return res.data.html; // Should return raw HTML string\n  } catch (err) {\n    console.error(`Error fetching table HTML for ${tableName}:`, err);\n    return \"<p>Error loading table.</p>\";\n  }\n}","map":{"version":3,"names":["axios","BASE_URL","fetchNormalizedTables","res","get","data","tables","err","console","error","fetchCodeForStep","stepName","code","validateStep","currentSteps","nextStep","post","valid","message","fetchTableHTML","tableName","html"],"sources":["D:/DBMS/DBMS Project/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Backend Base URL (adjust if needed)\r\nconst BASE_URL = 'http://localhost:5000';\r\n\r\n// Fetch list of normalized tables (for dropdown in MessagePanel)\r\nexport async function fetchNormalizedTables() {\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/api/normalized_tables`);\r\n    return res.data.tables;  // Should return array like [\"table_1\", \"table_2\"]\r\n  } catch (err) {\r\n    console.error('Error fetching normalized tables:', err);\r\n    return [];\r\n  }\r\n}\r\n\r\n// Fetch code snippet for a workflow step (for CodePanel)\r\nexport async function fetchCodeForStep(stepName) {\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/api/code/${stepName}`);\r\n    return res.data.code;  // Should return a string containing Python code\r\n  } catch (err) {\r\n    console.error(`Error fetching code for step ${stepName}:`, err);\r\n    return \"Error fetching code snippet.\";\r\n  }\r\n}\r\n\r\n// Validate whether adding a step is allowed (order checking)\r\nexport async function validateStep(currentSteps, nextStep) {\r\n  try {\r\n    const res = await axios.post(`${BASE_URL}/api/validate_step`, {\r\n      currentSteps,\r\n      nextStep\r\n    });\r\n    return res.data;  // Should return { valid: true/false, message: \"...\"}\r\n  } catch (err) {\r\n    console.error('Error validating step:', err);\r\n    return { valid: false, message: \"Error validating step.\" };\r\n  }\r\n}\r\n\r\n// Fetch the HTML content for a selected table (for MessagePanel)\r\nexport async function fetchTableHTML(tableName) {\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/api/table_html/${tableName}`);\r\n    return res.data.html;  // Should return raw HTML string\r\n  } catch (err) {\r\n    console.error(`Error fetching table HTML for ${tableName}:`, err);\r\n    return \"<p>Error loading table.</p>\";\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAG,uBAAuB;;AAExC;AACA,OAAO,eAAeC,qBAAqBA,CAAA,EAAG;EAC5C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,wBAAwB,CAAC;IAChE,OAAOE,GAAG,CAACE,IAAI,CAACC,MAAM,CAAC,CAAE;EAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEF,GAAG,CAAC;IACvD,OAAO,EAAE;EACX;AACF;;AAEA;AACA,OAAO,eAAeG,gBAAgBA,CAACC,QAAQ,EAAE;EAC/C,IAAI;IACF,MAAMR,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,aAAaU,QAAQ,EAAE,CAAC;IAC/D,OAAOR,GAAG,CAACE,IAAI,CAACO,IAAI,CAAC,CAAE;EACzB,CAAC,CAAC,OAAOL,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,gCAAgCE,QAAQ,GAAG,EAAEJ,GAAG,CAAC;IAC/D,OAAO,8BAA8B;EACvC;AACF;;AAEA;AACA,OAAO,eAAeM,YAAYA,CAACC,YAAY,EAAEC,QAAQ,EAAE;EACzD,IAAI;IACF,MAAMZ,GAAG,GAAG,MAAMH,KAAK,CAACgB,IAAI,CAAC,GAAGf,QAAQ,oBAAoB,EAAE;MAC5Da,YAAY;MACZC;IACF,CAAC,CAAC;IACF,OAAOZ,GAAG,CAACE,IAAI,CAAC,CAAE;EACpB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC5C,OAAO;MAAEU,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAyB,CAAC;EAC5D;AACF;;AAEA;AACA,OAAO,eAAeC,cAAcA,CAACC,SAAS,EAAE;EAC9C,IAAI;IACF,MAAMjB,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,mBAAmBmB,SAAS,EAAE,CAAC;IACtE,OAAOjB,GAAG,CAACE,IAAI,CAACgB,IAAI,CAAC,CAAE;EACzB,CAAC,CAAC,OAAOd,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,iCAAiCW,SAAS,GAAG,EAAEb,GAAG,CAAC;IACjE,OAAO,6BAA6B;EACtC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}