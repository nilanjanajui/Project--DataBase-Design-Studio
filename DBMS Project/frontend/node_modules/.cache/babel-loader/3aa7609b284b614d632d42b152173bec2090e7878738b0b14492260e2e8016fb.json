{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\DraggableStep.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { useDrag } from '@use-gesture/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraggableStep = ({\n  step,\n  displayName,\n  position,\n  onPositionChange,\n  onClick,\n  onSizeChange\n}) => {\n  _s();\n  const ref = useRef(null);\n  const roRef = useRef(null);\n\n  // report width initially and whenever it changes\n  useEffect(() => {\n    const el = ref.current;\n    if (!el) return;\n    const report = () => {\n      const width = el.offsetWidth;\n      onSizeChange(step, width);\n    };\n    report();\n\n    // ResizeObserver to catch font-loads, text changes, window zoom, etc.\n    if (typeof ResizeObserver !== 'undefined') {\n      roRef.current = new ResizeObserver(report);\n      roRef.current.observe(el);\n    } else {\n      // fallback: listen to window resize\n      window.addEventListener('resize', report);\n    }\n    return () => {\n      if (roRef.current) roRef.current.disconnect();else window.removeEventListener('resize', report);\n    };\n  }, [step, displayName, onSizeChange]);\n\n  // dragging with use-gesture; from() ensures starting point uses current position\n  const bind = useDrag(({\n    offset: [x, y],\n    last\n  }) => {\n    // call parent to update absolute position\n    onPositionChange(step, {\n      x,\n      y\n    });\n  }, {\n    from: () => [position.x || 0, position.y || 0],\n    filterTaps: true,\n    pointer: {\n      touch: true\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...bind(),\n    ref: ref,\n    className: \"draggable-node\",\n    onClick: e => {\n      e.stopPropagation();\n      onClick(step);\n    },\n    style: {\n      left: position.x,\n      top: position.y,\n      height: 44,\n      position: 'absolute',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: '0 30px',\n      whiteSpace: 'nowrap',\n      cursor: 'grab',\n      userSelect: 'none'\n    },\n    title: displayName,\n    children: displayName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(DraggableStep, \"OmE9K+nLDbEQSAmxzHQqgw7fFJU=\", false, function () {\n  return [useDrag];\n});\n_c = DraggableStep;\nexport default DraggableStep;\nvar _c;\n$RefreshReg$(_c, \"DraggableStep\");","map":{"version":3,"names":["React","useEffect","useRef","useDrag","jsxDEV","_jsxDEV","DraggableStep","step","displayName","position","onPositionChange","onClick","onSizeChange","_s","ref","roRef","el","current","report","width","offsetWidth","ResizeObserver","observe","window","addEventListener","disconnect","removeEventListener","bind","offset","x","y","last","from","filterTaps","pointer","touch","className","e","stopPropagation","style","left","top","height","display","alignItems","justifyContent","padding","whiteSpace","cursor","userSelect","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/DraggableStep.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { useDrag } from '@use-gesture/react';\r\n\r\nconst DraggableStep = ({ step, displayName, position, onPositionChange, onClick, onSizeChange }) => {\r\n  const ref = useRef(null);\r\n  const roRef = useRef(null);\r\n\r\n  // report width initially and whenever it changes\r\n  useEffect(() => {\r\n    const el = ref.current;\r\n    if (!el) return;\r\n\r\n    const report = () => {\r\n      const width = el.offsetWidth;\r\n      onSizeChange(step, width);\r\n    };\r\n\r\n    report();\r\n\r\n    // ResizeObserver to catch font-loads, text changes, window zoom, etc.\r\n    if (typeof ResizeObserver !== 'undefined') {\r\n      roRef.current = new ResizeObserver(report);\r\n      roRef.current.observe(el);\r\n    } else {\r\n      // fallback: listen to window resize\r\n      window.addEventListener('resize', report);\r\n    }\r\n\r\n    return () => {\r\n      if (roRef.current) roRef.current.disconnect();\r\n      else window.removeEventListener('resize', report);\r\n    };\r\n  }, [step, displayName, onSizeChange]);\r\n\r\n  // dragging with use-gesture; from() ensures starting point uses current position\r\n  const bind = useDrag(\r\n    ({ offset: [x, y], last }) => {\r\n      // call parent to update absolute position\r\n      onPositionChange(step, { x, y });\r\n    },\r\n    {\r\n      from: () => [position.x || 0, position.y || 0],\r\n      filterTaps: true,\r\n      pointer: { touch: true },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div\r\n      {...bind()}\r\n      ref={ref}\r\n      className=\"draggable-node\"\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        onClick(step);\r\n      }}\r\n      style={{\r\n        left: position.x,\r\n        top: position.y,\r\n        height: 44,\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: '0 30px',\r\n        whiteSpace: 'nowrap',\r\n        cursor: 'grab',\r\n        userSelect: 'none',\r\n      }}\r\n      title={displayName}\r\n    >\r\n      {displayName}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableStep;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}