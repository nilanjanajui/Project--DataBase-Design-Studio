{"ast":null,"code":"import axios from 'axios';\nexport const fetchNormalizedTables = async () => {\n  try {\n    const response = await axios.get('/api/normalized_tables');\n    return response.data.tables || [];\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch tables');\n  }\n};\nexport const fetchCodeForStep = async stepName => {\n  try {\n    const response = await axios.get(`/api/code/${stepName}`);\n    return response.data.code || '';\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch code');\n  }\n};\nexport const fetchTableHTML = async tableName => {\n  try {\n    const response = await axios.get(`/api/table_html/${tableName}`);\n    return response.data.html || '';\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to fetch table');\n  }\n};\nexport const validateStep = async (currentSteps, nextStep) => {\n  try {\n    const response = await axios.post('/api/validate_step', {\n      currentSteps,\n      nextStep\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Validation failed');\n  }\n};\nexport const uploadFile = async file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  try {\n    const response = await axios.post('/api/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'File upload failed');\n  }\n};","map":{"version":3,"names":["axios","fetchNormalizedTables","response","get","data","tables","error","_error$response","_error$response$data","Error","message","fetchCodeForStep","stepName","code","_error$response2","_error$response2$data","fetchTableHTML","tableName","html","_error$response3","_error$response3$data","validateStep","currentSteps","nextStep","post","_error$response4","_error$response4$data","uploadFile","file","formData","FormData","append","headers","_error$response5","_error$response5$data"],"sources":["D:/DBMS/DBMS Project/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const fetchNormalizedTables = async () => {\r\n  try {\r\n    const response = await axios.get('/api/normalized_tables');\r\n    return response.data.tables || [];\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || 'Failed to fetch tables');\r\n  }\r\n};\r\n\r\nexport const fetchCodeForStep = async (stepName) => {\r\n  try {\r\n    const response = await axios.get(`/api/code/${stepName}`);\r\n    return response.data.code || '';\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || 'Failed to fetch code');\r\n  }\r\n};\r\n\r\nexport const fetchTableHTML = async (tableName) => {\r\n  try {\r\n    const response = await axios.get(`/api/table_html/${tableName}`);\r\n    return response.data.html || '';\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || 'Failed to fetch table');\r\n  }\r\n};\r\n\r\nexport const validateStep = async (currentSteps, nextStep) => {\r\n  try {\r\n    const response = await axios.post('/api/validate_step', {\r\n      currentSteps,\r\n      nextStep\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || 'Validation failed');\r\n  }\r\n};\r\n\r\nexport const uploadFile = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  \r\n  try {\r\n    const response = await axios.post('/api/upload', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || 'File upload failed');\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}