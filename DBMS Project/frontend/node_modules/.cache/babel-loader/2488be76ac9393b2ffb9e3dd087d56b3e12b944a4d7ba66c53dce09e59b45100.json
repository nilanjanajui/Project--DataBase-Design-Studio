{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\ERDiagramPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MermaidERDiagram from '../MermaidERDiagram'; // ✅ CORRECT\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ERDiagramPage = () => {\n  _s();\n  const [mermaidCode, setMermaidCode] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/er_diagram\") // Adjust URL if needed\n    .then(res => res.json()).then(data => {\n      if (data.mermaid_code) {\n        setMermaidCode(data.mermaid_code);\n      } else {\n        setError(\"No ER diagram data received\");\n      }\n    }).catch(e => setError(e.message)).finally(() => setLoading(false));\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading ER Diagram...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error loading ER Diagram: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Entity-Relationship Diagram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MermaidERDiagram, {\n      mermaidCode: mermaidCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ERDiagramPage, \"2K8peLOqIiqkY/Q49XwmckMMzXI=\");\n_c = ERDiagramPage;\nexport default ERDiagramPage;\nvar _c;\n$RefreshReg$(_c, \"ERDiagramPage\");","map":{"version":3,"names":["React","useEffect","useState","MermaidERDiagram","jsxDEV","_jsxDEV","ERDiagramPage","_s","mermaidCode","setMermaidCode","loading","setLoading","error","setError","fetch","then","res","json","data","mermaid_code","catch","e","message","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/ERDiagramPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MermaidERDiagram from '../MermaidERDiagram'; // ✅ CORRECT\r\n\r\n\r\nconst ERDiagramPage = () => {\r\n  const [mermaidCode, setMermaidCode] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/er_diagram\") // Adjust URL if needed\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.mermaid_code) {\r\n          setMermaidCode(data.mermaid_code);\r\n        } else {\r\n          setError(\"No ER diagram data received\");\r\n        }\r\n      })\r\n      .catch((e) => setError(e.message))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading ER Diagram...</div>;\r\n  if (error) return <div>Error loading ER Diagram: {error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Entity-Relationship Diagram</h2>\r\n      <MermaidERDiagram mermaidCode={mermaidCode} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ERDiagramPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGpD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,sCAAsC,CAAC,CAAC;IAAA,CAC3CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,YAAY,EAAE;QACrBV,cAAc,CAACS,IAAI,CAACC,YAAY,CAAC;MACnC,CAAC,MAAM;QACLN,QAAQ,CAAC,6BAA6B,CAAC;MACzC;IACF,CAAC,CAAC,CACDO,KAAK,CAAEC,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACC,OAAO,CAAC,CAAC,CACjCC,OAAO,CAAC,MAAMZ,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE,oBAAOL,OAAA;IAAAmB,QAAA,EAAK;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACpD,IAAIhB,KAAK,EAAE,oBAAOP,OAAA;IAAAmB,QAAA,GAAK,4BAA0B,EAACZ,KAAK;EAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE9D,oBACEvB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCvB,OAAA,CAACF,gBAAgB;MAACK,WAAW,EAAEA;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACrB,EAAA,CA5BID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AA8BnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}