{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\MermaidERDiagram.jsx\",\n  _s = $RefreshSig$();\n// MermaidERDiagram.jsx\nimport React, { useEffect, useRef } from 'react';\nimport mermaid from 'mermaid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MermaidERDiagram = ({\n  chart\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    if (!chart) return;\n    mermaid.initialize({\n      startOnLoad: false,\n      theme: 'default',\n      securityLevel: 'loose' // to allow html labels\n    });\n    try {\n      // Render Mermaid diagram inside containerRef element\n      mermaid.render('mermaidDiagram', chart, svgCode => {\n        if (containerRef.current) {\n          containerRef.current.innerHTML = svgCode;\n        }\n      });\n    } catch (err) {\n      if (containerRef.current) {\n        containerRef.current.innerHTML = `<pre style=\"color:red\">${err.message}</pre>`;\n      }\n    }\n  }, [chart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"mermaid-container\",\n    style: {\n      overflowX: 'auto',\n      backgroundColor: '#f9f9f9',\n      padding: '1rem'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MermaidERDiagram, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = MermaidERDiagram;\nexport default MermaidERDiagram;\nvar _c;\n$RefreshReg$(_c, \"MermaidERDiagram\");","map":{"version":3,"names":["React","useEffect","useRef","mermaid","jsxDEV","_jsxDEV","MermaidERDiagram","chart","_s","containerRef","initialize","startOnLoad","theme","securityLevel","render","svgCode","current","innerHTML","err","message","ref","className","style","overflowX","backgroundColor","padding","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/MermaidERDiagram.jsx"],"sourcesContent":["// MermaidERDiagram.jsx\r\nimport React, { useEffect, useRef } from 'react';\r\nimport mermaid from 'mermaid';\r\n\r\nconst MermaidERDiagram = ({ chart }) => {\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!chart) return;\r\n\r\n    mermaid.initialize({\r\n      startOnLoad: false,\r\n      theme: 'default',\r\n      securityLevel: 'loose', // to allow html labels\r\n    });\r\n\r\n    try {\r\n      // Render Mermaid diagram inside containerRef element\r\n      mermaid.render('mermaidDiagram', chart, (svgCode) => {\r\n        if (containerRef.current) {\r\n          containerRef.current.innerHTML = svgCode;\r\n        }\r\n      });\r\n    } catch (err) {\r\n      if (containerRef.current) {\r\n        containerRef.current.innerHTML = `<pre style=\"color:red\">${err.message}</pre>`;\r\n      }\r\n    }\r\n  }, [chart]);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className=\"mermaid-container\"\r\n      style={{ overflowX: 'auto', backgroundColor: '#f9f9f9', padding: '1rem' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MermaidERDiagram;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,OAAO,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,KAAK,EAAE;IAEZJ,OAAO,CAACO,UAAU,CAAC;MACjBC,WAAW,EAAE,KAAK;MAClBC,KAAK,EAAE,SAAS;MAChBC,aAAa,EAAE,OAAO,CAAE;IAC1B,CAAC,CAAC;IAEF,IAAI;MACF;MACAV,OAAO,CAACW,MAAM,CAAC,gBAAgB,EAAEP,KAAK,EAAGQ,OAAO,IAAK;QACnD,IAAIN,YAAY,CAACO,OAAO,EAAE;UACxBP,YAAY,CAACO,OAAO,CAACC,SAAS,GAAGF,OAAO;QAC1C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZ,IAAIT,YAAY,CAACO,OAAO,EAAE;QACxBP,YAAY,CAACO,OAAO,CAACC,SAAS,GAAG,0BAA0BC,GAAG,CAACC,OAAO,QAAQ;MAChF;IACF;EACF,CAAC,EAAE,CAACZ,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IACEe,GAAG,EAAEX,YAAa;IAClBY,SAAS,EAAC,mBAAmB;IAC7BC,KAAK,EAAE;MAAEC,SAAS,EAAE,MAAM;MAAEC,eAAe,EAAE,SAAS;MAAEC,OAAO,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEN,CAAC;AAACrB,EAAA,CAjCIF,gBAAgB;AAAAwB,EAAA,GAAhBxB,gBAAgB;AAmCtB,eAAeA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}