{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\TableView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useStateContext } from '../context/StateContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableView = () => {\n  _s();\n  const {\n    selectedTableData\n  } = useStateContext();\n  if (!(selectedTableData !== null && selectedTableData !== void 0 && selectedTableData.rows)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Filter out any invalid rows\n  const validRows = selectedTableData.rows.filter(row => Array.isArray(row) && row.every(cell => cell !== null && cell !== undefined && !Number.isNaN(cell)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedTableData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: selectedTableData.headers.map((header, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: validRows.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: String(cell)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this) // Ensure everything is string\n          )\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), validRows.length < selectedTableData.rows.length && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [selectedTableData.rows.length - validRows.length, \" invalid rows were removed\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(TableView, \"blJD/IDX4nlydk8Zl/6CYmlBzbk=\", false, function () {\n  return [useStateContext];\n});\n_c = TableView;\nexport default TableView;\nvar _c;\n$RefreshReg$(_c, \"TableView\");","map":{"version":3,"names":["React","useEffect","useStateContext","useNavigate","jsxDEV","_jsxDEV","TableView","_s","selectedTableData","rows","children","fileName","_jsxFileName","lineNumber","columnNumber","validRows","filter","row","Array","isArray","every","cell","undefined","Number","isNaN","style","padding","name","border","width","headers","map","header","i","j","String","length","color","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/TableView.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useStateContext } from '../context/StateContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst TableView = () => {\r\n  const { selectedTableData } = useStateContext();\r\n  \r\n  if (!selectedTableData?.rows) {\r\n    return <div>Loading data...</div>;\r\n  }\r\n\r\n  // Filter out any invalid rows\r\n  const validRows = selectedTableData.rows.filter(row => \r\n    Array.isArray(row) && \r\n    row.every(cell => cell !== null && cell !== undefined && !Number.isNaN(cell))\r\n  );\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>{selectedTableData.name}</h2>\r\n      <table border=\"1\" style={{ width: '100%' }}>\r\n        <thead>\r\n          <tr>\r\n            {selectedTableData.headers.map((header, i) => (\r\n              <th key={i}>{header}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {validRows.map((row, i) => (\r\n            <tr key={i}>\r\n              {row.map((cell, j) => (\r\n                <td key={j}>{String(cell)}</td>  // Ensure everything is string\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {validRows.length < selectedTableData.rows.length && (\r\n        <p style={{ color: 'red' }}>\r\n          {selectedTableData.rows.length - validRows.length} invalid rows were removed\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default TableView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}