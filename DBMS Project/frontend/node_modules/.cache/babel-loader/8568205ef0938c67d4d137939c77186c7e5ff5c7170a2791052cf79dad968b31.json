{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\context\\\\StateContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateContext = /*#__PURE__*/createContext();\nexport const StateProvider = ({\n  children\n}) => {\n  _s();\n  const [workflowSteps, setWorkflowSteps] = useState([]);\n  const [currentCode, setCurrentCodeState] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [normalizedTables, setNormalizedTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState('');\n  const addWorkflowStep = stepName => {\n    if (!workflowSteps.includes(stepName)) {\n      setWorkflowSteps(prev => [...prev, stepName]);\n    }\n  };\n  const fetchCode = async stepName => {\n    try {\n      const response = await axios.get(`/api/code/${stepName}`);\n      return response.data.code;\n    } catch (error) {\n      console.error('Failed to fetch code');\n      return 'Error fetching code.';\n    }\n  };\n  const setCurrentCode = code => {\n    setCurrentCodeState(code);\n  };\n\n  // <-- HERE IS THE CRUCIAL PART: your function is called addMessage\n  // Make sure you use **addMessage**, not setMessage\n  const addMessage = msg => {\n    setMessages(prev => [...prev, msg]);\n  };\n  const fetchNormalizedTables = async () => {\n    try {\n      const response = await axios.get('/api/normalized_tables');\n      setNormalizedTables(response.data.tables || []);\n    } catch (error) {\n      console.error('Failed to fetch normalized tables');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: {\n      workflowSteps,\n      addWorkflowStep,\n      fetchCode,\n      currentCode,\n      setCurrentCode,\n      messages,\n      addMessage,\n      // provide addMessage here\n      normalizedTables,\n      fetchNormalizedTables,\n      selectedTable,\n      setSelectedTable\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(StateProvider, \"tKItajPgQDtRWGVMnSn+tc6IpTc=\");\n_c = StateProvider;\nexport const useStateContext = () => {\n  _s2();\n  return useContext(StateContext);\n};\n_s2(useStateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","axios","jsxDEV","_jsxDEV","StateContext","StateProvider","children","_s","workflowSteps","setWorkflowSteps","currentCode","setCurrentCodeState","messages","setMessages","normalizedTables","setNormalizedTables","selectedTable","setSelectedTable","addWorkflowStep","stepName","includes","prev","fetchCode","response","get","data","code","error","console","setCurrentCode","addMessage","msg","fetchNormalizedTables","tables","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStateContext","_s2","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/context/StateContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst StateContext = createContext();\r\n\r\nexport const StateProvider = ({ children }) => {\r\n  const [workflowSteps, setWorkflowSteps] = useState([]);\r\n  const [currentCode, setCurrentCodeState] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [normalizedTables, setNormalizedTables] = useState([]);\r\n  const [selectedTable, setSelectedTable] = useState('');\r\n\r\n  const addWorkflowStep = (stepName) => {\r\n    if (!workflowSteps.includes(stepName)) {\r\n      setWorkflowSteps((prev) => [...prev, stepName]);\r\n    }\r\n  };\r\n\r\n  const fetchCode = async (stepName) => {\r\n    try {\r\n      const response = await axios.get(`/api/code/${stepName}`);\r\n      return response.data.code;\r\n    } catch (error) {\r\n      console.error('Failed to fetch code');\r\n      return 'Error fetching code.';\r\n    }\r\n  };\r\n\r\n  const setCurrentCode = (code) => {\r\n    setCurrentCodeState(code);\r\n  };\r\n\r\n  // <-- HERE IS THE CRUCIAL PART: your function is called addMessage\r\n  // Make sure you use **addMessage**, not setMessage\r\n  const addMessage = (msg) => {\r\n    setMessages((prev) => [...prev, msg]);\r\n  };\r\n\r\n  const fetchNormalizedTables = async () => {\r\n    try {\r\n      const response = await axios.get('/api/normalized_tables');\r\n      setNormalizedTables(response.data.tables || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch normalized tables');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StateContext.Provider\r\n      value={{\r\n        workflowSteps,\r\n        addWorkflowStep,\r\n        fetchCode,\r\n        currentCode,\r\n        setCurrentCode,\r\n        messages,\r\n        addMessage,          // provide addMessage here\r\n        normalizedTables,\r\n        fetchNormalizedTables,\r\n        selectedTable,\r\n        setSelectedTable,\r\n      }}\r\n    >\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useStateContext = () => useContext(StateContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,WAAW,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMkB,eAAe,GAAIC,QAAQ,IAAK;IACpC,IAAI,CAACX,aAAa,CAACY,QAAQ,CAACD,QAAQ,CAAC,EAAE;MACrCV,gBAAgB,CAAEY,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,QAAQ,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAMG,SAAS,GAAG,MAAOH,QAAQ,IAAK;IACpC,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,aAAaL,QAAQ,EAAE,CAAC;MACzD,OAAOI,QAAQ,CAACE,IAAI,CAACC,IAAI;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAC;MACrC,OAAO,sBAAsB;IAC/B;EACF,CAAC;EAED,MAAME,cAAc,GAAIH,IAAI,IAAK;IAC/Bf,mBAAmB,CAACe,IAAI,CAAC;EAC3B,CAAC;;EAED;EACA;EACA,MAAMI,UAAU,GAAIC,GAAG,IAAK;IAC1BlB,WAAW,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEU,GAAG,CAAC,CAAC;EACvC,CAAC;EAED,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,wBAAwB,CAAC;MAC1DT,mBAAmB,CAACQ,QAAQ,CAACE,IAAI,CAACQ,MAAM,IAAI,EAAE,CAAC;IACjD,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAC;IACpD;EACF,CAAC;EAED,oBACExB,OAAA,CAACC,YAAY,CAAC8B,QAAQ;IACpBC,KAAK,EAAE;MACL3B,aAAa;MACbU,eAAe;MACfI,SAAS;MACTZ,WAAW;MACXmB,cAAc;MACdjB,QAAQ;MACRkB,UAAU;MAAW;MACrBhB,gBAAgB;MAChBkB,qBAAqB;MACrBhB,aAAa;MACbC;IACF,CAAE;IAAAX,QAAA,EAEDA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAChC,EAAA,CA7DWF,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AA+D1B,OAAO,MAAMoC,eAAe,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM3C,UAAU,CAACK,YAAY,CAAC;AAAA;AAACsC,GAAA,CAAjDD,eAAe;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}