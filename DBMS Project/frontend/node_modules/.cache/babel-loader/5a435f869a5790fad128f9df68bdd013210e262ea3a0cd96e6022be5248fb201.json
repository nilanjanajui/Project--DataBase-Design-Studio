{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\ActionPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { uploadFile, triggerBackendStep, checkDependencyPreservation } from '../api';\nimport { useStateContext } from '../context/StateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionPanel = () => {\n  _s();\n  const {\n    addMessage,\n    addWorkflowStep,\n    fetchNormalizedTables,\n    originalFDs,\n    decomposedSchemas,\n    fetchOriginalFDs,\n    fetchDecomposedSchemas\n  } = useStateContext();\n  const fileInputRef = useRef(null);\n\n  // Handle File Upload\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    try {\n      const message = await uploadFile(file);\n      addMessage(message);\n      addWorkflowStep('Upload');\n    } catch (error) {\n      addMessage(error.message || 'Failed to upload file');\n    }\n  };\n\n  // Generic Backend Step Handler\n  const handleBackendAction = async stepName => {\n    try {\n      const message = await triggerBackendStep(stepName);\n      addMessage(message);\n      addWorkflowStep(stepName);\n\n      // After FD Detection, fetch Functional Dependencies\n      if (stepName === 'FDModified') {\n        await fetchOriginalFDs();\n        addMessage('Fetched Functional Dependencies');\n      }\n\n      // After Normalization, fetch Decomposed Schemas + Normalized Tables\n      if (stepName === 'NormalizeTable') {\n        await fetchDecomposedSchemas();\n        addMessage('Fetched Decomposed Schemas');\n        await fetchNormalizedTables();\n        addMessage('Fetched Normalized Tables');\n      }\n    } catch (error) {\n      addMessage(error.message || `Failed at step: ${stepName}`);\n    }\n  };\n\n  // Dependency Preservation Check\n  const handleDependencyPreservation = async () => {\n    try {\n      // Always fetch fresh data before the check (do not rely on old state)\n      const fetchedFDsResponse = await fetchOriginalFDs();\n      const fetchedSchemasResponse = await fetchDecomposedSchemas();\n\n      // Get latest state values AFTER fetch\n      const latestFDs = fetchedFDsResponse || [];\n      const latestSchemas = fetchedSchemasResponse || [];\n      if (latestFDs.length === 0) {\n        addMessage('Error: Functional Dependencies are missing or invalid.');\n        return;\n      }\n      if (latestSchemas.length === 0) {\n        addMessage('Error: Decomposed Schemas are missing or invalid.');\n        return;\n      }\n\n      // Perform Dependency Preservation Check with freshly fetched data\n      const message = await checkDependencyPreservation(latestFDs, latestSchemas);\n      addMessage(message);\n      addWorkflowStep('DependencyPreservation');\n    } catch (error) {\n      addMessage(error.message || 'Unknown error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"action-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Action Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: handleFileUpload,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fileInputRef.current.click(),\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBackendAction('ConvertToCSV'),\n        children: \"Convert to CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBackendAction('CleanModify'),\n        children: \"Clean & Modify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBackendAction('FDModified'),\n        children: \"Detect Functional Dependencies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBackendAction('KeyDetection'),\n        children: \"Detect Keys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBackendAction('NormalizeTable'),\n        children: \"Normalize Tables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDependencyPreservation,\n        children: \"Check Dependency Preservation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBackendAction('LosslessCheck'),\n        children: \"Check Lossless Decomposition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBackendAction('ERDiagram'),\n        children: \"Generate ER Diagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionPanel, \"ArFqLjyTzBqWLF9DeroNYdhUkww=\", false, function () {\n  return [useStateContext];\n});\n_c = ActionPanel;\nexport default ActionPanel;\nvar _c;\n$RefreshReg$(_c, \"ActionPanel\");","map":{"version":3,"names":["React","useRef","uploadFile","triggerBackendStep","checkDependencyPreservation","useStateContext","jsxDEV","_jsxDEV","ActionPanel","_s","addMessage","addWorkflowStep","fetchNormalizedTables","originalFDs","decomposedSchemas","fetchOriginalFDs","fetchDecomposedSchemas","fileInputRef","handleFileUpload","event","file","target","files","message","error","handleBackendAction","stepName","handleDependencyPreservation","fetchedFDsResponse","fetchedSchemasResponse","latestFDs","latestSchemas","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","style","display","onClick","current","click","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/ActionPanel.jsx"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport { uploadFile, triggerBackendStep, checkDependencyPreservation } from '../api';\r\nimport { useStateContext } from '../context/StateContext';\r\n\r\nconst ActionPanel = () => {\r\n  const {\r\n    addMessage,\r\n    addWorkflowStep,\r\n    fetchNormalizedTables,\r\n    originalFDs,\r\n    decomposedSchemas,\r\n    fetchOriginalFDs,\r\n    fetchDecomposedSchemas,\r\n  } = useStateContext();\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Handle File Upload\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    try {\r\n      const message = await uploadFile(file);\r\n      addMessage(message);\r\n      addWorkflowStep('Upload');\r\n    } catch (error) {\r\n      addMessage(error.message || 'Failed to upload file');\r\n    }\r\n  };\r\n\r\n  // Generic Backend Step Handler\r\n  const handleBackendAction = async (stepName) => {\r\n    try {\r\n      const message = await triggerBackendStep(stepName);\r\n      addMessage(message);\r\n      addWorkflowStep(stepName);\r\n\r\n      // After FD Detection, fetch Functional Dependencies\r\n      if (stepName === 'FDModified') {\r\n        await fetchOriginalFDs();\r\n        addMessage('Fetched Functional Dependencies');\r\n      }\r\n\r\n      // After Normalization, fetch Decomposed Schemas + Normalized Tables\r\n      if (stepName === 'NormalizeTable') {\r\n        await fetchDecomposedSchemas();\r\n        addMessage('Fetched Decomposed Schemas');\r\n        await fetchNormalizedTables();\r\n        addMessage('Fetched Normalized Tables');\r\n      }\r\n\r\n    } catch (error) {\r\n      addMessage(error.message || `Failed at step: ${stepName}`);\r\n    }\r\n  };\r\n\r\n  // Dependency Preservation Check\r\n  const handleDependencyPreservation = async () => {\r\n  try {\r\n    // Always fetch fresh data before the check (do not rely on old state)\r\n    const fetchedFDsResponse = await fetchOriginalFDs();\r\n    const fetchedSchemasResponse = await fetchDecomposedSchemas();\r\n\r\n    // Get latest state values AFTER fetch\r\n    const latestFDs = fetchedFDsResponse || [];\r\n    const latestSchemas = fetchedSchemasResponse || [];\r\n\r\n    if (latestFDs.length === 0) {\r\n      addMessage('Error: Functional Dependencies are missing or invalid.');\r\n      return;\r\n    }\r\n\r\n    if (latestSchemas.length === 0) {\r\n      addMessage('Error: Decomposed Schemas are missing or invalid.');\r\n      return;\r\n    }\r\n\r\n    // Perform Dependency Preservation Check with freshly fetched data\r\n    const message = await checkDependencyPreservation(latestFDs, latestSchemas);\r\n    addMessage(message);\r\n    addWorkflowStep('DependencyPreservation');\r\n  } catch (error) {\r\n    addMessage(error.message || 'Unknown error occurred');\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"action-panel\">\r\n      <h2>Action Panel</h2>\r\n\r\n      {/* File Upload */}\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          onChange={handleFileUpload}\r\n          style={{ display: 'none' }}\r\n        />\r\n        <button onClick={() => fileInputRef.current.click()}>Upload File</button>\r\n      </div>\r\n\r\n      {/* Workflow Actions */}\r\n      <div className=\"actions\">\r\n        <button onClick={() => handleBackendAction('ConvertToCSV')}>Convert to CSV</button>\r\n        <button onClick={() => handleBackendAction('CleanModify')}>Clean & Modify</button>\r\n        <button onClick={() => handleBackendAction('FDModified')}>Detect Functional Dependencies</button>\r\n        <button onClick={() => handleBackendAction('KeyDetection')}>Detect Keys</button>\r\n        <button onClick={() => handleBackendAction('NormalizeTable')}>Normalize Tables</button>\r\n        <button onClick={handleDependencyPreservation}>Check Dependency Preservation</button>\r\n        <button onClick={() => handleBackendAction('LosslessCheck')}>Check Lossless Decomposition</button>\r\n        <button onClick={() => handleBackendAction('ERDiagram')}>Generate ER Diagram</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}