{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\ERDiagramPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport mermaid from \"mermaid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ERDiagramPage = () => {\n  _s();\n  const [mermaidCode, setMermaidCode] = useState(\"\");\n  const [error, setError] = useState(null);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/er_diagram\").then(async res => {\n      if (!res.ok) {\n        const text = await res.text();\n        throw new Error(`Server Error ${res.status}: ${text}`);\n      }\n      return res.json();\n    }).then(data => {\n      if (data.mermaid_code) {\n        setMermaidCode(data.mermaid_code);\n      } else if (data.error) {\n        throw new Error(data.error);\n      } else {\n        throw new Error(\"No Mermaid code received\");\n      }\n    }).catch(e => setError(e.message));\n  }, []);\n  useEffect(() => {\n    if (!mermaidCode || !containerRef.current) return;\n    mermaid.initialize({\n      startOnLoad: false\n    });\n    containerRef.current.innerHTML = \"\";\n    mermaid.render(\"mermaidDiagram\", mermaidCode).then(({\n      svg\n    }) => {\n      if (containerRef.current) {\n        containerRef.current.innerHTML = svg;\n      }\n    }).catch(e => setError(\"Mermaid render error: \" + e.message));\n  }, [mermaidCode]);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"red\",\n      padding: \"1rem\"\n    },\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n  if (!mermaidCode) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    children: \"Loading ER Diagram...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ER Diagram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ERDiagramPage, \"BfSp0ZamDZ5URQPhtSnsyV3BiAY=\");\n_c = ERDiagramPage;\nexport default ERDiagramPage;\nvar _c;\n$RefreshReg$(_c, \"ERDiagramPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","mermaid","jsxDEV","_jsxDEV","ERDiagramPage","_s","mermaidCode","setMermaidCode","error","setError","containerRef","fetch","then","res","ok","text","Error","status","json","data","mermaid_code","catch","e","message","current","initialize","startOnLoad","innerHTML","render","svg","style","color","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/ERDiagramPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport mermaid from \"mermaid\";\r\n\r\nconst ERDiagramPage = () => {\r\n  const [mermaidCode, setMermaidCode] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/er_diagram\")\r\n      .then(async (res) => {\r\n        if (!res.ok) {\r\n          const text = await res.text();\r\n          throw new Error(`Server Error ${res.status}: ${text}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.mermaid_code) {\r\n          setMermaidCode(data.mermaid_code);\r\n        } else if (data.error) {\r\n          throw new Error(data.error);\r\n        } else {\r\n          throw new Error(\"No Mermaid code received\");\r\n        }\r\n      })\r\n      .catch((e) => setError(e.message));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!mermaidCode || !containerRef.current) return;\r\n\r\n    mermaid.initialize({ startOnLoad: false });\r\n\r\n    containerRef.current.innerHTML = \"\";\r\n\r\n    mermaid\r\n      .render(\"mermaidDiagram\", mermaidCode)\r\n      .then(({ svg }) => {\r\n        if (containerRef.current) {\r\n          containerRef.current.innerHTML = svg;\r\n        }\r\n      })\r\n      .catch((e) => setError(\"Mermaid render error: \" + e.message));\r\n  }, [mermaidCode]);\r\n\r\n  if (error)\r\n    return (\r\n      <div style={{ color: \"red\", padding: \"1rem\" }}>\r\n        Error: {error}\r\n      </div>\r\n    );\r\n\r\n  if (!mermaidCode)\r\n    return <div style={{ padding: \"1rem\" }}>Loading ER Diagram...</div>;\r\n\r\n  return (\r\n    <div style={{ padding: \"1rem\" }}>\r\n      <h2>ER Diagram</h2>\r\n      <div ref={containerRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ERDiagramPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}