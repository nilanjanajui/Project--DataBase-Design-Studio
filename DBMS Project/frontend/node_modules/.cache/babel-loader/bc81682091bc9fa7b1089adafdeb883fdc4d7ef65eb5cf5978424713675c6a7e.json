{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\ActionPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { useStateContext } from \"../context/StateContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionPanel = ({\n  onAddBlock\n}) => {\n  _s();\n  const {\n    resetWorkflow\n  } = useStateContext();\n  const fileInputRef = useRef();\n  const steps = [{\n    label: \"Upload File\",\n    value: \"UploadFile\"\n  }, {\n    label: \"Convert to CSV\",\n    value: \"ConvertCSV\"\n  }, {\n    label: \"Clean Modify\",\n    value: \"cleanModify\"\n  }, {\n    label: \"FD Modified\",\n    value: \"fdModified\"\n  }, {\n    label: \"Normalized Table\",\n    value: \"normalizedTable\"\n  }, {\n    label: \"Key Detection\",\n    value: \"Keys\"\n  }, {\n    label: \"Dependency Check\",\n    value: \"dependencyCheck\"\n  }, {\n    label: \"Lossless Check\",\n    value: \"losslessCheck\"\n  }, {\n    label: \"ER Diagram\",\n    value: \"erDiagram\"\n  }];\n  const handleUpload = () => {\n    const file = fileInputRef.current.files[0];\n    if (file) {\n      onAddBlock(\"UploadFile\", file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"10px\",\n      backgroundColor: \"#f5f5f5\",\n      borderRadius: \"8px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Actions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        padding: \"8px 12px\",\n        marginBottom: \"10px\",\n        backgroundColor: \"#4d80b3\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"4px\",\n        cursor: \"pointer\"\n      },\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"8px\"\n      },\n      children: steps.slice(1).map(step => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onAddBlock(step.value),\n        style: {\n          padding: \"8px 12px\",\n          backgroundColor: \"#3a4b73\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          textAlign: \"left\"\n        },\n        children: step.label\n      }, step.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetWorkflow,\n      style: {\n        marginTop: \"20px\",\n        padding: \"8px 12px\",\n        backgroundColor: \"#d9534f\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"4px\",\n        cursor: \"pointer\"\n      },\n      children: \"Reset Workflow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionPanel, \"As5TPNdkDKTrUR5hFGEyTRg4Dlc=\", false, function () {\n  return [useStateContext];\n});\n_c = ActionPanel;\nexport default ActionPanel;\nvar _c;\n$RefreshReg$(_c, \"ActionPanel\");","map":{"version":3,"names":["React","useRef","useStateContext","jsxDEV","_jsxDEV","ActionPanel","onAddBlock","_s","resetWorkflow","fileInputRef","steps","label","value","handleUpload","file","current","files","style","padding","backgroundColor","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","marginBottom","onClick","color","border","cursor","display","flexDirection","gap","slice","map","step","textAlign","marginTop","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/ActionPanel.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useStateContext } from \"../context/StateContext\";\r\n\r\nconst ActionPanel = ({ onAddBlock }) => {\r\n  const { resetWorkflow } = useStateContext();\r\n  const fileInputRef = useRef();\r\n\r\n  const steps = [\r\n    { label: \"Upload File\", value: \"UploadFile\" },\r\n    { label: \"Convert to CSV\", value: \"ConvertCSV\" },\r\n    { label: \"Clean Modify\", value: \"cleanModify\" },\r\n    { label: \"FD Modified\", value: \"fdModified\" },\r\n    { label: \"Normalized Table\", value: \"normalizedTable\" },\r\n    { label: \"Key Detection\", value: \"Keys\" },\r\n    { label: \"Dependency Check\", value: \"dependencyCheck\" },\r\n    { label: \"Lossless Check\", value: \"losslessCheck\" },\r\n    { label: \"ER Diagram\", value: \"erDiagram\" },\r\n  ];\r\n\r\n  const handleUpload = () => {\r\n    const file = fileInputRef.current.files[0];\r\n    if (file) {\r\n      onAddBlock(\"UploadFile\", file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\", backgroundColor: \"#f5f5f5\", borderRadius: \"8px\" }}>\r\n      <h3>Actions</h3>\r\n      <input type=\"file\" ref={fileInputRef} style={{ marginBottom: \"10px\" }} />\r\n      <button \r\n        onClick={handleUpload}\r\n        style={{\r\n          padding: \"8px 12px\",\r\n          marginBottom: \"10px\",\r\n          backgroundColor: \"#4d80b3\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"4px\",\r\n          cursor: \"pointer\"\r\n        }}\r\n      >\r\n        Upload File\r\n      </button>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\r\n        {steps.slice(1).map((step) => (\r\n          <button \r\n            key={step.value} \r\n            onClick={() => onAddBlock(step.value)}\r\n            style={{\r\n              padding: \"8px 12px\",\r\n              backgroundColor: \"#3a4b73\",\r\n              color: \"white\",\r\n              border: \"none\",\r\n              borderRadius: \"4px\",\r\n              cursor: \"pointer\",\r\n              textAlign: \"left\"\r\n            }}\r\n          >\r\n            {step.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <button \r\n        onClick={resetWorkflow} \r\n        style={{\r\n          marginTop: \"20px\",\r\n          padding: \"8px 12px\",\r\n          backgroundColor: \"#d9534f\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"4px\",\r\n          cursor: \"pointer\"\r\n        }}\r\n      >\r\n        Reset Workflow\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}