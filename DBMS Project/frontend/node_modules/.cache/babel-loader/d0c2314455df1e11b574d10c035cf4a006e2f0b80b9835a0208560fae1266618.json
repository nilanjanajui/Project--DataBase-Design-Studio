{"ast":null,"code":"import { __name, configureSvgSize, log } from \"./chunk-3XYRH5AP.mjs\";\n\n// src/rendering-util/setupViewPortForSVG.ts\nvar setupViewPortForSVG = /* @__PURE__ */__name((svg, padding, cssDiagram, useMaxWidth) => {\n  svg.attr(\"class\", cssDiagram);\n  const {\n    width,\n    height,\n    x,\n    y\n  } = calculateDimensionsWithPadding(svg, padding);\n  configureSvgSize(svg, height, width, useMaxWidth);\n  const viewBox = createViewBox(x, y, width, height, padding);\n  svg.attr(\"viewBox\", viewBox);\n  log.debug(`viewBox configured: ${viewBox} with padding: ${padding}`);\n}, \"setupViewPortForSVG\");\nvar calculateDimensionsWithPadding = /* @__PURE__ */__name((svg, padding) => {\n  const bounds = svg.node()?.getBBox() || {\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0\n  };\n  return {\n    width: bounds.width + padding * 2,\n    height: bounds.height + padding * 2,\n    x: bounds.x,\n    y: bounds.y\n  };\n}, \"calculateDimensionsWithPadding\");\nvar createViewBox = /* @__PURE__ */__name((x, y, width, height, padding) => {\n  return `${x - padding} ${y - padding} ${width} ${height}`;\n}, \"createViewBox\");\nexport { setupViewPortForSVG };","map":{"version":3,"names":["__name","configureSvgSize","log","setupViewPortForSVG","svg","padding","cssDiagram","useMaxWidth","attr","width","height","x","y","calculateDimensionsWithPadding","viewBox","createViewBox","debug","bounds","node","getBBox"],"sources":["D:/DBMS/DBMS Project/frontend/node_modules/mermaid/dist/chunks/mermaid.core/chunk-SKB7J2MH.mjs"],"sourcesContent":["import {\n  __name,\n  configureSvgSize,\n  log\n} from \"./chunk-3XYRH5AP.mjs\";\n\n// src/rendering-util/setupViewPortForSVG.ts\nvar setupViewPortForSVG = /* @__PURE__ */ __name((svg, padding, cssDiagram, useMaxWidth) => {\n  svg.attr(\"class\", cssDiagram);\n  const { width, height, x, y } = calculateDimensionsWithPadding(svg, padding);\n  configureSvgSize(svg, height, width, useMaxWidth);\n  const viewBox = createViewBox(x, y, width, height, padding);\n  svg.attr(\"viewBox\", viewBox);\n  log.debug(`viewBox configured: ${viewBox} with padding: ${padding}`);\n}, \"setupViewPortForSVG\");\nvar calculateDimensionsWithPadding = /* @__PURE__ */ __name((svg, padding) => {\n  const bounds = svg.node()?.getBBox() || { width: 0, height: 0, x: 0, y: 0 };\n  return {\n    width: bounds.width + padding * 2,\n    height: bounds.height + padding * 2,\n    x: bounds.x,\n    y: bounds.y\n  };\n}, \"calculateDimensionsWithPadding\");\nvar createViewBox = /* @__PURE__ */ __name((x, y, width, height, padding) => {\n  return `${x - padding} ${y - padding} ${width} ${height}`;\n}, \"createViewBox\");\n\nexport {\n  setupViewPortForSVG\n};\n"],"mappings":"AAAA,SACEA,MAAM,EACNC,gBAAgB,EAChBC,GAAG,QACE,sBAAsB;;AAE7B;AACA,IAAIC,mBAAmB,GAAG,eAAgBH,MAAM,CAAC,CAACI,GAAG,EAAEC,OAAO,EAAEC,UAAU,EAAEC,WAAW,KAAK;EAC1FH,GAAG,CAACI,IAAI,CAAC,OAAO,EAAEF,UAAU,CAAC;EAC7B,MAAM;IAAEG,KAAK;IAAEC,MAAM;IAAEC,CAAC;IAAEC;EAAE,CAAC,GAAGC,8BAA8B,CAACT,GAAG,EAAEC,OAAO,CAAC;EAC5EJ,gBAAgB,CAACG,GAAG,EAAEM,MAAM,EAAED,KAAK,EAAEF,WAAW,CAAC;EACjD,MAAMO,OAAO,GAAGC,aAAa,CAACJ,CAAC,EAAEC,CAAC,EAAEH,KAAK,EAAEC,MAAM,EAAEL,OAAO,CAAC;EAC3DD,GAAG,CAACI,IAAI,CAAC,SAAS,EAAEM,OAAO,CAAC;EAC5BZ,GAAG,CAACc,KAAK,CAAC,uBAAuBF,OAAO,kBAAkBT,OAAO,EAAE,CAAC;AACtE,CAAC,EAAE,qBAAqB,CAAC;AACzB,IAAIQ,8BAA8B,GAAG,eAAgBb,MAAM,CAAC,CAACI,GAAG,EAAEC,OAAO,KAAK;EAC5E,MAAMY,MAAM,GAAGb,GAAG,CAACc,IAAI,CAAC,CAAC,EAAEC,OAAO,CAAC,CAAC,IAAI;IAAEV,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC;EAC3E,OAAO;IACLH,KAAK,EAAEQ,MAAM,CAACR,KAAK,GAAGJ,OAAO,GAAG,CAAC;IACjCK,MAAM,EAAEO,MAAM,CAACP,MAAM,GAAGL,OAAO,GAAG,CAAC;IACnCM,CAAC,EAAEM,MAAM,CAACN,CAAC;IACXC,CAAC,EAAEK,MAAM,CAACL;EACZ,CAAC;AACH,CAAC,EAAE,gCAAgC,CAAC;AACpC,IAAIG,aAAa,GAAG,eAAgBf,MAAM,CAAC,CAACW,CAAC,EAAEC,CAAC,EAAEH,KAAK,EAAEC,MAAM,EAAEL,OAAO,KAAK;EAC3E,OAAO,GAAGM,CAAC,GAAGN,OAAO,IAAIO,CAAC,GAAGP,OAAO,IAAII,KAAK,IAAIC,MAAM,EAAE;AAC3D,CAAC,EAAE,eAAe,CAAC;AAEnB,SACEP,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}