{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\ActionPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { useStateContext } from '../context/StateContext';\nimport './ActionPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionPanel = () => {\n  _s();\n  const {\n    addStep,\n    resetWorkflow\n  } = useStateContext();\n  const fileInputRef = useRef();\n  const steps = [{\n    label: \"Convert to CSV\",\n    value: \"ConvertCSV\"\n  }, {\n    label: \"Clean Modify\",\n    value: \"cleanModify\"\n  }, {\n    label: \"FD Modified\",\n    value: \"fdModified\"\n  }, {\n    label: \"Normalized Table\",\n    value: \"normalizedTable\"\n  }, {\n    label: \"Key Detection\",\n    value: \"Keys\"\n  }, {\n    label: \"Dependency Check\",\n    value: \"dependencyCheck\"\n  }, {\n    label: \"Lossless Check\",\n    value: \"losslessCheck\"\n  }, {\n    label: \"ER Diagram\",\n    value: \"erDiagram\"\n  }];\n  const handleUpload = async () => {\n    const file = fileInputRef.current.files[0];\n    if (file) {\n      await addStep(\"UploadFile\", file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"action-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Workflow Actions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        accept: \".xlsx,.xls,.csv\",\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        className: \"upload-button\",\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: steps.map(step => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addStep(step.value),\n        className: \"action-button\",\n        children: step.label\n      }, step.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetWorkflow,\n      className: \"reset-button\",\n      children: \"Reset Workflow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionPanel, \"wrKmHIqg31QOgR0NvVn7CiZB0G0=\", false, function () {\n  return [useStateContext];\n});\n_c = ActionPanel;\nexport default ActionPanel;\nvar _c;\n$RefreshReg$(_c, \"ActionPanel\");","map":{"version":3,"names":["React","useRef","useStateContext","jsxDEV","_jsxDEV","ActionPanel","_s","addStep","resetWorkflow","fileInputRef","steps","label","value","handleUpload","file","current","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","accept","onClick","map","step","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/ActionPanel.jsx"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport { useStateContext } from '../context/StateContext';\r\nimport './ActionPanel.css';\r\n\r\nconst ActionPanel = () => {\r\n  const { addStep, resetWorkflow } = useStateContext();\r\n  const fileInputRef = useRef();\r\n\r\n  const steps = [\r\n    { label: \"Convert to CSV\", value: \"ConvertCSV\" },\r\n    { label: \"Clean Modify\", value: \"cleanModify\" },\r\n    { label: \"FD Modified\", value: \"fdModified\" },\r\n    { label: \"Normalized Table\", value: \"normalizedTable\" },\r\n    { label: \"Key Detection\", value: \"Keys\" },\r\n    { label: \"Dependency Check\", value: \"dependencyCheck\" },\r\n    { label: \"Lossless Check\", value: \"losslessCheck\" },\r\n    { label: \"ER Diagram\", value: \"erDiagram\" },\r\n  ];\r\n\r\n  const handleUpload = async () => {\r\n    const file = fileInputRef.current.files[0];\r\n    if (file) {\r\n      await addStep(\"UploadFile\", file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"action-panel\">\r\n      <h3>Workflow Actions</h3>\r\n      <div className=\"file-upload-section\">\r\n        <input \r\n          type=\"file\" \r\n          ref={fileInputRef} \r\n          accept=\".xlsx,.xls,.csv\"\r\n          className=\"file-input\"\r\n        />\r\n        <button onClick={handleUpload} className=\"upload-button\">\r\n          Upload File\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"action-buttons\">\r\n        {steps.map((step) => (\r\n          <button\r\n            key={step.value}\r\n            onClick={() => addStep(step.value)}\r\n            className=\"action-button\"\r\n          >\r\n            {step.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <button onClick={resetWorkflow} className=\"reset-button\">\r\n        Reset Workflow\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}