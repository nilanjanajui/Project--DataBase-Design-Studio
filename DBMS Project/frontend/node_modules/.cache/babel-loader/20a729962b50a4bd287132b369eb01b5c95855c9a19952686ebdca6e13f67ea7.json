{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\OutputPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useStateContext } from '../context/StateContext';\nimport DraggableStep from './DraggableStep';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEY = 'workflowStepPositions';\nconst OutputPanel = () => {\n  _s();\n  const {\n    workflowSteps,\n    setCurrentCode\n  } = useStateContext();\n  const [positions, setPositions] = useState({});\n  const [scale, setScale] = useState(1);\n  const containerRef = useRef(null);\n\n  // Break points for curve lines: \n  // { lineKey (e.g. \"line-0\"): [{ x, y, t }, ...] }\n  // 't' = normalized position (0 to 1) along the curve segment (for potential future use)\n  const [breakPoints, setBreakPoints] = useState({});\n\n  // Ref to track if initial positions loaded or set\n  const positionsInitialized = useRef(false);\n\n  // Box and spacing sizes\n  const boxWidth = 140;\n  const boxHeight = 44;\n  const horizontalSpacing = 60;\n  const verticalSpacing = 60;\n\n  // Radius for dots on curve lines (break points)\n  const curveDotRadius = 6;\n\n  // Load saved positions from localStorage on mount\n  useEffect(() => {\n    const savedPositions = localStorage.getItem(STORAGE_KEY);\n    if (savedPositions) {\n      try {\n        const parsedPositions = JSON.parse(savedPositions);\n        setPositions(parsedPositions);\n        positionsInitialized.current = true;\n      } catch {\n        console.warn('Failed to parse saved positions');\n      }\n    }\n  }, []);\n\n  // If no saved positions, initialize default positions once\n  useEffect(() => {\n    if (positionsInitialized.current) return;\n    if (!containerRef.current) return;\n    const containerWidth = containerRef.current.clientWidth;\n    const initialPositions = {};\n    let x = 50; // left margin\n    let y = 60; // top margin\n\n    workflowSteps.forEach(step => {\n      // Wrap to next line if box won't fit\n      if (x + boxWidth > containerWidth - 20) {\n        x = 50;\n        y += boxHeight + verticalSpacing;\n      }\n      initialPositions[step] = {\n        x,\n        y\n      };\n      x += boxWidth + horizontalSpacing;\n    });\n    setPositions(prev => ({\n      ...prev,\n      ...initialPositions\n    }));\n    positionsInitialized.current = true;\n  }, [workflowSteps]);\n\n  // Save positions to localStorage whenever positions change\n  useEffect(() => {\n    if (positionsInitialized.current) {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(positions));\n    }\n  }, [positions]);\n  const handlePositionChange = (step, pos) => {\n    setPositions(prev => ({\n      ...prev,\n      [step]: pos\n    }));\n  };\n  const handleClickStep = async step => {\n    try {\n      const response = await axios.get(`/api/code/${step}`);\n      setCurrentCode(response.data.code || '');\n    } catch {\n      setCurrentCode('Failed to load code');\n    }\n  };\n\n  // Helper to calculate cubic Bezier point at t\n  // t in [0,1]\n  const cubicBezierPoint = (t, p0, p1, p2, p3) => {\n    const x = Math.pow(1 - t, 3) * p0.x + 3 * Math.pow(1 - t, 2) * t * p1.x + 3 * (1 - t) * Math.pow(t, 2) * p2.x + Math.pow(t, 3) * p3.x;\n    const y = Math.pow(1 - t, 3) * p0.y + 3 * Math.pow(1 - t, 2) * t * p1.y + 3 * (1 - t) * Math.pow(t, 2) * p2.y + Math.pow(t, 3) * p3.y;\n    return {\n      x,\n      y\n    };\n  };\n\n  // Handle drag on curve dot (break point)\n  const onCurveDotMouseDown = (lineKey, segmentIndex, t, e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const svg = e.target.ownerSVGElement;\n    if (!svg) return;\n    const onMouseMove = moveEvent => {\n      const pt = svg.createSVGPoint();\n      pt.x = moveEvent.clientX;\n      pt.y = moveEvent.clientY;\n      const cursorpt = pt.matrixTransform(svg.getScreenCTM().inverse());\n      setBreakPoints(prev => {\n        const lineBreaks = prev[lineKey] ? [...prev[lineKey]] : [];\n\n        // Clamp point position to a reasonable bounding box if needed\n        lineBreaks[segmentIndex] = {\n          x: cursorpt.x,\n          y: cursorpt.y,\n          t\n        };\n        return {\n          ...prev,\n          [lineKey]: lineBreaks\n        };\n      });\n    };\n    const onMouseUp = () => {\n      window.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('mouseup', onMouseUp);\n    };\n    window.addEventListener('mousemove', onMouseMove);\n    window.addEventListener('mouseup', onMouseUp);\n  };\n\n  // Render a single cubic bezier path with break points as multiple cubic segments\n  // Returns SVG <path> elements and draggable <circle> dots on break points\n  const renderBezierWithBreakPoints = (lineKey, p0, p1, p2, p3) => {\n    const lineBreaks = breakPoints[lineKey] || [];\n\n    // Sort break points by their t value (0 to 1)\n    const sortedBreaks = [...lineBreaks].sort((a, b) => a.t - b.t);\n\n    // We will split the bezier into segments: from p0 to first break, between breaks, last break to p3\n    // Each segment is itself a cubic bezier curve\n\n    const segments = [];\n    let lastT = 0;\n\n    // Helper function to interpolate between two cubic bezier curves\n    // Using De Casteljau's algorithm is complicated; for simplicity here,\n    // we will just approximate by linear interpolation of control points between t0 and t1\n    // This works well enough for user-manipulated bends\n\n    const lerp = (a, b, t) => a + (b - a) * t;\n    const lerpPoint = (A, B, t) => ({\n      x: lerp(A.x, B.x, t),\n      y: lerp(A.y, B.y, t)\n    });\n    for (let i = 0; i <= sortedBreaks.length; i++) {\n      const startT = lastT;\n      const endT = i < sortedBreaks.length ? sortedBreaks[i].t : 1;\n\n      // Calculate control points for segment from startT to endT\n\n      // Use linear interpolation to get points on main bezier at startT and endT\n      const segmentP0 = cubicBezierPoint(startT, p0, p1, p2, p3);\n      const segmentP3 = cubicBezierPoint(endT, p0, p1, p2, p3);\n\n      // For control points, interpolate between p1 and p2 relative to startT/endT\n\n      // This is an approximation for user-friendly adjustable segments\n      const tRange = endT - startT;\n      const normalizedP1 = lerpPoint(cubicBezierPoint(startT + tRange * 1 / 3, p0, p1, p2, p3), segmentP0, 1);\n      const normalizedP2 = lerpPoint(cubicBezierPoint(startT + tRange * 2 / 3, p0, p1, p2, p3), segmentP3, 1);\n      segments.push({\n        startT,\n        endT,\n        d: `M${segmentP0.x},${segmentP0.y} C${normalizedP1.x},${normalizedP1.y} ${normalizedP2.x},${normalizedP2.y} ${segmentP3.x},${segmentP3.y}`\n      });\n      lastT = endT;\n    }\n\n    // Render all segments as separate paths and break points as circles\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [segments.map((seg, idx) => /*#__PURE__*/_jsxDEV(\"path\", {\n        d: seg.d,\n        fill: \"none\",\n        stroke: \"rgba(184, 212, 249, 0.9)\",\n        strokeWidth: \"1.5\",\n        markerEnd: idx === segments.length - 1 ? \"url(#arrowhead)\" : undefined\n      }, `${lineKey}-seg-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)), sortedBreaks.map((pt, idx) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: pt.x,\n        cy: pt.y,\n        r: curveDotRadius,\n        fill: \"rgba(103, 121, 136, 0.9)\",\n        stroke: \"#fff\",\n        strokeWidth: 1,\n        style: {\n          cursor: 'grab'\n        },\n        onMouseDown: e => onCurveDotMouseDown(lineKey, idx, pt.t, e)\n      }, `${lineKey}-dot-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true);\n  };\n\n  // Render all lines between workflow steps, with breaks and adjusted line endpoints based on box positions\n  const renderLines = () => {\n    const dotRadius = 4;\n    const lines = [];\n    const containerWidth = containerRef.current ? containerRef.current.clientWidth : 1000; // fallback width\n\n    for (let i = 0; i < workflowSteps.length - 1; i++) {\n      const lineKey = `line-${i}`;\n      const from = positions[workflowSteps[i]];\n      const to = positions[workflowSteps[i + 1]];\n      if (from && to) {\n        const fromNearRightEdge = from.x + boxWidth > containerWidth - 45;\n        const toNearRightEdge = to.x + boxWidth > containerWidth - 45;\n\n        // Determine outgoing start point on 'from' box\n        const startX = fromNearRightEdge ? from.x : from.x + boxWidth;\n        const startY = from.y + boxHeight / 2;\n\n        // Determine incoming end point on 'to' box\n        const endX = toNearRightEdge ? to.x + boxWidth : to.x;\n        const endY = to.y + boxHeight / 2;\n\n        // Add/subtract dot radius to have line start/end exactly at dot center\n        const adjustedStartX = fromNearRightEdge ? startX : startX;\n        const adjustedEndX = toNearRightEdge ? endX : endX;\n\n        // Define control points for the curve\n        const deltaX = adjustedEndX - adjustedStartX;\n        const deltaY = endY - startY;\n\n        // Calculate control points for smooth cubic Bezier curve\n        // Curve bends horizontally or vertically depending on delta\n        let controlX1, controlY1, controlX2, controlY2;\n        if (Math.abs(deltaX) > Math.abs(deltaY)) {\n          controlX1 = adjustedStartX + deltaX / 2;\n          controlY1 = startY;\n          controlX2 = adjustedStartX + deltaX / 2;\n          controlY2 = endY;\n        } else {\n          controlX1 = adjustedStartX;\n          controlY1 = startY + deltaY / 2;\n          controlX2 = adjustedEndX;\n          controlY2 = startY + deltaY / 2;\n        }\n\n        // Render bezier curve with break points\n        lines.push(/*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: renderBezierWithBreakPoints(lineKey, {\n            x: adjustedStartX,\n            y: startY\n          }, {\n            x: controlX1,\n            y: controlY1\n          }, {\n            x: controlX2,\n            y: controlY2\n          }, {\n            x: adjustedEndX,\n            y: endY\n          })\n        }, lineKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return lines;\n  };\n  const zoomIn = () => setScale(s => Math.min(2, +(s + 0.1).toFixed(2)));\n  const zoomOut = () => setScale(s => Math.max(0.5, +(s - 0.1).toFixed(2)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"output-panel\",\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative',\n      overflow: 'auto',\n      padding: 20\n    },\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zoom-controls\",\n      style: {\n        position: 'absolute',\n        top: 5,\n        right: 5,\n        zIndex: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"zoom-btn\",\n        onClick: zoomIn,\n        title: \"Zoom in\",\n        style: {\n          marginRight: 5,\n          textAlign: 'center'\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"zoom-btn\",\n        onClick: zoomOut,\n        title: \"Zoom out\",\n        children: \"\\u2212\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-wrapper\",\n      style: {\n        transform: `scale(${scale})`,\n        transformOrigin: '0 0',\n        position: 'relative',\n        minHeight: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          pointerEvents: 'none',\n          overflow: 'visible',\n          top: 0,\n          left: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"marker\", {\n            id: \"arrowhead\",\n            markerWidth: \"10\",\n            markerHeight: \"7\",\n            refX: \"10\",\n            refY: \"3.5\",\n            orient: \"auto\",\n            fill: \"rgba(103, 121, 136, 0.9)\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"0 0, 10 3.5, 0 7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), renderLines()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), workflowSteps.map((step, index) => /*#__PURE__*/_jsxDEV(DraggableStep, {\n        step: step,\n        position: positions[step] || {\n          x: 0,\n          y: 0\n        },\n        onPositionChange: handlePositionChange,\n        onClick: handleClickStep,\n        isFirst: index === 0\n      }, step, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(OutputPanel, \"5/MB1bKAkll7V5VpiFiWh1ObeuY=\", false, function () {\n  return [useStateContext];\n});\n_c = OutputPanel;\nexport default OutputPanel;\nvar _c;\n$RefreshReg$(_c, \"OutputPanel\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useStateContext","DraggableStep","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","STORAGE_KEY","OutputPanel","_s","workflowSteps","setCurrentCode","positions","setPositions","scale","setScale","containerRef","breakPoints","setBreakPoints","positionsInitialized","boxWidth","boxHeight","horizontalSpacing","verticalSpacing","curveDotRadius","savedPositions","localStorage","getItem","parsedPositions","JSON","parse","current","console","warn","containerWidth","clientWidth","initialPositions","x","y","forEach","step","prev","setItem","stringify","handlePositionChange","pos","handleClickStep","response","get","data","code","cubicBezierPoint","t","p0","p1","p2","p3","Math","pow","onCurveDotMouseDown","lineKey","segmentIndex","e","preventDefault","stopPropagation","svg","target","ownerSVGElement","onMouseMove","moveEvent","pt","createSVGPoint","clientX","clientY","cursorpt","matrixTransform","getScreenCTM","inverse","lineBreaks","onMouseUp","window","removeEventListener","addEventListener","renderBezierWithBreakPoints","sortedBreaks","sort","a","b","segments","lastT","lerp","lerpPoint","A","B","i","length","startT","endT","segmentP0","segmentP3","tRange","normalizedP1","normalizedP2","push","d","children","map","seg","idx","fill","stroke","strokeWidth","markerEnd","undefined","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","r","style","cursor","onMouseDown","renderLines","dotRadius","lines","from","to","fromNearRightEdge","toNearRightEdge","startX","startY","endX","endY","adjustedStartX","adjustedEndX","deltaX","deltaY","controlX1","controlY1","controlX2","controlY2","abs","zoomIn","s","min","toFixed","zoomOut","max","className","width","height","position","overflow","padding","ref","top","right","zIndex","onClick","title","marginRight","textAlign","transform","transformOrigin","minHeight","pointerEvents","left","id","markerWidth","markerHeight","refX","refY","orient","points","index","onPositionChange","isFirst","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/OutputPanel.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useStateContext } from '../context/StateContext';\r\nimport DraggableStep from './DraggableStep';\r\nimport axios from 'axios';\r\n\r\nconst STORAGE_KEY = 'workflowStepPositions';\r\n\r\nconst OutputPanel = () => {\r\n  const { workflowSteps, setCurrentCode } = useStateContext();\r\n  const [positions, setPositions] = useState({});\r\n  const [scale, setScale] = useState(1);\r\n  const containerRef = useRef(null);\r\n\r\n  // Break points for curve lines: \r\n  // { lineKey (e.g. \"line-0\"): [{ x, y, t }, ...] }\r\n  // 't' = normalized position (0 to 1) along the curve segment (for potential future use)\r\n  const [breakPoints, setBreakPoints] = useState({});\r\n\r\n  // Ref to track if initial positions loaded or set\r\n  const positionsInitialized = useRef(false);\r\n\r\n  // Box and spacing sizes\r\n  const boxWidth = 140;\r\n  const boxHeight = 44;\r\n  const horizontalSpacing = 60;\r\n  const verticalSpacing = 60;\r\n\r\n  // Radius for dots on curve lines (break points)\r\n  const curveDotRadius = 6;\r\n\r\n  // Load saved positions from localStorage on mount\r\n  useEffect(() => {\r\n    const savedPositions = localStorage.getItem(STORAGE_KEY);\r\n    if (savedPositions) {\r\n      try {\r\n        const parsedPositions = JSON.parse(savedPositions);\r\n        setPositions(parsedPositions);\r\n        positionsInitialized.current = true;\r\n      } catch {\r\n        console.warn('Failed to parse saved positions');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // If no saved positions, initialize default positions once\r\n  useEffect(() => {\r\n    if (positionsInitialized.current) return;\r\n    if (!containerRef.current) return;\r\n\r\n    const containerWidth = containerRef.current.clientWidth;\r\n    const initialPositions = {};\r\n\r\n    let x = 50; // left margin\r\n    let y = 60; // top margin\r\n\r\n    workflowSteps.forEach((step) => {\r\n      // Wrap to next line if box won't fit\r\n      if (x + boxWidth > containerWidth - 20) {\r\n        x = 50;\r\n        y += boxHeight + verticalSpacing;\r\n      }\r\n      initialPositions[step] = { x, y };\r\n      x += boxWidth + horizontalSpacing;\r\n    });\r\n\r\n    setPositions((prev) => ({ ...prev, ...initialPositions }));\r\n    positionsInitialized.current = true;\r\n  }, [workflowSteps]);\r\n\r\n  // Save positions to localStorage whenever positions change\r\n  useEffect(() => {\r\n    if (positionsInitialized.current) {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(positions));\r\n    }\r\n  }, [positions]);\r\n\r\n  const handlePositionChange = (step, pos) => {\r\n    setPositions((prev) => ({ ...prev, [step]: pos }));\r\n  };\r\n\r\n  const handleClickStep = async (step) => {\r\n    try {\r\n      const response = await axios.get(`/api/code/${step}`);\r\n      setCurrentCode(response.data.code || '');\r\n    } catch {\r\n      setCurrentCode('Failed to load code');\r\n    }\r\n  };\r\n\r\n  // Helper to calculate cubic Bezier point at t\r\n  // t in [0,1]\r\n  const cubicBezierPoint = (t, p0, p1, p2, p3) => {\r\n    const x = \r\n      Math.pow(1 - t, 3) * p0.x +\r\n      3 * Math.pow(1 - t, 2) * t * p1.x +\r\n      3 * (1 - t) * Math.pow(t, 2) * p2.x +\r\n      Math.pow(t, 3) * p3.x;\r\n    const y = \r\n      Math.pow(1 - t, 3) * p0.y +\r\n      3 * Math.pow(1 - t, 2) * t * p1.y +\r\n      3 * (1 - t) * Math.pow(t, 2) * p2.y +\r\n      Math.pow(t, 3) * p3.y;\r\n    return { x, y };\r\n  };\r\n\r\n  // Handle drag on curve dot (break point)\r\n  const onCurveDotMouseDown = (lineKey, segmentIndex, t, e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const svg = e.target.ownerSVGElement;\r\n    if (!svg) return;\r\n\r\n    const onMouseMove = (moveEvent) => {\r\n      const pt = svg.createSVGPoint();\r\n      pt.x = moveEvent.clientX;\r\n      pt.y = moveEvent.clientY;\r\n      const cursorpt = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n\r\n      setBreakPoints((prev) => {\r\n        const lineBreaks = prev[lineKey] ? [...prev[lineKey]] : [];\r\n\r\n        // Clamp point position to a reasonable bounding box if needed\r\n        lineBreaks[segmentIndex] = { x: cursorpt.x, y: cursorpt.y, t };\r\n        return { ...prev, [lineKey]: lineBreaks };\r\n      });\r\n    };\r\n\r\n    const onMouseUp = () => {\r\n      window.removeEventListener('mousemove', onMouseMove);\r\n      window.removeEventListener('mouseup', onMouseUp);\r\n    };\r\n\r\n    window.addEventListener('mousemove', onMouseMove);\r\n    window.addEventListener('mouseup', onMouseUp);\r\n  };\r\n\r\n  // Render a single cubic bezier path with break points as multiple cubic segments\r\n  // Returns SVG <path> elements and draggable <circle> dots on break points\r\n  const renderBezierWithBreakPoints = (lineKey, p0, p1, p2, p3) => {\r\n    const lineBreaks = breakPoints[lineKey] || [];\r\n\r\n    // Sort break points by their t value (0 to 1)\r\n    const sortedBreaks = [...lineBreaks].sort((a, b) => a.t - b.t);\r\n\r\n    // We will split the bezier into segments: from p0 to first break, between breaks, last break to p3\r\n    // Each segment is itself a cubic bezier curve\r\n\r\n    const segments = [];\r\n    let lastT = 0;\r\n\r\n    // Helper function to interpolate between two cubic bezier curves\r\n    // Using De Casteljau's algorithm is complicated; for simplicity here,\r\n    // we will just approximate by linear interpolation of control points between t0 and t1\r\n    // This works well enough for user-manipulated bends\r\n\r\n    const lerp = (a, b, t) => a + (b - a) * t;\r\n    const lerpPoint = (A, B, t) => ({ x: lerp(A.x, B.x, t), y: lerp(A.y, B.y, t) });\r\n\r\n    for (let i = 0; i <= sortedBreaks.length; i++) {\r\n      const startT = lastT;\r\n      const endT = i < sortedBreaks.length ? sortedBreaks[i].t : 1;\r\n\r\n      // Calculate control points for segment from startT to endT\r\n\r\n      // Use linear interpolation to get points on main bezier at startT and endT\r\n      const segmentP0 = cubicBezierPoint(startT, p0, p1, p2, p3);\r\n      const segmentP3 = cubicBezierPoint(endT, p0, p1, p2, p3);\r\n\r\n      // For control points, interpolate between p1 and p2 relative to startT/endT\r\n\r\n      // This is an approximation for user-friendly adjustable segments\r\n      const tRange = endT - startT;\r\n      const normalizedP1 = lerpPoint(\r\n        cubicBezierPoint(startT + tRange * 1 / 3, p0, p1, p2, p3),\r\n        segmentP0,\r\n        1\r\n      );\r\n      const normalizedP2 = lerpPoint(\r\n        cubicBezierPoint(startT + tRange * 2 / 3, p0, p1, p2, p3),\r\n        segmentP3,\r\n        1\r\n      );\r\n\r\n      segments.push({\r\n        startT,\r\n        endT,\r\n        d: `M${segmentP0.x},${segmentP0.y} C${normalizedP1.x},${normalizedP1.y} ${normalizedP2.x},${normalizedP2.y} ${segmentP3.x},${segmentP3.y}`,\r\n      });\r\n\r\n      lastT = endT;\r\n    }\r\n\r\n    // Render all segments as separate paths and break points as circles\r\n    return (\r\n      <>\r\n        {segments.map((seg, idx) => (\r\n          <path\r\n            key={`${lineKey}-seg-${idx}`}\r\n            d={seg.d}\r\n            fill=\"none\"\r\n            stroke=\"rgba(184, 212, 249, 0.9)\"\r\n            strokeWidth=\"1.5\"\r\n            markerEnd={idx === segments.length - 1 ? \"url(#arrowhead)\" : undefined}\r\n          />\r\n        ))}\r\n\r\n        {sortedBreaks.map((pt, idx) => (\r\n          <circle\r\n            key={`${lineKey}-dot-${idx}`}\r\n            cx={pt.x}\r\n            cy={pt.y}\r\n            r={curveDotRadius}\r\n            fill=\"rgba(103, 121, 136, 0.9)\"\r\n            stroke=\"#fff\"\r\n            strokeWidth={1}\r\n            style={{ cursor: 'grab' }}\r\n            onMouseDown={(e) => onCurveDotMouseDown(lineKey, idx, pt.t, e)}\r\n          />\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  // Render all lines between workflow steps, with breaks and adjusted line endpoints based on box positions\r\n  const renderLines = () => {\r\n    const dotRadius = 4;\r\n    const lines = [];\r\n    const containerWidth = containerRef.current ? containerRef.current.clientWidth : 1000; // fallback width\r\n\r\n    for (let i = 0; i < workflowSteps.length - 1; i++) {\r\n      const lineKey = `line-${i}`;\r\n      const from = positions[workflowSteps[i]];\r\n      const to = positions[workflowSteps[i + 1]];\r\n\r\n      if (from && to) {\r\n        const fromNearRightEdge = from.x + boxWidth > containerWidth - 45;\r\n        const toNearRightEdge = to.x + boxWidth > containerWidth - 45;\r\n\r\n        // Determine outgoing start point on 'from' box\r\n        const startX = fromNearRightEdge ? from.x : from.x + boxWidth;\r\n        const startY = from.y + boxHeight / 2;\r\n\r\n        // Determine incoming end point on 'to' box\r\n        const endX = toNearRightEdge ? to.x + boxWidth : to.x;\r\n        const endY = to.y + boxHeight / 2;\r\n\r\n        // Add/subtract dot radius to have line start/end exactly at dot center\r\n        const adjustedStartX = fromNearRightEdge ? startX : startX;\r\n        const adjustedEndX = toNearRightEdge ? endX : endX;\r\n\r\n        // Define control points for the curve\r\n        const deltaX = adjustedEndX - adjustedStartX;\r\n        const deltaY = endY - startY;\r\n\r\n        // Calculate control points for smooth cubic Bezier curve\r\n        // Curve bends horizontally or vertically depending on delta\r\n        let controlX1, controlY1, controlX2, controlY2;\r\n\r\n        if (Math.abs(deltaX) > Math.abs(deltaY)) {\r\n          controlX1 = adjustedStartX + deltaX / 2;\r\n          controlY1 = startY;\r\n          controlX2 = adjustedStartX + deltaX / 2;\r\n          controlY2 = endY;\r\n        } else {\r\n          controlX1 = adjustedStartX;\r\n          controlY1 = startY + deltaY / 2;\r\n          controlX2 = adjustedEndX;\r\n          controlY2 = startY + deltaY / 2;\r\n        }\r\n\r\n        // Render bezier curve with break points\r\n        lines.push(\r\n          <React.Fragment key={lineKey}>\r\n            {renderBezierWithBreakPoints(\r\n              lineKey,\r\n              { x: adjustedStartX, y: startY },\r\n              { x: controlX1, y: controlY1 },\r\n              { x: controlX2, y: controlY2 },\r\n              { x: adjustedEndX, y: endY }\r\n            )}\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n\r\n    return lines;\r\n  };\r\n\r\n  const zoomIn = () => setScale((s) => Math.min(2, +(s + 0.1).toFixed(2)));\r\n  const zoomOut = () => setScale((s) => Math.max(0.5, +(s - 0.1).toFixed(2)));\r\n\r\n  return (\r\n    <div\r\n      className=\"output-panel\"\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        padding: 20,\r\n      }}\r\n      ref={containerRef}\r\n    >\r\n      {/* Zoom controls */}\r\n      <div\r\n        className=\"zoom-controls\"\r\n        style={{ position: 'absolute', top: 5, right: 5, zIndex: 5 }}\r\n      >\r\n        <button\r\n          className=\"zoom-btn\"\r\n          onClick={zoomIn}\r\n          title=\"Zoom in\"\r\n          style={{ marginRight: 5, textAlign: 'center' }}\r\n        >\r\n          +\r\n        </button>\r\n        <button className=\"zoom-btn\" onClick={zoomOut} title=\"Zoom out\">\r\n          −\r\n        </button>\r\n      </div>\r\n\r\n      {/* Canvas wrapper */}\r\n      <div\r\n        className=\"canvas-wrapper\"\r\n        style={{\r\n          transform: `scale(${scale})`,\r\n          transformOrigin: '0 0',\r\n          position: 'relative',\r\n          minHeight: '100%',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {/* SVG lines */}\r\n        <svg\r\n          style={{\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            pointerEvents: 'none',\r\n            overflow: 'visible',\r\n            top: 0,\r\n            left: 0,\r\n          }}\r\n        >\r\n          <defs>\r\n            <marker\r\n              id=\"arrowhead\"\r\n              markerWidth=\"10\"\r\n              markerHeight=\"7\"\r\n              refX=\"10\"\r\n              refY=\"3.5\"\r\n              orient=\"auto\"\r\n              fill=\"rgba(103, 121, 136, 0.9)\"\r\n            >\r\n              <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n            </marker>\r\n          </defs>\r\n          {renderLines()}\r\n        </svg>\r\n\r\n        {/* Draggable steps */}\r\n        {workflowSteps.map((step, index) => (\r\n          <DraggableStep\r\n            key={step}\r\n            step={step}\r\n            position={positions[step] || { x: 0, y: 0 }}\r\n            onPositionChange={handlePositionChange}\r\n            onClick={handleClickStep}\r\n            isFirst={index === 0}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutputPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}