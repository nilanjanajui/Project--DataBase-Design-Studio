{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\OutputPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DraggableButton from \"./DraggableButton\";\nimport { useStateContext } from \"../context/StateContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OutputPanel = () => {\n  _s();\n  const {\n    addStep,\n    fetchCode,\n    loadNormalizedTables\n  } = useStateContext();\n  const [blocks, setBlocks] = useState([]);\n  const [connections, setConnections] = useState([]);\n\n  // eslint-disable-next-line\n  const handleAddBlock = (stepName, file = null) => {\n    const newId = `${stepName}-${blocks.length}`;\n    const newBlock = {\n      id: newId,\n      label: stepName,\n      position: {\n        x: 100,\n        y: 50 + blocks.length * 80\n      },\n      file\n    };\n    setBlocks(prev => [...prev, newBlock]);\n\n    // Connect to previous block\n    if (blocks.length > 0) {\n      setConnections(prev => [...prev, {\n        from: blocks[blocks.length - 1].id,\n        to: newId\n      }]);\n    }\n  };\n  const handleDrag = (id, newPos) => {\n    setBlocks(prev => prev.map(block => block.id === id ? {\n      ...block,\n      position: newPos\n    } : block));\n  };\n  const handleClickBlock = async id => {\n    const block = blocks.find(b => b.id === id);\n    if (block) {\n      if (block.label === \"UploadFile\") {\n        await addStep(block.label, block.file);\n      } else {\n        await addStep(block.label);\n        await fetchCode(block.label);\n        if (block.label === \"normalizedTable\") {\n          await loadNormalizedTables();\n        }\n      }\n    }\n  };\n  const getCenter = pos => ({\n    x: pos.x + 50,\n    y: pos.y + 20\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"500px\",\n      background: \"#f0f0f0\",\n      border: \"1px solid #ccc\"\n    },\n    children: [blocks.map(block => /*#__PURE__*/_jsxDEV(DraggableButton, {\n      id: block.id,\n      label: block.label,\n      position: block.position,\n      onDrag: handleDrag,\n      onClick: handleClickBlock\n    }, block.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        pointerEvents: \"none\"\n      },\n      children: [connections.map((conn, idx) => {\n        const fromBlock = blocks.find(b => b.id === conn.from);\n        const toBlock = blocks.find(b => b.id === conn.to);\n        if (!fromBlock || !toBlock) return null;\n        const fromPos = getCenter(fromBlock.position);\n        const toPos = getCenter(toBlock.position);\n        return /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: fromPos.x,\n          y1: fromPos.y,\n          x2: toPos.x,\n          y2: toPos.y,\n          stroke: \"#333\",\n          strokeWidth: \"2\",\n          markerEnd: \"url(#arrowhead)\"\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrowhead\",\n          markerWidth: \"10\",\n          markerHeight: \"7\",\n          refX: \"0\",\n          refY: \"3.5\",\n          orient: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"0 0, 10 3.5, 0 7\",\n            fill: \"#333\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(OutputPanel, \"eXuLvewuoiLwO8jYPIXLvvdTglA=\", false, function () {\n  return [useStateContext];\n});\n_c = OutputPanel;\nexport default OutputPanel;\nvar _c;\n$RefreshReg$(_c, \"OutputPanel\");","map":{"version":3,"names":["React","useState","DraggableButton","useStateContext","jsxDEV","_jsxDEV","OutputPanel","_s","addStep","fetchCode","loadNormalizedTables","blocks","setBlocks","connections","setConnections","handleAddBlock","stepName","file","newId","length","newBlock","id","label","position","x","y","prev","from","to","handleDrag","newPos","map","block","handleClickBlock","find","b","getCenter","pos","style","width","height","background","border","children","onDrag","onClick","fileName","_jsxFileName","lineNumber","columnNumber","top","left","pointerEvents","conn","idx","fromBlock","toBlock","fromPos","toPos","x1","y1","x2","y2","stroke","strokeWidth","markerEnd","markerWidth","markerHeight","refX","refY","orient","points","fill","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/OutputPanel.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport DraggableButton from \"./DraggableButton\";\r\nimport { useStateContext } from \"../context/StateContext\";\r\n\r\nconst OutputPanel = () => {\r\n  const { addStep, fetchCode, loadNormalizedTables } = useStateContext();\r\n  const [blocks, setBlocks] = useState([]);\r\n  const [connections, setConnections] = useState([]);\r\n\r\n  // eslint-disable-next-line\r\n  const handleAddBlock = (stepName, file = null) => {\r\n    const newId = `${stepName}-${blocks.length}`;\r\n    const newBlock = {\r\n      id: newId,\r\n      label: stepName,\r\n      position: { x: 100, y: 50 + blocks.length * 80 },\r\n      file,\r\n    };\r\n    setBlocks((prev) => [...prev, newBlock]);\r\n\r\n    // Connect to previous block\r\n    if (blocks.length > 0) {\r\n      setConnections((prev) => [\r\n        ...prev,\r\n        { from: blocks[blocks.length - 1].id, to: newId },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleDrag = (id, newPos) => {\r\n    setBlocks((prev) =>\r\n      prev.map((block) =>\r\n        block.id === id ? { ...block, position: newPos } : block\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleClickBlock = async (id) => {\r\n    const block = blocks.find((b) => b.id === id);\r\n    if (block) {\r\n      if (block.label === \"UploadFile\") {\r\n        await addStep(block.label, block.file);\r\n      } else {\r\n        await addStep(block.label);\r\n        await fetchCode(block.label);\r\n        if (block.label === \"normalizedTable\") {\r\n          await loadNormalizedTables();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const getCenter = (pos) => ({ x: pos.x + 50, y: pos.y + 20 });\r\n\r\n  return (\r\n    <div style={{ position: \"relative\", width: \"100%\", height: \"500px\", background: \"#f0f0f0\", border: \"1px solid #ccc\" }}>\r\n      {blocks.map((block) => (\r\n        <DraggableButton\r\n          key={block.id}\r\n          id={block.id}\r\n          label={block.label}\r\n          position={block.position}\r\n          onDrag={handleDrag}\r\n          onClick={handleClickBlock}\r\n        />\r\n      ))}\r\n      <svg style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\", pointerEvents: \"none\" }}>\r\n        {connections.map((conn, idx) => {\r\n          const fromBlock = blocks.find((b) => b.id === conn.from);\r\n          const toBlock = blocks.find((b) => b.id === conn.to);\r\n          if (!fromBlock || !toBlock) return null;\r\n\r\n          const fromPos = getCenter(fromBlock.position);\r\n          const toPos = getCenter(toBlock.position);\r\n\r\n          return (\r\n            <line\r\n              key={idx}\r\n              x1={fromPos.x}\r\n              y1={fromPos.y}\r\n              x2={toPos.x}\r\n              y2={toPos.y}\r\n              stroke=\"#333\"\r\n              strokeWidth=\"2\"\r\n              markerEnd=\"url(#arrowhead)\"\r\n            />\r\n          );\r\n        })}\r\n        <defs>\r\n          <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\" refX=\"0\" refY=\"3.5\" orient=\"auto\">\r\n            <polygon points=\"0 0, 10 3.5, 0 7\" fill=\"#333\" />\r\n          </marker>\r\n        </defs>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutputPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}