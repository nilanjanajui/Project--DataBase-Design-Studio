{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\ActionPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { uploadFile, triggerBackendStep, triggerLosslessCheck } from '../api';\nimport { useStateContext } from '../context/StateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionPanel = () => {\n  _s();\n  const {\n    addMessage,\n    addWorkflowStep,\n    fetchNormalizedTables,\n    originalFDs,\n    decomposedSchemas,\n    fetchOriginalFDs,\n    fetchDecomposedSchemas,\n    checkDependencyPreservation,\n    setErDiagramGenerated,\n    setFDGenerated\n  } = useStateContext();\n  const fileInputRef = useRef(null);\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    try {\n      const message = await uploadFile(file);\n      addMessage(message);\n      addWorkflowStep('Upload');\n    } catch (error) {\n      addMessage(error.message);\n    }\n  };\n  const handleBackendAction = async stepName => {\n    try {\n      const message = await triggerBackendStep(stepName);\n      addMessage(message);\n      addWorkflowStep(stepName);\n      if (stepName === 'FDModified') {\n        await fetchOriginalFDs();\n        setFDGenerated(true); // ✅ Set flag to true\n        console.log('FDGenerated set to true');\n      }\n      if (stepName === 'FDModified') {\n        await fetch('/api/detected_fds').then(res => res.json()).then(data => {\n          setOriginalFDs(data.fds || []);\n          setFDGenerated(true); // ✅ Should now work\n        });\n      }\n      if (stepName === 'NormalizeTable') {\n        await fetchDecomposedSchemas();\n        await fetchNormalizedTables();\n      }\n      if (stepName === 'ERDiagram') {\n        setErDiagramGenerated(true); // <-- Set the flag TRUE when ER Diagram is generated\n      }\n    } catch (error) {\n      addMessage(error.message);\n    }\n  };\n  const handleDependencyPreservation = async () => {\n    try {\n      await fetchOriginalFDs(); // Ensure always fetch fresh FDs\n      await fetchDecomposedSchemas(); // Ensure always fetch fresh Schemas\n\n      if (!originalFDs || originalFDs.length === 0) {\n        addMessage('Error: Functional Dependencies are missing or invalid.');\n        return;\n      }\n      if (!decomposedSchemas || decomposedSchemas.length === 0) {\n        addMessage('Error: Decomposed Schemas are missing or invalid.');\n        return;\n      }\n      const message = await checkDependencyPreservation(originalFDs, decomposedSchemas);\n      addMessage(message);\n    } catch (error) {\n      addMessage(error.message || 'Unknown error occurred during dependency preservation check.');\n    }\n  };\n  const handleLosslessCheck = async () => {\n    try {\n      const message = await triggerLosslessCheck();\n      addMessage(message);\n      addWorkflowStep('LosslessCheck');\n    } catch (error) {\n      addMessage(error.message || 'Unknown error during Lossless Check');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"action-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Action Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: handleFileUpload,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fileInputRef.current.click(),\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBackendAction('ConvertToCSV'),\n        children: \"Convert to CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBackendAction('CleanModify'),\n        children: \"Clean & Modify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBackendAction('FDModified'),\n        children: \"Detect Functional Dependencies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBackendAction('NormalizeTable'),\n        children: \"Normalize Tables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBackendAction('KeyDetection'),\n        children: \"Detect Keys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDependencyPreservation,\n        children: \"Check Dependency Preservation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLosslessCheck,\n        children: \"Check Lossless Decomposition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBackendAction('ERDiagram'),\n        children: \"Generate ER Diagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionPanel, \"i6qMdXXNPA8q0QxALMeTqSyCJVw=\", false, function () {\n  return [useStateContext];\n});\n_c = ActionPanel;\nexport default ActionPanel;\nvar _c;\n$RefreshReg$(_c, \"ActionPanel\");","map":{"version":3,"names":["React","useRef","uploadFile","triggerBackendStep","triggerLosslessCheck","useStateContext","jsxDEV","_jsxDEV","ActionPanel","_s","addMessage","addWorkflowStep","fetchNormalizedTables","originalFDs","decomposedSchemas","fetchOriginalFDs","fetchDecomposedSchemas","checkDependencyPreservation","setErDiagramGenerated","setFDGenerated","fileInputRef","handleFileUpload","event","file","target","files","message","error","handleBackendAction","stepName","console","log","fetch","then","res","json","data","setOriginalFDs","fds","handleDependencyPreservation","length","handleLosslessCheck","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","style","display","onClick","current","click","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/ActionPanel.jsx"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport { uploadFile, triggerBackendStep, triggerLosslessCheck } from '../api';\r\nimport { useStateContext } from '../context/StateContext';\r\n\r\nconst ActionPanel = () => {\r\n  const {\r\n    addMessage,\r\n    addWorkflowStep,\r\n    fetchNormalizedTables,\r\n    originalFDs,\r\n    decomposedSchemas,\r\n    fetchOriginalFDs,\r\n    fetchDecomposedSchemas,\r\n    checkDependencyPreservation,\r\n    setErDiagramGenerated,\r\n    setFDGenerated,\r\n  } = useStateContext();\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    try {\r\n      const message = await uploadFile(file);\r\n      addMessage(message);\r\n      addWorkflowStep('Upload');\r\n    } catch (error) {\r\n      addMessage(error.message);\r\n    }\r\n  };\r\n\r\n  const handleBackendAction = async (stepName) => {\r\n    try {\r\n      const message = await triggerBackendStep(stepName);\r\n      addMessage(message);\r\n      addWorkflowStep(stepName);\r\n\r\n      if (stepName === 'FDModified') {\r\n        await fetchOriginalFDs();\r\n        setFDGenerated(true);        // ✅ Set flag to true\r\n        console.log('FDGenerated set to true');\r\n      }\r\n\r\n      if (stepName === 'FDModified') {\r\n      await fetch('/api/detected_fds')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setOriginalFDs(data.fds || []);\r\n          setFDGenerated(true);         // ✅ Should now work\r\n        });\r\n    }\r\n\r\n      if (stepName === 'NormalizeTable') {\r\n        await fetchDecomposedSchemas();\r\n        await fetchNormalizedTables();\r\n      }\r\n\r\n\r\n      if (stepName === 'ERDiagram') {\r\n      setErDiagramGenerated(true);  // <-- Set the flag TRUE when ER Diagram is generated\r\n    }\r\n\r\n\r\n    } catch (error) {\r\n      addMessage(error.message);\r\n    }\r\n  };\r\n\r\n  const handleDependencyPreservation = async () => {\r\n    try {\r\n      await fetchOriginalFDs();  // Ensure always fetch fresh FDs\r\n      await fetchDecomposedSchemas();  // Ensure always fetch fresh Schemas\r\n\r\n      if (!originalFDs || originalFDs.length === 0) {\r\n        addMessage('Error: Functional Dependencies are missing or invalid.');\r\n        return;\r\n      }\r\n\r\n      if (!decomposedSchemas || decomposedSchemas.length === 0) {\r\n        addMessage('Error: Decomposed Schemas are missing or invalid.');\r\n        return;\r\n      }\r\n\r\n      const message = await checkDependencyPreservation(originalFDs, decomposedSchemas);\r\n      addMessage(message);\r\n    } catch (error) {\r\n      addMessage(error.message || 'Unknown error occurred during dependency preservation check.');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleLosslessCheck = async () => {\r\n    try {\r\n      const message = await triggerLosslessCheck();\r\n      addMessage(message);\r\n      addWorkflowStep('LosslessCheck');\r\n    } catch (error) {\r\n      addMessage(error.message || 'Unknown error during Lossless Check');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"action-panel\">\r\n      <h2>Action Panel</h2>\r\n\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          onChange={handleFileUpload}\r\n          style={{ display: 'none' }}\r\n        />\r\n        <button onClick={() => fileInputRef.current.click()}>Upload File</button>\r\n      </div>\r\n\r\n      <div className=\"actions\">\r\n        <button onClick={() => handleBackendAction('ConvertToCSV')}>Convert to CSV</button>\r\n        <button onClick={() => handleBackendAction('CleanModify')}>Clean & Modify</button>\r\n        <button onClick={() => handleBackendAction('FDModified')}>Detect Functional Dependencies</button>\r\n        <button onClick={() => handleBackendAction('NormalizeTable')}>Normalize Tables</button>\r\n        <button onClick={() => handleBackendAction('KeyDetection')}>Detect Keys</button>\r\n        <button onClick={handleDependencyPreservation}>Check Dependency Preservation</button>\r\n        <button onClick={handleLosslessCheck}>Check Lossless Decomposition</button>\r\n        <button onClick={() => handleBackendAction('ERDiagram')}>Generate ER Diagram</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}