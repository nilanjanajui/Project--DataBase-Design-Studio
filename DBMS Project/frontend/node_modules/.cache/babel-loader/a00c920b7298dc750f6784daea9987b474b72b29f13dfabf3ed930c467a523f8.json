{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\CodePanel.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStateContext } from \"../context/StateContext\";\n\n/**\r\n * CodePanel displays the current code snippet or a placeholder message.\r\n * It handles large text with scroll and word wrapping for readability.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodePanel = () => {\n  _s();\n  const {\n    currentCode\n  } = useStateContext();\n  const styles = {\n    container: {\n      overflowY: \"auto\",\n      height: \"100%\",\n      padding: 10,\n      backgroundColor: \"#1e1e1e\",\n      // optional: dark background for code panel\n      color: \"#d4d4d4\",\n      // optional: light text color for better contrast\n      fontFamily: \"'Source Code Pro', monospace\",\n      // better font for code\n      fontSize: 14,\n      borderRadius: 4,\n      boxSizing: \"border-box\",\n      userSelect: \"text\",\n      whiteSpace: \"pre-wrap\",\n      wordBreak: \"break-word\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"code-panel\",\n    style: styles.container,\n    \"aria-label\": \"Code display panel\",\n    role: \"region\",\n    tabIndex: 0 // focusable for accessibility\n    ,\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: currentCode || \"Click a button in Output Panel to see code here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CodePanel, \"7uLX0SgQFJHSXa2/uUZoycDJpFk=\", false, function () {\n  return [useStateContext];\n});\n_c = CodePanel;\nCodePanel.propTypes = {\n  // no props, but if in future you pass code, define here\n};\nexport default CodePanel;\nvar _c;\n$RefreshReg$(_c, \"CodePanel\");","map":{"version":3,"names":["React","PropTypes","useStateContext","jsxDEV","_jsxDEV","CodePanel","_s","currentCode","styles","container","overflowY","height","padding","backgroundColor","color","fontFamily","fontSize","borderRadius","boxSizing","userSelect","whiteSpace","wordBreak","className","style","role","tabIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/CodePanel.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStateContext } from \"../context/StateContext\";\r\n\r\n/**\r\n * CodePanel displays the current code snippet or a placeholder message.\r\n * It handles large text with scroll and word wrapping for readability.\r\n */\r\nconst CodePanel = () => {\r\n  const { currentCode } = useStateContext();\r\n\r\n  const styles = {\r\n    container: {\r\n      overflowY: \"auto\",\r\n      height: \"100%\",\r\n      padding: 10,\r\n      backgroundColor: \"#1e1e1e\", // optional: dark background for code panel\r\n      color: \"#d4d4d4\", // optional: light text color for better contrast\r\n      fontFamily: \"'Source Code Pro', monospace\", // better font for code\r\n      fontSize: 14,\r\n      borderRadius: 4,\r\n      boxSizing: \"border-box\",\r\n      userSelect: \"text\",\r\n      whiteSpace: \"pre-wrap\",\r\n      wordBreak: \"break-word\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className=\"code-panel\"\r\n      style={styles.container}\r\n      aria-label=\"Code display panel\"\r\n      role=\"region\"\r\n      tabIndex={0} // focusable for accessibility\r\n    >\r\n      <pre>\r\n        {currentCode || \"Click a button in Output Panel to see code here.\"}\r\n      </pre>\r\n    </section>\r\n  );\r\n};\r\n\r\nCodePanel.propTypes = {\r\n  // no props, but if in future you pass code, define here\r\n};\r\n\r\nexport default CodePanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,eAAe,QAAQ,yBAAyB;;AAEzD;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAY,CAAC,GAAGL,eAAe,CAAC,CAAC;EAEzC,MAAMM,MAAM,GAAG;IACbC,SAAS,EAAE;MACTC,SAAS,EAAE,MAAM;MACjBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE,EAAE;MACXC,eAAe,EAAE,SAAS;MAAE;MAC5BC,KAAK,EAAE,SAAS;MAAE;MAClBC,UAAU,EAAE,8BAA8B;MAAE;MAC5CC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,CAAC;MACfC,SAAS,EAAE,YAAY;MACvBC,UAAU,EAAE,MAAM;MAClBC,UAAU,EAAE,UAAU;MACtBC,SAAS,EAAE;IACb;EACF,CAAC;EAED,oBACEjB,OAAA;IACEkB,SAAS,EAAC,YAAY;IACtBC,KAAK,EAAEf,MAAM,CAACC,SAAU;IACxB,cAAW,oBAAoB;IAC/Be,IAAI,EAAC,QAAQ;IACbC,QAAQ,EAAE,CAAE,CAAC;IAAA;IAAAC,QAAA,eAEbtB,OAAA;MAAAsB,QAAA,EACGnB,WAAW,IAAI;IAAkD;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACxB,EAAA,CAjCID,SAAS;EAAA,QACWH,eAAe;AAAA;AAAA6B,EAAA,GADnC1B,SAAS;AAmCfA,SAAS,CAAC2B,SAAS,GAAG;EACpB;AAAA,CACD;AAED,eAAe3B,SAAS;AAAC,IAAA0B,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}