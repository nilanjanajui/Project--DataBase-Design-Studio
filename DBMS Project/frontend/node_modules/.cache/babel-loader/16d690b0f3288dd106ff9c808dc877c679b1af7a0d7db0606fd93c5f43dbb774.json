{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\context\\\\StateContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateContext = /*#__PURE__*/createContext();\nexport const StateProvider = ({\n  children\n}) => {\n  _s();\n  const [workflowSteps, setWorkflowSteps] = useState([]);\n  const [currentCode, setCurrentCodeState] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [normalizedTables, setNormalizedTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(''); // ✅ Selected Table Name\n  const [selectedTableData, setSelectedTableData] = useState(null); // ✅ Data of Selected Table\n  const [functionalDependencies, setFunctionalDependencies] = useState([]); // List of original FDs\n  const [decomposedSchemas, setDecomposedSchemas] = useState([]); // List of decomposed table attribute sets\n\n  // Add Workflow Step\n  const addWorkflowStep = useCallback(stepName => {\n    setWorkflowSteps(prev => {\n      if (!prev.includes(stepName)) {\n        return [...prev, stepName];\n      }\n      return prev;\n    });\n  }, []);\n\n  // Fetch Code for Step\n  const fetchCode = useCallback(async stepName => {\n    try {\n      const response = await axios.get(`/api/code/${stepName}`);\n      return response.data.code;\n    } catch (error) {\n      console.error('Failed to fetch code');\n      return 'Error fetching code.';\n    }\n  }, []);\n\n  // Set Current Code in CodePanel\n  const setCurrentCode = useCallback(code => {\n    setCurrentCodeState(code);\n  }, []);\n\n  // Add Message to MessagePanel\n  const addMessage = useCallback(msg => {\n    setMessages(prev => [...prev, msg]);\n  }, []);\n\n  // Fetch Normalized Tables List from Backend\n  const fetchNormalizedTables = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/normalized_tables');\n      setNormalizedTables(response.data.tables || []);\n    } catch (error) {\n      console.error('Failed to fetch normalized tables');\n    }\n  }, []);\n\n  // ✅ Fetch Data of Selected Table (API Call)\n  const fetchSelectedTableData = useCallback(async tableName => {\n    try {\n      const response = await axios.get(`/api/table_data/${tableName}`);\n      setSelectedTable(tableName); // Set Current Selected Table\n      setSelectedTableData(response.data.data); // Set Table Data (Array of Rows)\n    } catch (error) {\n      console.error('Failed to fetch table data');\n      setSelectedTableData(null);\n    }\n  }, []);\n  const checkDependencyPreservation = useCallback(async (originalFDs, decomposedSchemas) => {\n    try {\n      const response = await axios.post('/api/dependency_preservation', {\n        originalFDs,\n        decomposedSchemas\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const message = response.data.message || 'Dependency preservation checked.';\n      addMessage(message);\n      addWorkflowStep('DependencyPreservation');\n      return message;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Dependency preservation check failed:', error);\n      const errorMsg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to check dependency preservation.';\n      addMessage(errorMsg);\n      throw new Error(errorMsg);\n    }\n  }, [addMessage, addWorkflowStep]);\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: {\n      workflowSteps,\n      addWorkflowStep,\n      fetchCode,\n      currentCode,\n      setCurrentCode,\n      messages,\n      addMessage,\n      normalizedTables,\n      fetchNormalizedTables,\n      selectedTable,\n      setSelectedTable,\n      selectedTableData,\n      // ✅ Added for Table Data Viewing\n      fetchSelectedTableData,\n      // ✅ Function to Load Table Data\n      checkDependencyPreservation\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(StateProvider, \"5yZpchW+Evi4sw3ZIQF4ItRn5JE=\");\n_c = StateProvider;\nexport const useStateContext = () => {\n  _s2();\n  return useContext(StateContext);\n};\n_s2(useStateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","axios","jsxDEV","_jsxDEV","StateContext","StateProvider","children","_s","workflowSteps","setWorkflowSteps","currentCode","setCurrentCodeState","messages","setMessages","normalizedTables","setNormalizedTables","selectedTable","setSelectedTable","selectedTableData","setSelectedTableData","functionalDependencies","setFunctionalDependencies","decomposedSchemas","setDecomposedSchemas","addWorkflowStep","stepName","prev","includes","fetchCode","response","get","data","code","error","console","setCurrentCode","addMessage","msg","fetchNormalizedTables","tables","fetchSelectedTableData","tableName","checkDependencyPreservation","originalFDs","post","headers","message","_error$response","_error$response$data","errorMsg","Error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStateContext","_s2","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/context/StateContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst StateContext = createContext();\r\n\r\nexport const StateProvider = ({ children }) => {\r\n  const [workflowSteps, setWorkflowSteps] = useState([]);\r\n  const [currentCode, setCurrentCodeState] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [normalizedTables, setNormalizedTables] = useState([]);\r\n  const [selectedTable, setSelectedTable] = useState(''); // ✅ Selected Table Name\r\n  const [selectedTableData, setSelectedTableData] = useState(null); // ✅ Data of Selected Table\r\n  const [functionalDependencies, setFunctionalDependencies] = useState([]); // List of original FDs\r\nconst [decomposedSchemas, setDecomposedSchemas] = useState([]); // List of decomposed table attribute sets\r\n\r\n\r\n  // Add Workflow Step\r\n  const addWorkflowStep = useCallback((stepName) => {\r\n    setWorkflowSteps((prev) => {\r\n      if (!prev.includes(stepName)) {\r\n        return [...prev, stepName];\r\n      }\r\n      return prev;\r\n    });\r\n  }, []);\r\n\r\n  // Fetch Code for Step\r\n  const fetchCode = useCallback(async (stepName) => {\r\n    try {\r\n      const response = await axios.get(`/api/code/${stepName}`);\r\n      return response.data.code;\r\n    } catch (error) {\r\n      console.error('Failed to fetch code');\r\n      return 'Error fetching code.';\r\n    }\r\n  }, []);\r\n\r\n  // Set Current Code in CodePanel\r\n  const setCurrentCode = useCallback((code) => {\r\n    setCurrentCodeState(code);\r\n  }, []);\r\n\r\n  // Add Message to MessagePanel\r\n  const addMessage = useCallback((msg) => {\r\n    setMessages((prev) => [...prev, msg]);\r\n  }, []);\r\n\r\n  // Fetch Normalized Tables List from Backend\r\n  const fetchNormalizedTables = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/normalized_tables');\r\n      setNormalizedTables(response.data.tables || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch normalized tables');\r\n    }\r\n  }, []);\r\n\r\n  // ✅ Fetch Data of Selected Table (API Call)\r\n  const fetchSelectedTableData = useCallback(async (tableName) => {\r\n    try {\r\n      const response = await axios.get(`/api/table_data/${tableName}`);\r\n      setSelectedTable(tableName); // Set Current Selected Table\r\n      setSelectedTableData(response.data.data); // Set Table Data (Array of Rows)\r\n    } catch (error) {\r\n      console.error('Failed to fetch table data');\r\n      setSelectedTableData(null);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const checkDependencyPreservation = useCallback(async (originalFDs, decomposedSchemas) => {\r\n    try {\r\n      const response = await axios.post(\r\n        '/api/dependency_preservation',\r\n        { originalFDs, decomposedSchemas },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      );\r\n      const message = response.data.message || 'Dependency preservation checked.';\r\n      addMessage(message);\r\n      addWorkflowStep('DependencyPreservation');\r\n      return message;\r\n    } catch (error) {\r\n      console.error('Dependency preservation check failed:', error);\r\n      const errorMsg = error.response?.data?.message || 'Failed to check dependency preservation.';\r\n      addMessage(errorMsg);\r\n      throw new Error(errorMsg);\r\n    }\r\n  }, [addMessage, addWorkflowStep]);\r\n\r\n  return (\r\n    <StateContext.Provider\r\n      value={{\r\n        workflowSteps,\r\n        addWorkflowStep,\r\n        fetchCode,\r\n        currentCode,\r\n        setCurrentCode,\r\n        messages,\r\n        addMessage,\r\n        normalizedTables,\r\n        fetchNormalizedTables,\r\n        selectedTable,\r\n        setSelectedTable,\r\n        selectedTableData, // ✅ Added for Table Data Viewing\r\n        fetchSelectedTableData, // ✅ Function to Load Table Data\r\n        checkDependencyPreservation,\r\n      }}\r\n    >\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useStateContext = () => useContext(StateContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}