{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\ERDiagramPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport mermaid from \"mermaid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ERDiagramPage = () => {\n  _s();\n  const containerRef = useRef(null);\n  const [mermaidCode, setMermaidCode] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch Mermaid code from backend\n    const fetchMermaidCode = async () => {\n      try {\n        var _response$data;\n        const response = await axios.get(\"/api/er_diagram\");\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.mermaid_code) {\n          setMermaidCode(response.data.mermaid_code);\n          setError(null);\n        } else {\n          setError(\"Mermaid code not found in response\");\n        }\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(\"Failed to fetch ER diagram code: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n      }\n    };\n    fetchMermaidCode();\n  }, []);\n  useEffect(() => {\n    if (!mermaidCode) return;\n    if (!containerRef.current) {\n      setError(\"Diagram container not available\");\n      return;\n    }\n    setError(null);\n    containerRef.current.innerHTML = \"\";\n\n    // Initialize mermaid\n    mermaid.initialize({\n      startOnLoad: false,\n      theme: \"default\",\n      securityLevel: \"loose\"\n    });\n    mermaid.render(\"erDiagramSVG\", mermaidCode).then(({\n      svg\n    }) => {\n      if (!containerRef.current) return;\n      containerRef.current.innerHTML = svg;\n\n      // Make nodes draggable\n      const svgContainer = containerRef.current;\n      const nodes = svgContainer.querySelectorAll(\"g.node\");\n      nodes.forEach(node => {\n        node.style.cursor = \"move\";\n        let isDragging = false;\n        let offsetX = 0;\n        let offsetY = 0;\n        const onMouseDown = e => {\n          e.preventDefault();\n          isDragging = true;\n          const transform = node.getAttribute(\"transform\") || \"translate(0,0)\";\n          const match = transform.match(/translate\\(([-\\d.]+),\\s*([-\\d.]+)\\)/);\n          const currentX = match ? parseFloat(match[1]) : 0;\n          const currentY = match ? parseFloat(match[2]) : 0;\n          offsetX = e.clientX - currentX;\n          offsetY = e.clientY - currentY;\n          document.addEventListener(\"mousemove\", onMouseMove);\n          document.addEventListener(\"mouseup\", onMouseUp);\n        };\n        const onMouseMove = e => {\n          if (!isDragging) return;\n          const x = e.clientX - offsetX;\n          const y = e.clientY - offsetY;\n          node.setAttribute(\"transform\", `translate(${x},${y})`);\n        };\n        const onMouseUp = () => {\n          isDragging = false;\n          document.removeEventListener(\"mousemove\", onMouseMove);\n          document.removeEventListener(\"mouseup\", onMouseUp);\n        };\n        node.addEventListener(\"mousedown\", onMouseDown);\n      });\n    }).catch(err => {\n      setError(\"Mermaid render error: \" + err.message);\n    });\n  }, [mermaidCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ER Diagram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        marginBottom: \"1rem\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      style: {\n        width: \"100%\",\n        minHeight: \"600px\",\n        border: \"1px solid #ccc\",\n        overflow: \"auto\",\n        userSelect: \"none\",\n        backgroundColor: \"#fff\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(ERDiagramPage, \"J9JdwxG3JkyHsAT+cKL1wtv9bfA=\");\n_c = ERDiagramPage;\nexport default ERDiagramPage;\nvar _c;\n$RefreshReg$(_c, \"ERDiagramPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","mermaid","jsxDEV","_jsxDEV","ERDiagramPage","_s","containerRef","mermaidCode","setMermaidCode","error","setError","fetchMermaidCode","_response$data","response","get","data","mermaid_code","err","_err$response","_err$response$data","message","current","innerHTML","initialize","startOnLoad","theme","securityLevel","render","then","svg","svgContainer","nodes","querySelectorAll","forEach","node","style","cursor","isDragging","offsetX","offsetY","onMouseDown","e","preventDefault","transform","getAttribute","match","currentX","parseFloat","currentY","clientX","clientY","document","addEventListener","onMouseMove","onMouseUp","x","y","setAttribute","removeEventListener","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","color","marginBottom","ref","width","minHeight","border","overflow","userSelect","backgroundColor","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/ERDiagramPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport mermaid from \"mermaid\";\r\n\r\nconst ERDiagramPage = () => {\r\n  const containerRef = useRef(null);\r\n  const [mermaidCode, setMermaidCode] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch Mermaid code from backend\r\n    const fetchMermaidCode = async () => {\r\n      try {\r\n        const response = await axios.get(\"/api/er_diagram\");\r\n        if (response.data?.mermaid_code) {\r\n          setMermaidCode(response.data.mermaid_code);\r\n          setError(null);\r\n        } else {\r\n          setError(\"Mermaid code not found in response\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Failed to fetch ER diagram code: \" + (err.response?.data?.error || err.message));\r\n      }\r\n    };\r\n\r\n    fetchMermaidCode();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!mermaidCode) return;\r\n\r\n    if (!containerRef.current) {\r\n      setError(\"Diagram container not available\");\r\n      return;\r\n    }\r\n\r\n    setError(null);\r\n    containerRef.current.innerHTML = \"\";\r\n\r\n    // Initialize mermaid\r\n    mermaid.initialize({\r\n      startOnLoad: false,\r\n      theme: \"default\",\r\n      securityLevel: \"loose\",\r\n    });\r\n\r\n    mermaid\r\n      .render(\"erDiagramSVG\", mermaidCode)\r\n      .then(({ svg }) => {\r\n        if (!containerRef.current) return;\r\n\r\n        containerRef.current.innerHTML = svg;\r\n\r\n        // Make nodes draggable\r\n        const svgContainer = containerRef.current;\r\n        const nodes = svgContainer.querySelectorAll(\"g.node\");\r\n        nodes.forEach((node) => {\r\n          node.style.cursor = \"move\";\r\n\r\n          let isDragging = false;\r\n          let offsetX = 0;\r\n          let offsetY = 0;\r\n\r\n          const onMouseDown = (e) => {\r\n            e.preventDefault();\r\n            isDragging = true;\r\n            const transform = node.getAttribute(\"transform\") || \"translate(0,0)\";\r\n            const match = transform.match(/translate\\(([-\\d.]+),\\s*([-\\d.]+)\\)/);\r\n            const currentX = match ? parseFloat(match[1]) : 0;\r\n            const currentY = match ? parseFloat(match[2]) : 0;\r\n            offsetX = e.clientX - currentX;\r\n            offsetY = e.clientY - currentY;\r\n\r\n            document.addEventListener(\"mousemove\", onMouseMove);\r\n            document.addEventListener(\"mouseup\", onMouseUp);\r\n          };\r\n\r\n          const onMouseMove = (e) => {\r\n            if (!isDragging) return;\r\n            const x = e.clientX - offsetX;\r\n            const y = e.clientY - offsetY;\r\n            node.setAttribute(\"transform\", `translate(${x},${y})`);\r\n          };\r\n\r\n          const onMouseUp = () => {\r\n            isDragging = false;\r\n            document.removeEventListener(\"mousemove\", onMouseMove);\r\n            document.removeEventListener(\"mouseup\", onMouseUp);\r\n          };\r\n\r\n          node.addEventListener(\"mousedown\", onMouseDown);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setError(\"Mermaid render error: \" + err.message);\r\n      });\r\n  }, [mermaidCode]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>ER Diagram</h2>\r\n      {error && <div style={{ color: \"red\", marginBottom: \"1rem\" }}>{error}</div>}\r\n      <div\r\n        ref={containerRef}\r\n        style={{\r\n          width: \"100%\",\r\n          minHeight: \"600px\",\r\n          border: \"1px solid #ccc\",\r\n          overflow: \"auto\",\r\n          userSelect: \"none\",\r\n          backgroundColor: \"#fff\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ERDiagramPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}