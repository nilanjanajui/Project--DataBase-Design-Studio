{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\OutputPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useStateContext } from '../context/StateContext';\nimport DraggableStep from './DraggableStep';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEY = 'workflowStepPositions';\nconst OutputPanel = () => {\n  _s();\n  const {\n    workflowSteps,\n    setCurrentCode\n  } = useStateContext();\n  const [positions, setPositions] = useState({});\n  const [scale, setScale] = useState(1);\n  const containerRef = useRef(null);\n\n  // Store breakpoints: { \"stepA-stepB\": [{x, y}, ...] }\n  const [breakPointsMap, setBreakPointsMap] = useState({});\n  const positionsInitialized = useRef(false);\n  const boxWidth = 140;\n  const boxHeight = 44;\n  const horizontalSpacing = 60;\n  const verticalSpacing = 60;\n  useEffect(() => {\n    const savedPositions = localStorage.getItem(STORAGE_KEY);\n    if (savedPositions) {\n      try {\n        const parsedPositions = JSON.parse(savedPositions);\n        setPositions(parsedPositions);\n        positionsInitialized.current = true;\n      } catch {\n        console.warn('Failed to parse saved positions');\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (positionsInitialized.current) return;\n    if (!containerRef.current) return;\n    const containerWidth = containerRef.current.clientWidth;\n    const initialPositions = {};\n    let x = 50;\n    let y = 60;\n    workflowSteps.forEach(step => {\n      if (x + boxWidth > containerWidth - 20) {\n        x = 50;\n        y += boxHeight + verticalSpacing;\n      }\n      initialPositions[step] = {\n        x,\n        y\n      };\n      x += boxWidth + horizontalSpacing;\n    });\n    setPositions(prev => ({\n      ...prev,\n      ...initialPositions\n    }));\n    positionsInitialized.current = true;\n  }, [workflowSteps]);\n  useEffect(() => {\n    if (positionsInitialized.current) {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(positions));\n    }\n  }, [positions]);\n  const handlePositionChange = (step, pos) => {\n    setPositions(prev => ({\n      ...prev,\n      [step]: pos\n    }));\n  };\n  const handleClickStep = async step => {\n    try {\n      const response = await axios.get(`/api/code/${step}`);\n      setCurrentCode(response.data.code || '');\n    } catch {\n      setCurrentCode('Failed to load code');\n    }\n  };\n\n  // Calculate point on cubic Bezier curve at t\n  const cubicBezierPoint = (p0, c1, c2, p1, t) => {\n    const x = Math.pow(1 - t, 3) * p0.x + 3 * Math.pow(1 - t, 2) * t * c1.x + 3 * (1 - t) * Math.pow(t, 2) * c2.x + Math.pow(t, 3) * p1.x;\n    const y = Math.pow(1 - t, 3) * p0.y + 3 * Math.pow(1 - t, 2) * t * c1.y + 3 * (1 - t) * Math.pow(t, 2) * c2.y + Math.pow(t, 3) * p1.y;\n    return {\n      x,\n      y\n    };\n  };\n\n  // Drag state refs\n  const draggingRef = useRef(null);\n  const dragSegmentIndexRef = useRef(null);\n  const dragTRef = useRef(null);\n  const dragLineKeyRef = useRef(null);\n\n  // On mouse down on a curve dot\n  const onCurveDotMouseDown = (lineKey, segmentIndex, t, e) => {\n    e.preventDefault();\n    draggingRef.current = true;\n    dragSegmentIndexRef.current = segmentIndex;\n    dragTRef.current = t;\n    dragLineKeyRef.current = lineKey;\n    window.addEventListener('mousemove', onCurveDotMouseMove);\n    window.addEventListener('mouseup', onCurveDotMouseUp);\n  };\n\n  // On mouse move - update the position of breakpoint near this segment and t\n  const onCurveDotMouseMove = e => {\n    if (!draggingRef.current) return;\n    const svg = e.target.ownerSVGElement;\n    if (!svg) return;\n    const pt = svg.createSVGPoint();\n    pt.x = e.clientX;\n    pt.y = e.clientY;\n    const cursorpt = pt.matrixTransform(svg.getScreenCTM().inverse());\n    const lineKey = dragLineKeyRef.current;\n    const segmentIndex = dragSegmentIndexRef.current;\n    const t = dragTRef.current;\n    setBreakPointsMap(prev => {\n      const newBreakPointsMap = {\n        ...prev\n      };\n      const breakPoints = newBreakPointsMap[lineKey] ? [...newBreakPointsMap[lineKey]] : [];\n\n      // Find closest breakpoint to segmentIndex, or insert new breakpoint for this segment\n      // Strategy: For segmentIndex, the breakpoint index is segmentIndex (breakpoints between points)\n      // We'll move that breakpoint or create if none\n\n      if (segmentIndex < breakPoints.length) {\n        // Update existing breakpoint position\n        breakPoints[segmentIndex] = {\n          x: cursorpt.x / scale,\n          y: cursorpt.y / scale\n        };\n      } else {\n        // Add breakpoint at this position\n        breakPoints.push({\n          x: cursorpt.x / scale,\n          y: cursorpt.y / scale\n        });\n      }\n      newBreakPointsMap[lineKey] = breakPoints;\n      return newBreakPointsMap;\n    });\n  };\n  const onCurveDotMouseUp = () => {\n    draggingRef.current = false;\n    dragSegmentIndexRef.current = null;\n    dragTRef.current = null;\n    dragLineKeyRef.current = null;\n    window.removeEventListener('mousemove', onCurveDotMouseMove);\n    window.removeEventListener('mouseup', onCurveDotMouseUp);\n  };\n\n  // Render SVG paths and draggable dots on curves\n  const renderLines = () => {\n    const dotRadius = 4;\n    const curveDotRadius = 6;\n    const containerWidth = containerRef.current ? containerRef.current.clientWidth : 1000;\n    const rightEdgeThreshold = containerWidth - 45;\n    const leftEdgeThreshold = 20;\n    const lines = [];\n    for (let i = 0; i < workflowSteps.length - 1; i++) {\n      const from = positions[workflowSteps[i]];\n      const to = positions[workflowSteps[i + 1]];\n      if (!from || !to) continue;\n      const fromNearRightEdge = from.x + boxWidth > rightEdgeThreshold;\n      const fromNearLeftEdge = from.x < leftEdgeThreshold;\n      const toNearRightEdge = to.x + boxWidth > rightEdgeThreshold;\n      const toNearLeftEdge = to.x < leftEdgeThreshold;\n\n      // Outgoing start point\n      let startX;\n      if (fromNearRightEdge) startX = from.x - dotRadius;else if (fromNearLeftEdge) startX = from.x + boxWidth + dotRadius;else startX = from.x + boxWidth + dotRadius;\n      const startY = from.y + boxHeight / 2;\n\n      // Incoming end point\n      let endX;\n      if (toNearRightEdge) endX = to.x + boxWidth + dotRadius;else if (toNearLeftEdge) endX = to.x - dotRadius;else endX = to.x - dotRadius;\n      const endY = to.y + boxHeight / 2;\n\n      // Breakpoints for this line\n      const key = `${workflowSteps[i]}-${workflowSteps[i + 1]}`;\n      const breakPoints = breakPointsMap[key] || [];\n\n      // Full points array: start + breakpoints + end\n      const points = [{\n        x: startX,\n        y: startY\n      }, ...breakPoints, {\n        x: endX,\n        y: endY\n      }];\n      const pathParts = [`M${points[0].x},${points[0].y}`];\n\n      // Helper for control points for smooth curves\n      const getControlPoints = (p0, p1, p2) => {\n        const dx1 = p1.x - p0.x;\n        const dy1 = p1.y - p0.y;\n        const dx2 = p2.x - p1.x;\n        const dy2 = p2.y - p1.y;\n        return [{\n          x: p1.x - dx1 / 3,\n          y: p1.y - dy1 / 3\n        }, {\n          x: p1.x + dx2 / 3,\n          y: p1.y + dy2 / 3\n        }];\n      };\n\n      // Build path and collect dots info\n      const curveDots = [];\n      for (let j = 0; j < points.length - 1; j++) {\n        const p0 = j === 0 ? points[j] : points[j - 1];\n        const p1 = points[j];\n        const p2 = points[j + 1];\n        let c1, c2;\n        if (j === 0) {\n          c1 = {\n            x: (p1.x + p2.x) / 2,\n            y: p1.y\n          };\n          c2 = {\n            x: (p1.x + p2.x) / 2,\n            y: p2.y\n          };\n        } else {\n          [c1, c2] = getControlPoints(p0, p1, p2);\n        }\n        pathParts.push(`C${c1.x},${c1.y} ${c2.x},${c2.y} ${p2.x},${p2.y}`);\n\n        // Calculate dots on curve segment at t=0.25,0.5,0.75\n        [0.25, 0.5, 0.75].forEach(t => {\n          const pt = cubicBezierPoint(p1, c1, c2, p2, t);\n          curveDots.push({\n            ...pt,\n            segmentIndex: j,\n            t\n          });\n        });\n      }\n      const d = pathParts.join(' ');\n\n      // Render the curve path\n      lines.push(/*#__PURE__*/_jsxDEV(\"path\", {\n        d: d,\n        fill: \"none\",\n        stroke: \"rgba(184, 212, 249, 0.9)\",\n        strokeWidth: \"1.5\",\n        markerEnd: \"url(#arrowhead)\"\n      }, `line-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this));\n\n      // Render draggable breakpoints as bigger circles\n      breakPoints.forEach((pt, idx) => {\n        lines.push(/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: pt.x,\n          cy: pt.y,\n          r: 6,\n          fill: \"rgba(100, 149, 237, 0.7)\",\n          stroke: \"rgba(50, 80, 130, 0.9)\",\n          strokeWidth: 1.5,\n          style: {\n            cursor: 'grab'\n          },\n          onMouseDown: e => onCurveDotMouseDown(key, idx, 0 /* not used here */, e),\n          onTouchStart: e => onCurveDotMouseDown(key, idx, 0, e)\n        }, `breakpoint-${i}-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this));\n      });\n\n      // Render draggable dots on curve segments\n      curveDots.forEach(({\n        x,\n        y,\n        segmentIndex,\n        t\n      }, idx) => {\n        lines.push(/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: x,\n          cy: y,\n          r: 5,\n          fill: \"rgba(255, 165, 0, 0.7)\",\n          stroke: \"rgba(255, 140, 0, 0.9)\",\n          strokeWidth: 1.2,\n          style: {\n            cursor: 'grab'\n          },\n          onMouseDown: e => onCurveDotMouseDown(key, segmentIndex, t, e),\n          onTouchStart: e => onCurveDotMouseDown(key, segmentIndex, t, e)\n        }, `curve-dot-${i}-${segmentIndex}-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this));\n      });\n    }\n    return lines;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"output-panel\",\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative',\n      overflow: 'auto',\n      padding: 20\n    },\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zoom-controls\",\n      style: {\n        position: 'absolute',\n        top: 5,\n        right: 5,\n        zIndex: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"zoom-btn\",\n        onClick: () => setScale(s => Math.min(2, +(s + 0.1).toFixed(2))),\n        title: \"Zoom in\",\n        style: {\n          marginRight: 5,\n          textAlign: 'center'\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"zoom-btn\",\n        onClick: () => setScale(s => Math.max(0.5, +(s - 0.1).toFixed(2))),\n        title: \"Zoom out\",\n        children: \"\\u2212\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-wrapper\",\n      style: {\n        transform: `scale(${scale})`,\n        transformOrigin: '0 0',\n        position: 'relative',\n        minHeight: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          pointerEvents: 'none',\n          overflow: 'visible',\n          top: 0,\n          left: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"marker\", {\n            id: \"arrowhead\",\n            markerWidth: \"10\",\n            markerHeight: \"7\",\n            refX: \"10\",\n            refY: \"3.5\",\n            orient: \"auto\",\n            fill: \"rgba(103, 121, 136, 0.9)\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"0 0, 10 3.5, 0 7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), renderLines()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), workflowSteps.map((step, index) => /*#__PURE__*/_jsxDEV(DraggableStep, {\n        step: step,\n        position: positions[step] || {\n          x: 0,\n          y: 0\n        },\n        onPositionChange: handlePositionChange,\n        onClick: handleClickStep,\n        isFirst: index === 0\n      }, step, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n_s(OutputPanel, \"XazvIDRX3NEwT0tWZVRtVUa/ybY=\", false, function () {\n  return [useStateContext];\n});\n_c = OutputPanel;\nexport default OutputPanel;\nvar _c;\n$RefreshReg$(_c, \"OutputPanel\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useStateContext","DraggableStep","axios","jsxDEV","_jsxDEV","STORAGE_KEY","OutputPanel","_s","workflowSteps","setCurrentCode","positions","setPositions","scale","setScale","containerRef","breakPointsMap","setBreakPointsMap","positionsInitialized","boxWidth","boxHeight","horizontalSpacing","verticalSpacing","savedPositions","localStorage","getItem","parsedPositions","JSON","parse","current","console","warn","containerWidth","clientWidth","initialPositions","x","y","forEach","step","prev","setItem","stringify","handlePositionChange","pos","handleClickStep","response","get","data","code","cubicBezierPoint","p0","c1","c2","p1","t","Math","pow","draggingRef","dragSegmentIndexRef","dragTRef","dragLineKeyRef","onCurveDotMouseDown","lineKey","segmentIndex","e","preventDefault","window","addEventListener","onCurveDotMouseMove","onCurveDotMouseUp","svg","target","ownerSVGElement","pt","createSVGPoint","clientX","clientY","cursorpt","matrixTransform","getScreenCTM","inverse","newBreakPointsMap","breakPoints","length","push","removeEventListener","renderLines","dotRadius","curveDotRadius","rightEdgeThreshold","leftEdgeThreshold","lines","i","from","to","fromNearRightEdge","fromNearLeftEdge","toNearRightEdge","toNearLeftEdge","startX","startY","endX","endY","key","points","pathParts","getControlPoints","p2","dx1","dy1","dx2","dy2","curveDots","j","d","join","fill","stroke","strokeWidth","markerEnd","fileName","_jsxFileName","lineNumber","columnNumber","idx","cx","cy","r","style","cursor","onMouseDown","onTouchStart","className","width","height","position","overflow","padding","ref","children","top","right","zIndex","onClick","s","min","toFixed","title","marginRight","textAlign","max","transform","transformOrigin","minHeight","pointerEvents","left","id","markerWidth","markerHeight","refX","refY","orient","map","index","onPositionChange","isFirst","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/OutputPanel.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useStateContext } from '../context/StateContext';\r\nimport DraggableStep from './DraggableStep';\r\nimport axios from 'axios';\r\n\r\nconst STORAGE_KEY = 'workflowStepPositions';\r\n\r\nconst OutputPanel = () => {\r\n  const { workflowSteps, setCurrentCode } = useStateContext();\r\n  const [positions, setPositions] = useState({});\r\n  const [scale, setScale] = useState(1);\r\n  const containerRef = useRef(null);\r\n\r\n  // Store breakpoints: { \"stepA-stepB\": [{x, y}, ...] }\r\n  const [breakPointsMap, setBreakPointsMap] = useState({});\r\n\r\n  const positionsInitialized = useRef(false);\r\n\r\n  const boxWidth = 140;\r\n  const boxHeight = 44;\r\n  const horizontalSpacing = 60;\r\n  const verticalSpacing = 60;\r\n\r\n  useEffect(() => {\r\n    const savedPositions = localStorage.getItem(STORAGE_KEY);\r\n    if (savedPositions) {\r\n      try {\r\n        const parsedPositions = JSON.parse(savedPositions);\r\n        setPositions(parsedPositions);\r\n        positionsInitialized.current = true;\r\n      } catch {\r\n        console.warn('Failed to parse saved positions');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (positionsInitialized.current) return;\r\n    if (!containerRef.current) return;\r\n\r\n    const containerWidth = containerRef.current.clientWidth;\r\n    const initialPositions = {};\r\n\r\n    let x = 50;\r\n    let y = 60;\r\n\r\n    workflowSteps.forEach((step) => {\r\n      if (x + boxWidth > containerWidth - 20) {\r\n        x = 50;\r\n        y += boxHeight + verticalSpacing;\r\n      }\r\n      initialPositions[step] = { x, y };\r\n      x += boxWidth + horizontalSpacing;\r\n    });\r\n\r\n    setPositions((prev) => ({ ...prev, ...initialPositions }));\r\n    positionsInitialized.current = true;\r\n  }, [workflowSteps]);\r\n\r\n  useEffect(() => {\r\n    if (positionsInitialized.current) {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(positions));\r\n    }\r\n  }, [positions]);\r\n\r\n  const handlePositionChange = (step, pos) => {\r\n    setPositions((prev) => ({ ...prev, [step]: pos }));\r\n  };\r\n\r\n  const handleClickStep = async (step) => {\r\n    try {\r\n      const response = await axios.get(`/api/code/${step}`);\r\n      setCurrentCode(response.data.code || '');\r\n    } catch {\r\n      setCurrentCode('Failed to load code');\r\n    }\r\n  };\r\n\r\n  // Calculate point on cubic Bezier curve at t\r\n  const cubicBezierPoint = (p0, c1, c2, p1, t) => {\r\n    const x =\r\n      Math.pow(1 - t, 3) * p0.x +\r\n      3 * Math.pow(1 - t, 2) * t * c1.x +\r\n      3 * (1 - t) * Math.pow(t, 2) * c2.x +\r\n      Math.pow(t, 3) * p1.x;\r\n    const y =\r\n      Math.pow(1 - t, 3) * p0.y +\r\n      3 * Math.pow(1 - t, 2) * t * c1.y +\r\n      3 * (1 - t) * Math.pow(t, 2) * c2.y +\r\n      Math.pow(t, 3) * p1.y;\r\n    return { x, y };\r\n  };\r\n\r\n  // Drag state refs\r\n  const draggingRef = useRef(null);\r\n  const dragSegmentIndexRef = useRef(null);\r\n  const dragTRef = useRef(null);\r\n  const dragLineKeyRef = useRef(null);\r\n\r\n  // On mouse down on a curve dot\r\n  const onCurveDotMouseDown = (lineKey, segmentIndex, t, e) => {\r\n    e.preventDefault();\r\n    draggingRef.current = true;\r\n    dragSegmentIndexRef.current = segmentIndex;\r\n    dragTRef.current = t;\r\n    dragLineKeyRef.current = lineKey;\r\n    window.addEventListener('mousemove', onCurveDotMouseMove);\r\n    window.addEventListener('mouseup', onCurveDotMouseUp);\r\n  };\r\n\r\n  // On mouse move - update the position of breakpoint near this segment and t\r\n  const onCurveDotMouseMove = (e) => {\r\n    if (!draggingRef.current) return;\r\n\r\n    const svg = e.target.ownerSVGElement;\r\n    if (!svg) return;\r\n\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = e.clientX;\r\n    pt.y = e.clientY;\r\n\r\n    const cursorpt = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n\r\n    const lineKey = dragLineKeyRef.current;\r\n    const segmentIndex = dragSegmentIndexRef.current;\r\n    const t = dragTRef.current;\r\n\r\n    setBreakPointsMap((prev) => {\r\n      const newBreakPointsMap = { ...prev };\r\n      const breakPoints = newBreakPointsMap[lineKey] ? [...newBreakPointsMap[lineKey]] : [];\r\n\r\n      // Find closest breakpoint to segmentIndex, or insert new breakpoint for this segment\r\n      // Strategy: For segmentIndex, the breakpoint index is segmentIndex (breakpoints between points)\r\n      // We'll move that breakpoint or create if none\r\n\r\n      if (segmentIndex < breakPoints.length) {\r\n        // Update existing breakpoint position\r\n        breakPoints[segmentIndex] = { x: cursorpt.x / scale, y: cursorpt.y / scale };\r\n      } else {\r\n        // Add breakpoint at this position\r\n        breakPoints.push({ x: cursorpt.x / scale, y: cursorpt.y / scale });\r\n      }\r\n\r\n      newBreakPointsMap[lineKey] = breakPoints;\r\n      return newBreakPointsMap;\r\n    });\r\n  };\r\n\r\n  const onCurveDotMouseUp = () => {\r\n    draggingRef.current = false;\r\n    dragSegmentIndexRef.current = null;\r\n    dragTRef.current = null;\r\n    dragLineKeyRef.current = null;\r\n    window.removeEventListener('mousemove', onCurveDotMouseMove);\r\n    window.removeEventListener('mouseup', onCurveDotMouseUp);\r\n  };\r\n\r\n  // Render SVG paths and draggable dots on curves\r\n  const renderLines = () => {\r\n    const dotRadius = 4;\r\n    const curveDotRadius = 6;\r\n    const containerWidth = containerRef.current ? containerRef.current.clientWidth : 1000;\r\n\r\n    const rightEdgeThreshold = containerWidth - 45;\r\n    const leftEdgeThreshold = 20;\r\n\r\n    const lines = [];\r\n\r\n    for (let i = 0; i < workflowSteps.length - 1; i++) {\r\n      const from = positions[workflowSteps[i]];\r\n      const to = positions[workflowSteps[i + 1]];\r\n      if (!from || !to) continue;\r\n\r\n      const fromNearRightEdge = from.x + boxWidth > rightEdgeThreshold;\r\n      const fromNearLeftEdge = from.x < leftEdgeThreshold;\r\n      const toNearRightEdge = to.x + boxWidth > rightEdgeThreshold;\r\n      const toNearLeftEdge = to.x < leftEdgeThreshold;\r\n\r\n      // Outgoing start point\r\n      let startX;\r\n      if (fromNearRightEdge) startX = from.x - dotRadius;\r\n      else if (fromNearLeftEdge) startX = from.x + boxWidth + dotRadius;\r\n      else startX = from.x + boxWidth + dotRadius;\r\n      const startY = from.y + boxHeight / 2;\r\n\r\n      // Incoming end point\r\n      let endX;\r\n      if (toNearRightEdge) endX = to.x + boxWidth + dotRadius;\r\n      else if (toNearLeftEdge) endX = to.x - dotRadius;\r\n      else endX = to.x - dotRadius;\r\n      const endY = to.y + boxHeight / 2;\r\n\r\n      // Breakpoints for this line\r\n      const key = `${workflowSteps[i]}-${workflowSteps[i + 1]}`;\r\n      const breakPoints = breakPointsMap[key] || [];\r\n\r\n      // Full points array: start + breakpoints + end\r\n      const points = [{ x: startX, y: startY }, ...breakPoints, { x: endX, y: endY }];\r\n\r\n      const pathParts = [`M${points[0].x},${points[0].y}`];\r\n\r\n      // Helper for control points for smooth curves\r\n      const getControlPoints = (p0, p1, p2) => {\r\n        const dx1 = p1.x - p0.x;\r\n        const dy1 = p1.y - p0.y;\r\n        const dx2 = p2.x - p1.x;\r\n        const dy2 = p2.y - p1.y;\r\n\r\n        return [\r\n          { x: p1.x - dx1 / 3, y: p1.y - dy1 / 3 },\r\n          { x: p1.x + dx2 / 3, y: p1.y + dy2 / 3 },\r\n        ];\r\n      };\r\n\r\n      // Build path and collect dots info\r\n      const curveDots = [];\r\n\r\n      for (let j = 0; j < points.length - 1; j++) {\r\n        const p0 = j === 0 ? points[j] : points[j - 1];\r\n        const p1 = points[j];\r\n        const p2 = points[j + 1];\r\n\r\n        let c1, c2;\r\n        if (j === 0) {\r\n          c1 = { x: (p1.x + p2.x) / 2, y: p1.y };\r\n          c2 = { x: (p1.x + p2.x) / 2, y: p2.y };\r\n        } else {\r\n          [c1, c2] = getControlPoints(p0, p1, p2);\r\n        }\r\n\r\n        pathParts.push(`C${c1.x},${c1.y} ${c2.x},${c2.y} ${p2.x},${p2.y}`);\r\n\r\n        // Calculate dots on curve segment at t=0.25,0.5,0.75\r\n        [0.25, 0.5, 0.75].forEach((t) => {\r\n          const pt = cubicBezierPoint(p1, c1, c2, p2, t);\r\n          curveDots.push({ ...pt, segmentIndex: j, t });\r\n        });\r\n      }\r\n\r\n      const d = pathParts.join(' ');\r\n\r\n      // Render the curve path\r\n      lines.push(\r\n        <path\r\n          key={`line-${i}`}\r\n          d={d}\r\n          fill=\"none\"\r\n          stroke=\"rgba(184, 212, 249, 0.9)\"\r\n          strokeWidth=\"1.5\"\r\n          markerEnd=\"url(#arrowhead)\"\r\n        />\r\n      );\r\n\r\n      // Render draggable breakpoints as bigger circles\r\n      breakPoints.forEach((pt, idx) => {\r\n        lines.push(\r\n          <circle\r\n            key={`breakpoint-${i}-${idx}`}\r\n            cx={pt.x}\r\n            cy={pt.y}\r\n            r={6}\r\n            fill=\"rgba(100, 149, 237, 0.7)\"\r\n            stroke=\"rgba(50, 80, 130, 0.9)\"\r\n            strokeWidth={1.5}\r\n            style={{ cursor: 'grab' }}\r\n            onMouseDown={(e) => onCurveDotMouseDown(key, idx, 0 /* not used here */, e)}\r\n            onTouchStart={(e) => onCurveDotMouseDown(key, idx, 0, e)}\r\n          />\r\n        );\r\n      });\r\n\r\n      // Render draggable dots on curve segments\r\n      curveDots.forEach(({ x, y, segmentIndex, t }, idx) => {\r\n        lines.push(\r\n          <circle\r\n            key={`curve-dot-${i}-${segmentIndex}-${idx}`}\r\n            cx={x}\r\n            cy={y}\r\n            r={5}\r\n            fill=\"rgba(255, 165, 0, 0.7)\"\r\n            stroke=\"rgba(255, 140, 0, 0.9)\"\r\n            strokeWidth={1.2}\r\n            style={{ cursor: 'grab' }}\r\n            onMouseDown={(e) => onCurveDotMouseDown(key, segmentIndex, t, e)}\r\n            onTouchStart={(e) => onCurveDotMouseDown(key, segmentIndex, t, e)}\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    return lines;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"output-panel\"\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        padding: 20,\r\n      }}\r\n      ref={containerRef}\r\n    >\r\n      <div\r\n        className=\"zoom-controls\"\r\n        style={{ position: 'absolute', top: 5, right: 5, zIndex: 5 }}\r\n      >\r\n        <button\r\n          className=\"zoom-btn\"\r\n          onClick={() => setScale((s) => Math.min(2, +(s + 0.1).toFixed(2)))}\r\n          title=\"Zoom in\"\r\n          style={{ marginRight: 5, textAlign: 'center' }}\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n          className=\"zoom-btn\"\r\n          onClick={() => setScale((s) => Math.max(0.5, +(s - 0.1).toFixed(2)))}\r\n          title=\"Zoom out\"\r\n        >\r\n          −\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"canvas-wrapper\"\r\n        style={{\r\n          transform: `scale(${scale})`,\r\n          transformOrigin: '0 0',\r\n          position: 'relative',\r\n          minHeight: '100%',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <svg\r\n          style={{\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            pointerEvents: 'none',\r\n            overflow: 'visible',\r\n            top: 0,\r\n            left: 0,\r\n          }}\r\n        >\r\n          <defs>\r\n            <marker\r\n              id=\"arrowhead\"\r\n              markerWidth=\"10\"\r\n              markerHeight=\"7\"\r\n              refX=\"10\"\r\n              refY=\"3.5\"\r\n              orient=\"auto\"\r\n              fill=\"rgba(103, 121, 136, 0.9)\"\r\n            >\r\n              <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n            </marker>\r\n          </defs>\r\n          {renderLines()}\r\n        </svg>\r\n\r\n        {workflowSteps.map((step, index) => (\r\n          <DraggableStep\r\n            key={step}\r\n            step={step}\r\n            position={positions[step] || { x: 0, y: 0 }}\r\n            onPositionChange={handlePositionChange}\r\n            onClick={handleClickStep}\r\n            isFirst={index === 0}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutputPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,eAAe,QAAQ,yBAAyB;AACzD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAG,uBAAuB;AAE3C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,aAAa;IAAEC;EAAe,CAAC,GAAGT,eAAe,CAAC,CAAC;EAC3D,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMgB,YAAY,GAAGf,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACA,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExD,MAAMmB,oBAAoB,GAAGlB,MAAM,CAAC,KAAK,CAAC;EAE1C,MAAMmB,QAAQ,GAAG,GAAG;EACpB,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAMC,iBAAiB,GAAG,EAAE;EAC5B,MAAMC,eAAe,GAAG,EAAE;EAE1BxB,SAAS,CAAC,MAAM;IACd,MAAMyB,cAAc,GAAGC,YAAY,CAACC,OAAO,CAACnB,WAAW,CAAC;IACxD,IAAIiB,cAAc,EAAE;MAClB,IAAI;QACF,MAAMG,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACL,cAAc,CAAC;QAClDX,YAAY,CAACc,eAAe,CAAC;QAC7BR,oBAAoB,CAACW,OAAO,GAAG,IAAI;MACrC,CAAC,CAAC,MAAM;QACNC,OAAO,CAACC,IAAI,CAAC,iCAAiC,CAAC;MACjD;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAENjC,SAAS,CAAC,MAAM;IACd,IAAIoB,oBAAoB,CAACW,OAAO,EAAE;IAClC,IAAI,CAACd,YAAY,CAACc,OAAO,EAAE;IAE3B,MAAMG,cAAc,GAAGjB,YAAY,CAACc,OAAO,CAACI,WAAW;IACvD,MAAMC,gBAAgB,GAAG,CAAC,CAAC;IAE3B,IAAIC,CAAC,GAAG,EAAE;IACV,IAAIC,CAAC,GAAG,EAAE;IAEV3B,aAAa,CAAC4B,OAAO,CAAEC,IAAI,IAAK;MAC9B,IAAIH,CAAC,GAAGhB,QAAQ,GAAGa,cAAc,GAAG,EAAE,EAAE;QACtCG,CAAC,GAAG,EAAE;QACNC,CAAC,IAAIhB,SAAS,GAAGE,eAAe;MAClC;MACAY,gBAAgB,CAACI,IAAI,CAAC,GAAG;QAAEH,CAAC;QAAEC;MAAE,CAAC;MACjCD,CAAC,IAAIhB,QAAQ,GAAGE,iBAAiB;IACnC,CAAC,CAAC;IAEFT,YAAY,CAAE2B,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,GAAGL;IAAiB,CAAC,CAAC,CAAC;IAC1DhB,oBAAoB,CAACW,OAAO,GAAG,IAAI;EACrC,CAAC,EAAE,CAACpB,aAAa,CAAC,CAAC;EAEnBX,SAAS,CAAC,MAAM;IACd,IAAIoB,oBAAoB,CAACW,OAAO,EAAE;MAChCL,YAAY,CAACgB,OAAO,CAAClC,WAAW,EAAEqB,IAAI,CAACc,SAAS,CAAC9B,SAAS,CAAC,CAAC;IAC9D;EACF,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAM+B,oBAAoB,GAAGA,CAACJ,IAAI,EAAEK,GAAG,KAAK;IAC1C/B,YAAY,CAAE2B,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACD,IAAI,GAAGK;IAAI,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,MAAMC,eAAe,GAAG,MAAON,IAAI,IAAK;IACtC,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,GAAG,CAAC,aAAaR,IAAI,EAAE,CAAC;MACrD5B,cAAc,CAACmC,QAAQ,CAACE,IAAI,CAACC,IAAI,IAAI,EAAE,CAAC;IAC1C,CAAC,CAAC,MAAM;MACNtC,cAAc,CAAC,qBAAqB,CAAC;IACvC;EACF,CAAC;;EAED;EACA,MAAMuC,gBAAgB,GAAGA,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,CAAC,KAAK;IAC9C,MAAMnB,CAAC,GACLoB,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,CAAC,EAAE,CAAC,CAAC,GAAGJ,EAAE,CAACf,CAAC,GACzB,CAAC,GAAGoB,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,CAAC,EAAE,CAAC,CAAC,GAAGA,CAAC,GAAGH,EAAE,CAAChB,CAAC,GACjC,CAAC,IAAI,CAAC,GAAGmB,CAAC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACF,CAAC,EAAE,CAAC,CAAC,GAAGF,EAAE,CAACjB,CAAC,GACnCoB,IAAI,CAACC,GAAG,CAACF,CAAC,EAAE,CAAC,CAAC,GAAGD,EAAE,CAAClB,CAAC;IACvB,MAAMC,CAAC,GACLmB,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,CAAC,EAAE,CAAC,CAAC,GAAGJ,EAAE,CAACd,CAAC,GACzB,CAAC,GAAGmB,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,CAAC,EAAE,CAAC,CAAC,GAAGA,CAAC,GAAGH,EAAE,CAACf,CAAC,GACjC,CAAC,IAAI,CAAC,GAAGkB,CAAC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACF,CAAC,EAAE,CAAC,CAAC,GAAGF,EAAE,CAAChB,CAAC,GACnCmB,IAAI,CAACC,GAAG,CAACF,CAAC,EAAE,CAAC,CAAC,GAAGD,EAAE,CAACjB,CAAC;IACvB,OAAO;MAAED,CAAC;MAAEC;IAAE,CAAC;EACjB,CAAC;;EAED;EACA,MAAMqB,WAAW,GAAGzD,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM0D,mBAAmB,GAAG1D,MAAM,CAAC,IAAI,CAAC;EACxC,MAAM2D,QAAQ,GAAG3D,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM4D,cAAc,GAAG5D,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACA,MAAM6D,mBAAmB,GAAGA,CAACC,OAAO,EAAEC,YAAY,EAAET,CAAC,EAAEU,CAAC,KAAK;IAC3DA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBR,WAAW,CAAC5B,OAAO,GAAG,IAAI;IAC1B6B,mBAAmB,CAAC7B,OAAO,GAAGkC,YAAY;IAC1CJ,QAAQ,CAAC9B,OAAO,GAAGyB,CAAC;IACpBM,cAAc,CAAC/B,OAAO,GAAGiC,OAAO;IAChCI,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEC,mBAAmB,CAAC;IACzDF,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEE,iBAAiB,CAAC;EACvD,CAAC;;EAED;EACA,MAAMD,mBAAmB,GAAIJ,CAAC,IAAK;IACjC,IAAI,CAACP,WAAW,CAAC5B,OAAO,EAAE;IAE1B,MAAMyC,GAAG,GAAGN,CAAC,CAACO,MAAM,CAACC,eAAe;IACpC,IAAI,CAACF,GAAG,EAAE;IAEV,MAAMG,EAAE,GAAGH,GAAG,CAACI,cAAc,CAAC,CAAC;IAC/BD,EAAE,CAACtC,CAAC,GAAG6B,CAAC,CAACW,OAAO;IAChBF,EAAE,CAACrC,CAAC,GAAG4B,CAAC,CAACY,OAAO;IAEhB,MAAMC,QAAQ,GAAGJ,EAAE,CAACK,eAAe,CAACR,GAAG,CAACS,YAAY,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;IAEjE,MAAMlB,OAAO,GAAGF,cAAc,CAAC/B,OAAO;IACtC,MAAMkC,YAAY,GAAGL,mBAAmB,CAAC7B,OAAO;IAChD,MAAMyB,CAAC,GAAGK,QAAQ,CAAC9B,OAAO;IAE1BZ,iBAAiB,CAAEsB,IAAI,IAAK;MAC1B,MAAM0C,iBAAiB,GAAG;QAAE,GAAG1C;MAAK,CAAC;MACrC,MAAM2C,WAAW,GAAGD,iBAAiB,CAACnB,OAAO,CAAC,GAAG,CAAC,GAAGmB,iBAAiB,CAACnB,OAAO,CAAC,CAAC,GAAG,EAAE;;MAErF;MACA;MACA;;MAEA,IAAIC,YAAY,GAAGmB,WAAW,CAACC,MAAM,EAAE;QACrC;QACAD,WAAW,CAACnB,YAAY,CAAC,GAAG;UAAE5B,CAAC,EAAE0C,QAAQ,CAAC1C,CAAC,GAAGtB,KAAK;UAAEuB,CAAC,EAAEyC,QAAQ,CAACzC,CAAC,GAAGvB;QAAM,CAAC;MAC9E,CAAC,MAAM;QACL;QACAqE,WAAW,CAACE,IAAI,CAAC;UAAEjD,CAAC,EAAE0C,QAAQ,CAAC1C,CAAC,GAAGtB,KAAK;UAAEuB,CAAC,EAAEyC,QAAQ,CAACzC,CAAC,GAAGvB;QAAM,CAAC,CAAC;MACpE;MAEAoE,iBAAiB,CAACnB,OAAO,CAAC,GAAGoB,WAAW;MACxC,OAAOD,iBAAiB;IAC1B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMZ,iBAAiB,GAAGA,CAAA,KAAM;IAC9BZ,WAAW,CAAC5B,OAAO,GAAG,KAAK;IAC3B6B,mBAAmB,CAAC7B,OAAO,GAAG,IAAI;IAClC8B,QAAQ,CAAC9B,OAAO,GAAG,IAAI;IACvB+B,cAAc,CAAC/B,OAAO,GAAG,IAAI;IAC7BqC,MAAM,CAACmB,mBAAmB,CAAC,WAAW,EAAEjB,mBAAmB,CAAC;IAC5DF,MAAM,CAACmB,mBAAmB,CAAC,SAAS,EAAEhB,iBAAiB,CAAC;EAC1D,CAAC;;EAED;EACA,MAAMiB,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,SAAS,GAAG,CAAC;IACnB,MAAMC,cAAc,GAAG,CAAC;IACxB,MAAMxD,cAAc,GAAGjB,YAAY,CAACc,OAAO,GAAGd,YAAY,CAACc,OAAO,CAACI,WAAW,GAAG,IAAI;IAErF,MAAMwD,kBAAkB,GAAGzD,cAAc,GAAG,EAAE;IAC9C,MAAM0D,iBAAiB,GAAG,EAAE;IAE5B,MAAMC,KAAK,GAAG,EAAE;IAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnF,aAAa,CAAC0E,MAAM,GAAG,CAAC,EAAES,CAAC,EAAE,EAAE;MACjD,MAAMC,IAAI,GAAGlF,SAAS,CAACF,aAAa,CAACmF,CAAC,CAAC,CAAC;MACxC,MAAME,EAAE,GAAGnF,SAAS,CAACF,aAAa,CAACmF,CAAC,GAAG,CAAC,CAAC,CAAC;MAC1C,IAAI,CAACC,IAAI,IAAI,CAACC,EAAE,EAAE;MAElB,MAAMC,iBAAiB,GAAGF,IAAI,CAAC1D,CAAC,GAAGhB,QAAQ,GAAGsE,kBAAkB;MAChE,MAAMO,gBAAgB,GAAGH,IAAI,CAAC1D,CAAC,GAAGuD,iBAAiB;MACnD,MAAMO,eAAe,GAAGH,EAAE,CAAC3D,CAAC,GAAGhB,QAAQ,GAAGsE,kBAAkB;MAC5D,MAAMS,cAAc,GAAGJ,EAAE,CAAC3D,CAAC,GAAGuD,iBAAiB;;MAE/C;MACA,IAAIS,MAAM;MACV,IAAIJ,iBAAiB,EAAEI,MAAM,GAAGN,IAAI,CAAC1D,CAAC,GAAGoD,SAAS,CAAC,KAC9C,IAAIS,gBAAgB,EAAEG,MAAM,GAAGN,IAAI,CAAC1D,CAAC,GAAGhB,QAAQ,GAAGoE,SAAS,CAAC,KAC7DY,MAAM,GAAGN,IAAI,CAAC1D,CAAC,GAAGhB,QAAQ,GAAGoE,SAAS;MAC3C,MAAMa,MAAM,GAAGP,IAAI,CAACzD,CAAC,GAAGhB,SAAS,GAAG,CAAC;;MAErC;MACA,IAAIiF,IAAI;MACR,IAAIJ,eAAe,EAAEI,IAAI,GAAGP,EAAE,CAAC3D,CAAC,GAAGhB,QAAQ,GAAGoE,SAAS,CAAC,KACnD,IAAIW,cAAc,EAAEG,IAAI,GAAGP,EAAE,CAAC3D,CAAC,GAAGoD,SAAS,CAAC,KAC5Cc,IAAI,GAAGP,EAAE,CAAC3D,CAAC,GAAGoD,SAAS;MAC5B,MAAMe,IAAI,GAAGR,EAAE,CAAC1D,CAAC,GAAGhB,SAAS,GAAG,CAAC;;MAEjC;MACA,MAAMmF,GAAG,GAAG,GAAG9F,aAAa,CAACmF,CAAC,CAAC,IAAInF,aAAa,CAACmF,CAAC,GAAG,CAAC,CAAC,EAAE;MACzD,MAAMV,WAAW,GAAGlE,cAAc,CAACuF,GAAG,CAAC,IAAI,EAAE;;MAE7C;MACA,MAAMC,MAAM,GAAG,CAAC;QAAErE,CAAC,EAAEgE,MAAM;QAAE/D,CAAC,EAAEgE;MAAO,CAAC,EAAE,GAAGlB,WAAW,EAAE;QAAE/C,CAAC,EAAEkE,IAAI;QAAEjE,CAAC,EAAEkE;MAAK,CAAC,CAAC;MAE/E,MAAMG,SAAS,GAAG,CAAC,IAAID,MAAM,CAAC,CAAC,CAAC,CAACrE,CAAC,IAAIqE,MAAM,CAAC,CAAC,CAAC,CAACpE,CAAC,EAAE,CAAC;;MAEpD;MACA,MAAMsE,gBAAgB,GAAGA,CAACxD,EAAE,EAAEG,EAAE,EAAEsD,EAAE,KAAK;QACvC,MAAMC,GAAG,GAAGvD,EAAE,CAAClB,CAAC,GAAGe,EAAE,CAACf,CAAC;QACvB,MAAM0E,GAAG,GAAGxD,EAAE,CAACjB,CAAC,GAAGc,EAAE,CAACd,CAAC;QACvB,MAAM0E,GAAG,GAAGH,EAAE,CAACxE,CAAC,GAAGkB,EAAE,CAAClB,CAAC;QACvB,MAAM4E,GAAG,GAAGJ,EAAE,CAACvE,CAAC,GAAGiB,EAAE,CAACjB,CAAC;QAEvB,OAAO,CACL;UAAED,CAAC,EAAEkB,EAAE,CAAClB,CAAC,GAAGyE,GAAG,GAAG,CAAC;UAAExE,CAAC,EAAEiB,EAAE,CAACjB,CAAC,GAAGyE,GAAG,GAAG;QAAE,CAAC,EACxC;UAAE1E,CAAC,EAAEkB,EAAE,CAAClB,CAAC,GAAG2E,GAAG,GAAG,CAAC;UAAE1E,CAAC,EAAEiB,EAAE,CAACjB,CAAC,GAAG2E,GAAG,GAAG;QAAE,CAAC,CACzC;MACH,CAAC;;MAED;MACA,MAAMC,SAAS,GAAG,EAAE;MAEpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,MAAM,CAACrB,MAAM,GAAG,CAAC,EAAE8B,CAAC,EAAE,EAAE;QAC1C,MAAM/D,EAAE,GAAG+D,CAAC,KAAK,CAAC,GAAGT,MAAM,CAACS,CAAC,CAAC,GAAGT,MAAM,CAACS,CAAC,GAAG,CAAC,CAAC;QAC9C,MAAM5D,EAAE,GAAGmD,MAAM,CAACS,CAAC,CAAC;QACpB,MAAMN,EAAE,GAAGH,MAAM,CAACS,CAAC,GAAG,CAAC,CAAC;QAExB,IAAI9D,EAAE,EAAEC,EAAE;QACV,IAAI6D,CAAC,KAAK,CAAC,EAAE;UACX9D,EAAE,GAAG;YAAEhB,CAAC,EAAE,CAACkB,EAAE,CAAClB,CAAC,GAAGwE,EAAE,CAACxE,CAAC,IAAI,CAAC;YAAEC,CAAC,EAAEiB,EAAE,CAACjB;UAAE,CAAC;UACtCgB,EAAE,GAAG;YAAEjB,CAAC,EAAE,CAACkB,EAAE,CAAClB,CAAC,GAAGwE,EAAE,CAACxE,CAAC,IAAI,CAAC;YAAEC,CAAC,EAAEuE,EAAE,CAACvE;UAAE,CAAC;QACxC,CAAC,MAAM;UACL,CAACe,EAAE,EAAEC,EAAE,CAAC,GAAGsD,gBAAgB,CAACxD,EAAE,EAAEG,EAAE,EAAEsD,EAAE,CAAC;QACzC;QAEAF,SAAS,CAACrB,IAAI,CAAC,IAAIjC,EAAE,CAAChB,CAAC,IAAIgB,EAAE,CAACf,CAAC,IAAIgB,EAAE,CAACjB,CAAC,IAAIiB,EAAE,CAAChB,CAAC,IAAIuE,EAAE,CAACxE,CAAC,IAAIwE,EAAE,CAACvE,CAAC,EAAE,CAAC;;QAElE;QACA,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,CAACC,OAAO,CAAEiB,CAAC,IAAK;UAC/B,MAAMmB,EAAE,GAAGxB,gBAAgB,CAACI,EAAE,EAAEF,EAAE,EAAEC,EAAE,EAAEuD,EAAE,EAAErD,CAAC,CAAC;UAC9C0D,SAAS,CAAC5B,IAAI,CAAC;YAAE,GAAGX,EAAE;YAAEV,YAAY,EAAEkD,CAAC;YAAE3D;UAAE,CAAC,CAAC;QAC/C,CAAC,CAAC;MACJ;MAEA,MAAM4D,CAAC,GAAGT,SAAS,CAACU,IAAI,CAAC,GAAG,CAAC;;MAE7B;MACAxB,KAAK,CAACP,IAAI,cACR/E,OAAA;QAEE6G,CAAC,EAAEA,CAAE;QACLE,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,0BAA0B;QACjCC,WAAW,EAAC,KAAK;QACjBC,SAAS,EAAC;MAAiB,GALtB,QAAQ3B,CAAC,EAAE;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMjB,CACH,CAAC;;MAED;MACAzC,WAAW,CAAC7C,OAAO,CAAC,CAACoC,EAAE,EAAEmD,GAAG,KAAK;QAC/BjC,KAAK,CAACP,IAAI,cACR/E,OAAA;UAEEwH,EAAE,EAAEpD,EAAE,CAACtC,CAAE;UACT2F,EAAE,EAAErD,EAAE,CAACrC,CAAE;UACT2F,CAAC,EAAE,CAAE;UACLX,IAAI,EAAC,0BAA0B;UAC/BC,MAAM,EAAC,wBAAwB;UAC/BC,WAAW,EAAE,GAAI;UACjBU,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAO,CAAE;UAC1BC,WAAW,EAAGlE,CAAC,IAAKH,mBAAmB,CAAC0C,GAAG,EAAEqB,GAAG,EAAE,CAAC,CAAC,qBAAqB5D,CAAC,CAAE;UAC5EmE,YAAY,EAAGnE,CAAC,IAAKH,mBAAmB,CAAC0C,GAAG,EAAEqB,GAAG,EAAE,CAAC,EAAE5D,CAAC;QAAE,GATpD,cAAc4B,CAAC,IAAIgC,GAAG,EAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAU9B,CACH,CAAC;MACH,CAAC,CAAC;;MAEF;MACAX,SAAS,CAAC3E,OAAO,CAAC,CAAC;QAAEF,CAAC;QAAEC,CAAC;QAAE2B,YAAY;QAAET;MAAE,CAAC,EAAEsE,GAAG,KAAK;QACpDjC,KAAK,CAACP,IAAI,cACR/E,OAAA;UAEEwH,EAAE,EAAE1F,CAAE;UACN2F,EAAE,EAAE1F,CAAE;UACN2F,CAAC,EAAE,CAAE;UACLX,IAAI,EAAC,wBAAwB;UAC7BC,MAAM,EAAC,wBAAwB;UAC/BC,WAAW,EAAE,GAAI;UACjBU,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAO,CAAE;UAC1BC,WAAW,EAAGlE,CAAC,IAAKH,mBAAmB,CAAC0C,GAAG,EAAExC,YAAY,EAAET,CAAC,EAAEU,CAAC,CAAE;UACjEmE,YAAY,EAAGnE,CAAC,IAAKH,mBAAmB,CAAC0C,GAAG,EAAExC,YAAY,EAAET,CAAC,EAAEU,CAAC;QAAE,GAT7D,aAAa4B,CAAC,IAAI7B,YAAY,IAAI6D,GAAG,EAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAU7C,CACH,CAAC;MACH,CAAC,CAAC;IACJ;IAEA,OAAOhC,KAAK;EACd,CAAC;EAED,oBACEtF,OAAA;IACE+H,SAAS,EAAC,cAAc;IACxBJ,KAAK,EAAE;MACLK,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE,UAAU;MACpBC,QAAQ,EAAE,MAAM;MAChBC,OAAO,EAAE;IACX,CAAE;IACFC,GAAG,EAAE3H,YAAa;IAAA4H,QAAA,gBAElBtI,OAAA;MACE+H,SAAS,EAAC,eAAe;MACzBJ,KAAK,EAAE;QAAEO,QAAQ,EAAE,UAAU;QAAEK,GAAG,EAAE,CAAC;QAAEC,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAE;MAAAH,QAAA,gBAE7DtI,OAAA;QACE+H,SAAS,EAAC,UAAU;QACpBW,OAAO,EAAEA,CAAA,KAAMjI,QAAQ,CAAEkI,CAAC,IAAKzF,IAAI,CAAC0F,GAAG,CAAC,CAAC,EAAE,CAAC,CAACD,CAAC,GAAG,GAAG,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAE;QACnEC,KAAK,EAAC,SAAS;QACfnB,KAAK,EAAE;UAAEoB,WAAW,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAV,QAAA,EAChD;MAED;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtH,OAAA;QACE+H,SAAS,EAAC,UAAU;QACpBW,OAAO,EAAEA,CAAA,KAAMjI,QAAQ,CAAEkI,CAAC,IAAKzF,IAAI,CAAC+F,GAAG,CAAC,GAAG,EAAE,CAAC,CAACN,CAAC,GAAG,GAAG,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAE;QACrEC,KAAK,EAAC,UAAU;QAAAR,QAAA,EACjB;MAED;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENtH,OAAA;MACE+H,SAAS,EAAC,gBAAgB;MAC1BJ,KAAK,EAAE;QACLuB,SAAS,EAAE,SAAS1I,KAAK,GAAG;QAC5B2I,eAAe,EAAE,KAAK;QACtBjB,QAAQ,EAAE,UAAU;QACpBkB,SAAS,EAAE,MAAM;QACjBpB,KAAK,EAAE;MACT,CAAE;MAAAM,QAAA,gBAEFtI,OAAA;QACE2H,KAAK,EAAE;UACLO,QAAQ,EAAE,UAAU;UACpBF,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdoB,aAAa,EAAE,MAAM;UACrBlB,QAAQ,EAAE,SAAS;UACnBI,GAAG,EAAE,CAAC;UACNe,IAAI,EAAE;QACR,CAAE;QAAAhB,QAAA,gBAEFtI,OAAA;UAAAsI,QAAA,eACEtI,OAAA;YACEuJ,EAAE,EAAC,WAAW;YACdC,WAAW,EAAC,IAAI;YAChBC,YAAY,EAAC,GAAG;YAChBC,IAAI,EAAC,IAAI;YACTC,IAAI,EAAC,KAAK;YACVC,MAAM,EAAC,MAAM;YACb7C,IAAI,EAAC,0BAA0B;YAAAuB,QAAA,eAE/BtI,OAAA;cAASmG,MAAM,EAAC;YAAkB;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACNrC,WAAW,CAAC,CAAC;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,EAELlH,aAAa,CAACyJ,GAAG,CAAC,CAAC5H,IAAI,EAAE6H,KAAK,kBAC7B9J,OAAA,CAACH,aAAa;QAEZoC,IAAI,EAAEA,IAAK;QACXiG,QAAQ,EAAE5H,SAAS,CAAC2B,IAAI,CAAC,IAAI;UAAEH,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAE;QAC5CgI,gBAAgB,EAAE1H,oBAAqB;QACvCqG,OAAO,EAAEnG,eAAgB;QACzByH,OAAO,EAAEF,KAAK,KAAK;MAAE,GALhB7H,IAAI;QAAAkF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnH,EAAA,CAjXID,WAAW;EAAA,QAC2BN,eAAe;AAAA;AAAAqK,EAAA,GADrD/J,WAAW;AAmXjB,eAAeA,WAAW;AAAC,IAAA+J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}