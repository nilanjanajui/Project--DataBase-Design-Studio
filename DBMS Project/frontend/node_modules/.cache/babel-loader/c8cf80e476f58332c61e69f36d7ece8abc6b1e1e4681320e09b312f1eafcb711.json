{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\context\\\\StateContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateContext = /*#__PURE__*/createContext();\nexport const StateProvider = ({\n  children\n}) => {\n  _s();\n  const [workflowSteps, setWorkflowSteps] = useState([]);\n  const [currentCode, setCurrentCodeState] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [normalizedTables, setNormalizedTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState('');\n  const [selectedTableData, setSelectedTableData] = useState(null);\n  const [originalFDs, setOriginalFDs] = useState([]);\n  const [decomposedSchemas, setDecomposedSchemas] = useState([]);\n  const [erDiagramGenerated, setErDiagramGenerated] = useState(false);\n  const [fdGenerated, setFDGenerated] = useState(false);\n  const addWorkflowStep = useCallback(stepName => {\n    setWorkflowSteps(prev => prev.includes(stepName) ? prev : [...prev, stepName]);\n  }, []);\n  const fetchCode = useCallback(async stepName => {\n    try {\n      const response = await axios.get(`/api/code/${stepName}`);\n      return response.data.code;\n    } catch {\n      return 'Error fetching code.';\n    }\n  }, []);\n  const setCurrentCode = useCallback(code => {\n    setCurrentCodeState(code);\n  }, []);\n  const addMessage = useCallback(msg => {\n    setMessages(prev => [...prev, msg]);\n  }, []);\n  const fetchNormalizedTables = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/normalized_tables');\n      setNormalizedTables(response.data.tables || []);\n    } catch (error) {\n      console.error('Failed to fetch normalized tables', error);\n    }\n  }, []);\n\n  // In StateContext.jsx, update the fetchSelectedTableData function:\n  const fetchSelectedTableData = useCallback(async tableName => {\n    try {\n      const response = await axios.get(`/api/get_normalized_table/${tableName}`);\n      setSelectedTable(response.data.name);\n      setSelectedTableData({\n        headers: response.data.headers,\n        rows: response.data.rows\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch table data', error);\n      setSelectedTableData(null);\n      throw error;\n    }\n  }, []);\n  const fetchOriginalFDs = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/detected_fds');\n      setOriginalFDs(response.data.fds || []);\n    } catch (error) {\n      console.error('Failed to fetch Functional Dependencies', error);\n      setOriginalFDs([]);\n    }\n  }, []);\n  const fetchDecomposedSchemas = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/decomposed_schemas');\n      setDecomposedSchemas(response.data.schemas || []);\n    } catch (error) {\n      console.error('Failed to fetch Decomposed Schemas', error);\n      setDecomposedSchemas([]);\n    }\n  }, []);\n  const checkDependencyPreservation = useCallback(async (fds, schemas) => {\n    try {\n      const response = await axios.post('/api/dependency_preservation', {\n        originalFDs: fds,\n        decomposedSchemas: schemas\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const message = response.data.message || 'Dependency preservation checked.';\n      addMessage(message);\n      addWorkflowStep('DependencyPreservation');\n      return message;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errMsg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Dependency preservation check failed.';\n      addMessage(errMsg);\n      throw new Error(errMsg);\n    }\n  }, [addMessage, addWorkflowStep]);\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: {\n      workflowSteps,\n      addWorkflowStep,\n      fetchCode,\n      currentCode,\n      setCurrentCode,\n      messages,\n      addMessage,\n      normalizedTables,\n      fetchNormalizedTables,\n      fdGenerated,\n      setFDGenerated,\n      selectedTable,\n      setSelectedTable,\n      selectedTableData,\n      fetchSelectedTableData,\n      originalFDs,\n      fetchOriginalFDs,\n      decomposedSchemas,\n      fetchDecomposedSchemas,\n      checkDependencyPreservation,\n      erDiagramGenerated,\n      setErDiagramGenerated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(StateProvider, \"XKhtjCpN11LvXe6GNrOyapwTP/I=\");\n_c = StateProvider;\nexport const useStateContext = () => {\n  _s2();\n  return useContext(StateContext);\n};\n_s2(useStateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","axios","jsxDEV","_jsxDEV","StateContext","StateProvider","children","_s","workflowSteps","setWorkflowSteps","currentCode","setCurrentCodeState","messages","setMessages","normalizedTables","setNormalizedTables","selectedTable","setSelectedTable","selectedTableData","setSelectedTableData","originalFDs","setOriginalFDs","decomposedSchemas","setDecomposedSchemas","erDiagramGenerated","setErDiagramGenerated","fdGenerated","setFDGenerated","addWorkflowStep","stepName","prev","includes","fetchCode","response","get","data","code","setCurrentCode","addMessage","msg","fetchNormalizedTables","tables","error","console","fetchSelectedTableData","tableName","name","headers","rows","fetchOriginalFDs","fds","fetchDecomposedSchemas","schemas","checkDependencyPreservation","post","message","_error$response","_error$response$data","errMsg","Error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStateContext","_s2","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/context/StateContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst StateContext = createContext();\r\n\r\nexport const StateProvider = ({ children }) => {\r\n  const [workflowSteps, setWorkflowSteps] = useState([]);\r\n  const [currentCode, setCurrentCodeState] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [normalizedTables, setNormalizedTables] = useState([]);\r\n  const [selectedTable, setSelectedTable] = useState('');\r\n  const [selectedTableData, setSelectedTableData] = useState(null);\r\n\r\n  const [originalFDs, setOriginalFDs] = useState([]);\r\n  const [decomposedSchemas, setDecomposedSchemas] = useState([]);\r\n  const [erDiagramGenerated, setErDiagramGenerated] = useState(false);\r\n  const [fdGenerated, setFDGenerated] = useState(false);\r\n\r\n\r\n  const addWorkflowStep = useCallback((stepName) => {\r\n    setWorkflowSteps((prev) => (prev.includes(stepName) ? prev : [...prev, stepName]));\r\n  }, []);\r\n\r\n  const fetchCode = useCallback(async (stepName) => {\r\n    try {\r\n      const response = await axios.get(`/api/code/${stepName}`);\r\n      return response.data.code;\r\n    } catch {\r\n      return 'Error fetching code.';\r\n    }\r\n  }, []);\r\n\r\n  const setCurrentCode = useCallback((code) => {\r\n    setCurrentCodeState(code);\r\n  }, []);\r\n\r\n  const addMessage = useCallback((msg) => {\r\n    setMessages((prev) => [...prev, msg]);\r\n  }, []);\r\n\r\n  const fetchNormalizedTables = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/normalized_tables');\r\n      setNormalizedTables(response.data.tables || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch normalized tables', error);\r\n    }\r\n  }, []);\r\n\r\n  // In StateContext.jsx, update the fetchSelectedTableData function:\r\n  const fetchSelectedTableData = useCallback(async (tableName) => {\r\n    try {\r\n      const response = await axios.get(`/api/get_normalized_table/${tableName}`);\r\n      setSelectedTable(response.data.name);\r\n      setSelectedTableData({\r\n        headers: response.data.headers,\r\n        rows: response.data.rows\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Failed to fetch table data', error);\r\n      setSelectedTableData(null);\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  const fetchOriginalFDs = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/detected_fds');\r\n      setOriginalFDs(response.data.fds || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch Functional Dependencies', error);\r\n      setOriginalFDs([]);\r\n    }\r\n  }, []);\r\n\r\n  const fetchDecomposedSchemas = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/decomposed_schemas');\r\n      setDecomposedSchemas(response.data.schemas || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch Decomposed Schemas', error);\r\n      setDecomposedSchemas([]);\r\n    }\r\n  }, []);\r\n\r\n  const checkDependencyPreservation = useCallback(async (fds, schemas) => {\r\n    try {\r\n      const response = await axios.post(\r\n        '/api/dependency_preservation',\r\n        { originalFDs: fds, decomposedSchemas: schemas },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      );\r\n      const message = response.data.message || 'Dependency preservation checked.';\r\n      addMessage(message);\r\n      addWorkflowStep('DependencyPreservation');\r\n      return message;\r\n    } catch (error) {\r\n      const errMsg = error.response?.data?.message || 'Dependency preservation check failed.';\r\n      addMessage(errMsg);\r\n      throw new Error(errMsg);\r\n    }\r\n  }, [addMessage, addWorkflowStep]);\r\n\r\n  return (\r\n    <StateContext.Provider\r\n      value={{\r\n        workflowSteps,\r\n        addWorkflowStep,\r\n        fetchCode,\r\n        currentCode,\r\n        setCurrentCode,\r\n        messages,\r\n        addMessage,\r\n        normalizedTables,\r\n        fetchNormalizedTables,\r\n        fdGenerated,\r\n        setFDGenerated,\r\n        selectedTable,\r\n        setSelectedTable,\r\n        selectedTableData,\r\n        fetchSelectedTableData,\r\n        originalFDs,\r\n        fetchOriginalFDs,\r\n        decomposedSchemas,\r\n        fetchDecomposedSchemas,\r\n        checkDependencyPreservation,\r\n        erDiagramGenerated,\r\n        setErDiagramGenerated,\r\n\r\n      }}\r\n    >\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useStateContext = () => useContext(StateContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}