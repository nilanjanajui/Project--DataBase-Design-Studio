{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\MessagePanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { FaTable } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagePanel = () => {\n  _s();\n  const [normalizedTables, setNormalizedTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(null);\n  const [selectedTableData, setSelectedTableData] = useState([]);\n  useEffect(() => {\n    const fetchTables = async () => {\n      try {\n        const response = await fetch('/api/normalized_tables');\n        const data = await response.json();\n        console.log(\"📃 Normalized Tables:\", data.tables);\n        setNormalizedTables(data.tables || []);\n      } catch (error) {\n        console.error(\"💥 Failed to fetch tables:\", error);\n      }\n    };\n    fetchTables();\n  }, []);\n  const handleTableClick = async table => {\n    const filename = table.endsWith('.csv') ? table : `${table}.csv`;\n    console.log(\"📤 Clicking table:\", table);\n    console.log(\"📁 Sending request for:\", filename);\n    try {\n      const response = await fetch(`/api/table/${filename}`);\n      const data = await response.json();\n      if (data.rows && data.rows.length > 0) {\n        console.log(\"✅ Table data fetched:\", data.rows);\n        setSelectedTableData(data.rows);\n        setSelectedTable(filename);\n      } else {\n        console.warn(\"⚠️ No rows found or empty table\");\n        setSelectedTableData([]);\n        setSelectedTable(filename);\n      }\n    } catch (error) {\n      console.error(\"💥 Error fetching table data:\", error);\n      setSelectedTableData([]);\n    }\n  };\n  const stripExtension = filename => filename.replace(/\\.csv$/i, '');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Normalized Tables\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), normalizedTables.map((table, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleTableClick(table),\n      children: [/*#__PURE__*/_jsxDEV(FaTable, {\n        style: {\n          marginRight: '6px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), stripExtension(table)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)), selectedTable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: stripExtension(selectedTable)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), selectedTableData.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(selectedTableData[0]).map((col, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: col\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: selectedTableData.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(row).map((val, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 23\n            }, this))\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(MessagePanel, \"wty5zSocxN3a2ZqBcg1V/QLqCo4=\");\n_c = MessagePanel;\nexport default MessagePanel;\nvar _c;\n$RefreshReg$(_c, \"MessagePanel\");","map":{"version":3,"names":["React","useEffect","useState","FaTable","jsxDEV","_jsxDEV","MessagePanel","_s","normalizedTables","setNormalizedTables","selectedTable","setSelectedTable","selectedTableData","setSelectedTableData","fetchTables","response","fetch","data","json","console","log","tables","error","handleTableClick","table","filename","endsWith","rows","length","warn","stripExtension","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","style","marginRight","border","Object","keys","col","idx","row","values","val","i","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/MessagePanel.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FaTable } from 'react-icons/fa';\r\n\r\nconst MessagePanel = () => {\r\n  const [normalizedTables, setNormalizedTables] = useState([]);\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n  const [selectedTableData, setSelectedTableData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTables = async () => {\r\n      try {\r\n        const response = await fetch('/api/normalized_tables');\r\n        const data = await response.json();\r\n        console.log(\"📃 Normalized Tables:\", data.tables);\r\n        setNormalizedTables(data.tables || []);\r\n      } catch (error) {\r\n        console.error(\"💥 Failed to fetch tables:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTables();\r\n  }, []);\r\n\r\n  const handleTableClick = async (table) => {\r\n    const filename = table.endsWith('.csv') ? table : `${table}.csv`;\r\n\r\n    console.log(\"📤 Clicking table:\", table);\r\n    console.log(\"📁 Sending request for:\", filename);\r\n\r\n    try {\r\n      const response = await fetch(`/api/table/${filename}`);\r\n      const data = await response.json();\r\n\r\n      if (data.rows && data.rows.length > 0) {\r\n        console.log(\"✅ Table data fetched:\", data.rows);\r\n        setSelectedTableData(data.rows);\r\n        setSelectedTable(filename);\r\n      } else {\r\n        console.warn(\"⚠️ No rows found or empty table\");\r\n        setSelectedTableData([]);\r\n        setSelectedTable(filename);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"💥 Error fetching table data:\", error);\r\n      setSelectedTableData([]);\r\n    }\r\n  };\r\n\r\n  const stripExtension = (filename) => filename.replace(/\\.csv$/i, '');\r\n\r\n  return (\r\n    <div className=\"message-panel\">\r\n      <h3>Normalized Tables</h3>\r\n\r\n      {normalizedTables.map((table, index) => (\r\n        <button key={index} onClick={() => handleTableClick(table)}>\r\n          <FaTable style={{ marginRight: '6px' }} />\r\n          {stripExtension(table)}\r\n        </button>\r\n      ))}\r\n\r\n      {selectedTable && (\r\n        <div className=\"table-display\">\r\n          <h4>{stripExtension(selectedTable)}</h4>\r\n          {selectedTableData.length > 0 ? (\r\n            <table border=\"1\">\r\n              <thead>\r\n                <tr>\r\n                  {Object.keys(selectedTableData[0]).map((col, idx) => (\r\n                    <th key={idx}>{col}</th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {selectedTableData.map((row, idx) => (\r\n                  <tr key={idx}>\r\n                    {Object.values(row).map((val, i) => (\r\n                      <td key={i}>{val}</td>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>No data found</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagePanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}