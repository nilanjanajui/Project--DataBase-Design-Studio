{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\CodePanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useStateContext } from \"../context/StateContext\";\nimport Prism from \"prismjs\";\n// Import Prism CSS for styling (choose a theme or create your own)\nimport \"prismjs/themes/prism-tomorrow.css\";\n// Import languages you want to support, e.g., JavaScript\nimport \"prismjs/components/prism-jsx.min.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodePanel = () => {\n  _s();\n  const {\n    currentCode\n  } = useStateContext();\n  const codeRef = useRef(null);\n\n  // Re-highlight whenever currentCode changes\n  useEffect(() => {\n    if (codeRef.current) {\n      Prism.highlightElement(codeRef.current);\n    }\n  }, [currentCode]);\n  const styles = {\n    container: {\n      overflowY: \"auto\",\n      height: \"100%\",\n      padding: 10,\n      backgroundColor: \"#3c3b3bff\",\n      color: \"#8f8e8eff\",\n      fontFamily: \"'Source Code Pro', monospace\",\n      fontSize: 14,\n      borderRadius: 4,\n      boxSizing: \"border-box\",\n      userSelect: \"text\",\n      whiteSpace: \"pre-wrap\",\n      wordBreak: \"break-word\",\n      outline: \"none\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"code-panel\",\n    style: styles.container,\n    \"aria-label\": \"Code display panel\",\n    tabIndex: 0,\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        ref: codeRef,\n        className: \"language-jsx\",\n        children: currentCode || \"Click a button in Output Panel to see code here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CodePanel, \"wN2EvVLsLXL9aWYKOsR5xE1J9ik=\", false, function () {\n  return [useStateContext];\n});\n_c = CodePanel;\nexport default CodePanel;\nvar _c;\n$RefreshReg$(_c, \"CodePanel\");","map":{"version":3,"names":["React","useEffect","useRef","useStateContext","Prism","jsxDEV","_jsxDEV","CodePanel","_s","currentCode","codeRef","current","highlightElement","styles","container","overflowY","height","padding","backgroundColor","color","fontFamily","fontSize","borderRadius","boxSizing","userSelect","whiteSpace","wordBreak","outline","className","style","tabIndex","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/CodePanel.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useStateContext } from \"../context/StateContext\";\r\nimport Prism from \"prismjs\";\r\n// Import Prism CSS for styling (choose a theme or create your own)\r\nimport \"prismjs/themes/prism-tomorrow.css\"; \r\n// Import languages you want to support, e.g., JavaScript\r\nimport \"prismjs/components/prism-jsx.min.js\"; \r\n\r\nconst CodePanel = () => {\r\n  const { currentCode } = useStateContext();\r\n  const codeRef = useRef(null);\r\n\r\n  // Re-highlight whenever currentCode changes\r\n  useEffect(() => {\r\n    if (codeRef.current) {\r\n      Prism.highlightElement(codeRef.current);\r\n    }\r\n  }, [currentCode]);\r\n\r\n  const styles = {\r\n    container: {\r\n      overflowY: \"auto\",\r\n      height: \"100%\",\r\n      padding: 10,\r\n      backgroundColor: \"#3c3b3bff\",\r\n      color: \"#8f8e8eff\",\r\n      fontFamily: \"'Source Code Pro', monospace\",\r\n      fontSize: 14,\r\n      borderRadius: 4,\r\n      boxSizing: \"border-box\",\r\n      userSelect: \"text\",\r\n      whiteSpace: \"pre-wrap\",\r\n      wordBreak: \"break-word\",\r\n      outline: \"none\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className=\"code-panel\"\r\n      style={styles.container}\r\n      aria-label=\"Code display panel\"\r\n      tabIndex={0}\r\n    >\r\n      <pre>\r\n        <code ref={codeRef} className=\"language-jsx\">\r\n          {currentCode || \"Click a button in Output Panel to see code here.\"}\r\n        </code>\r\n      </pre>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CodePanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,eAAe,QAAQ,yBAAyB;AACzD,OAAOC,KAAK,MAAM,SAAS;AAC3B;AACA,OAAO,mCAAmC;AAC1C;AACA,OAAO,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAY,CAAC,GAAGN,eAAe,CAAC,CAAC;EACzC,MAAMO,OAAO,GAAGR,MAAM,CAAC,IAAI,CAAC;;EAE5B;EACAD,SAAS,CAAC,MAAM;IACd,IAAIS,OAAO,CAACC,OAAO,EAAE;MACnBP,KAAK,CAACQ,gBAAgB,CAACF,OAAO,CAACC,OAAO,CAAC;IACzC;EACF,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,MAAMI,MAAM,GAAG;IACbC,SAAS,EAAE;MACTC,SAAS,EAAE,MAAM;MACjBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE,EAAE;MACXC,eAAe,EAAE,WAAW;MAC5BC,KAAK,EAAE,WAAW;MAClBC,UAAU,EAAE,8BAA8B;MAC1CC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,CAAC;MACfC,SAAS,EAAE,YAAY;MACvBC,UAAU,EAAE,MAAM;MAClBC,UAAU,EAAE,UAAU;MACtBC,SAAS,EAAE,YAAY;MACvBC,OAAO,EAAE;IACX;EACF,CAAC;EAED,oBACErB,OAAA;IACEsB,SAAS,EAAC,YAAY;IACtBC,KAAK,EAAEhB,MAAM,CAACC,SAAU;IACxB,cAAW,oBAAoB;IAC/BgB,QAAQ,EAAE,CAAE;IAAAC,QAAA,eAEZzB,OAAA;MAAAyB,QAAA,eACEzB,OAAA;QAAM0B,GAAG,EAAEtB,OAAQ;QAACkB,SAAS,EAAC,cAAc;QAAAG,QAAA,EACzCtB,WAAW,IAAI;MAAkD;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAAC5B,EAAA,CA3CID,SAAS;EAAA,QACWJ,eAAe;AAAA;AAAAkC,EAAA,GADnC9B,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}