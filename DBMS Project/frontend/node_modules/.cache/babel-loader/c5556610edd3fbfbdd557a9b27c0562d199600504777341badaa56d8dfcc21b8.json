{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\OutputPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useStateContext } from '../context/StateContext';\nimport Draggable from 'react-draggable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OutputPanel = () => {\n  _s();\n  const {\n    workflowSteps,\n    fetchCode,\n    setCurrentCode\n  } = useStateContext();\n  const panelRef = useRef(null);\n  const [positions, setPositions] = useState({});\n\n  // Initialize position for new steps\n  useEffect(() => {\n    const newPositions = {};\n    workflowSteps.forEach((step, index) => {\n      if (!positions[step]) {\n        newPositions[step] = {\n          x: 50 + index * 150,\n          y: 50 + index * 100\n        };\n      } else {\n        newPositions[step] = positions[step];\n      }\n    });\n    setPositions(newPositions);\n  }, [workflowSteps]);\n\n  // Handle dragging buttons\n  const handleDrag = (e, data, step) => {\n    setPositions(prev => ({\n      ...prev,\n      [step]: {\n        x: data.x,\n        y: data.y\n      }\n    }));\n  };\n\n  // Handle clicking button to fetch code\n  const handleClick = async step => {\n    const code = await fetchCode(step);\n    setCurrentCode(code);\n  };\n\n  // Draw lines (wires) connecting the steps sequentially\n  const renderWires = () => {\n    const wires = [];\n    for (let i = 0; i < workflowSteps.length - 1; i++) {\n      const fromStep = workflowSteps[i];\n      const toStep = workflowSteps[i + 1];\n      const fromPos = positions[fromStep];\n      const toPos = positions[toStep];\n      if (fromPos && toPos) {\n        const x1 = fromPos.x + 75; // center of button (width/2)\n        const y1 = fromPos.y + 25; // center of button (height/2)\n        const x2 = toPos.x + 75;\n        const y2 = toPos.y + 25;\n        wires.push(/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          markerEnd: \"url(#arrowhead)\"\n        }, `wire-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return wires;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"output-panel\",\n    ref: panelRef,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      border: '1px solid #ccc'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        pointerEvents: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrowhead\",\n          markerWidth: \"10\",\n          markerHeight: \"7\",\n          refX: \"10\",\n          refY: \"3.5\",\n          orient: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"0 0, 10 3.5, 0 7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), renderWires()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), workflowSteps.map(step => /*#__PURE__*/_jsxDEV(Draggable, {\n      bounds: \"parent\",\n      position: positions[step],\n      onDrag: (e, data) => handleDrag(e, data, step),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-button\",\n        onClick: () => handleClick(step),\n        style: {\n          position: 'absolute',\n          width: '150px',\n          height: '50px',\n          background: '#e0e0e0',\n          border: '1px solid #000',\n          borderRadius: '8px',\n          textAlign: 'center',\n          lineHeight: '50px',\n          cursor: 'pointer',\n          userSelect: 'none',\n          zIndex: 2\n        },\n        children: step\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, step, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(OutputPanel, \"OyMzQL5p0v133mzqhtZxGRrARC8=\", false, function () {\n  return [useStateContext];\n});\n_c = OutputPanel;\nexport default OutputPanel;\nvar _c;\n$RefreshReg$(_c, \"OutputPanel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useStateContext","Draggable","jsxDEV","_jsxDEV","OutputPanel","_s","workflowSteps","fetchCode","setCurrentCode","panelRef","positions","setPositions","newPositions","forEach","step","index","x","y","handleDrag","e","data","prev","handleClick","code","renderWires","wires","i","length","fromStep","toStep","fromPos","toPos","x1","y1","x2","y2","push","stroke","strokeWidth","markerEnd","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","style","position","width","height","border","children","pointerEvents","id","markerWidth","markerHeight","refX","refY","orient","points","map","bounds","onDrag","onClick","background","borderRadius","textAlign","lineHeight","cursor","userSelect","zIndex","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/OutputPanel.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useStateContext } from '../context/StateContext';\r\nimport Draggable from 'react-draggable';\r\n\r\nconst OutputPanel = () => {\r\n  const { workflowSteps, fetchCode, setCurrentCode } = useStateContext();\r\n  const panelRef = useRef(null);\r\n  const [positions, setPositions] = useState({});\r\n\r\n  // Initialize position for new steps\r\n  useEffect(() => {\r\n    const newPositions = {};\r\n    workflowSteps.forEach((step, index) => {\r\n      if (!positions[step]) {\r\n        newPositions[step] = { x: 50 + index * 150, y: 50 + index * 100 };\r\n      } else {\r\n        newPositions[step] = positions[step];\r\n      }\r\n    });\r\n    setPositions(newPositions);\r\n  }, [workflowSteps]);\r\n\r\n  // Handle dragging buttons\r\n  const handleDrag = (e, data, step) => {\r\n    setPositions((prev) => ({\r\n      ...prev,\r\n      [step]: { x: data.x, y: data.y }\r\n    }));\r\n  };\r\n\r\n  // Handle clicking button to fetch code\r\n  const handleClick = async (step) => {\r\n    const code = await fetchCode(step);\r\n    setCurrentCode(code);\r\n  };\r\n\r\n  // Draw lines (wires) connecting the steps sequentially\r\n  const renderWires = () => {\r\n    const wires = [];\r\n    for (let i = 0; i < workflowSteps.length - 1; i++) {\r\n      const fromStep = workflowSteps[i];\r\n      const toStep = workflowSteps[i + 1];\r\n      const fromPos = positions[fromStep];\r\n      const toPos = positions[toStep];\r\n\r\n      if (fromPos && toPos) {\r\n        const x1 = fromPos.x + 75; // center of button (width/2)\r\n        const y1 = fromPos.y + 25; // center of button (height/2)\r\n        const x2 = toPos.x + 75;\r\n        const y2 = toPos.y + 25;\r\n\r\n        wires.push(\r\n          <line\r\n            key={`wire-${i}`}\r\n            x1={x1}\r\n            y1={y1}\r\n            x2={x2}\r\n            y2={y2}\r\n            stroke=\"black\"\r\n            strokeWidth=\"2\"\r\n            markerEnd=\"url(#arrowhead)\"\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return wires;\r\n  };\r\n\r\n  return (\r\n    <div className=\"output-panel\" ref={panelRef} style={{ position: 'relative', width: '100%', height: '100%', border: '1px solid #ccc' }}>\r\n      <svg style={{ position: 'absolute', width: '100%', height: '100%', pointerEvents: 'none' }}>\r\n        <defs>\r\n          <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\" refX=\"10\" refY=\"3.5\" orient=\"auto\">\r\n            <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n          </marker>\r\n        </defs>\r\n        {renderWires()}\r\n      </svg>\r\n\r\n      {workflowSteps.map((step) => (\r\n        <Draggable\r\n          key={step}\r\n          bounds=\"parent\"\r\n          position={positions[step]}\r\n          onDrag={(e, data) => handleDrag(e, data, step)}\r\n        >\r\n          <div\r\n            className=\"output-button\"\r\n            onClick={() => handleClick(step)}\r\n            style={{\r\n              position: 'absolute',\r\n              width: '150px',\r\n              height: '50px',\r\n              background: '#e0e0e0',\r\n              border: '1px solid #000',\r\n              borderRadius: '8px',\r\n              textAlign: 'center',\r\n              lineHeight: '50px',\r\n              cursor: 'pointer',\r\n              userSelect: 'none',\r\n              zIndex: 2\r\n            }}\r\n          >\r\n            {step}\r\n          </div>\r\n        </Draggable>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutputPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}