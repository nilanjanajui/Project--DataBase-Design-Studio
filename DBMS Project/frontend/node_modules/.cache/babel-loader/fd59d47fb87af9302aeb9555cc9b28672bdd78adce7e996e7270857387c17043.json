{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBMS\\\\DBMS Project\\\\frontend\\\\src\\\\components\\\\OutputPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useStateContext } from '../context/StateContext';\nimport DraggableStep from './DraggableStep';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEY = 'workflowStepPositions';\nconst OutputPanel = () => {\n  _s();\n  const {\n    workflowSteps,\n    setCurrentCode\n  } = useStateContext();\n  const [positions, setPositions] = useState({});\n  const [boxWidths, setBoxWidths] = useState({});\n  const [scale, setScale] = useState(1);\n  const containerRef = useRef(null);\n  const [controlPoints, setControlPoints] = useState({});\n  const positionsInitialized = useRef(false);\n\n  // Undo / Redo stacks\n  const [undoStack, setUndoStack] = useState([]);\n  const [redoStack, setRedoStack] = useState([]);\n\n  // Current focused step index for step-by-step navigation\n  const [currentStepIndex, setCurrentStepIndex] = useState(null);\n\n  // Track which steps are \"removed\" (hidden)\n  const [removedSteps, setRemovedSteps] = useState(new Set());\n\n  // Flag to track if any action panel button was clicked\n  const [actionPanelClicked, setActionPanelClicked] = useState(false);\n  const boxHeight = 44;\n  const horizontalSpacing = 60;\n  const verticalSpacing = 60;\n\n  // Map internal step IDs to user-friendly display names\n  const stepDisplayNames = {\n    Upload: 'Upload',\n    CleanModify: 'Noise Clean',\n    FDModified: 'FD Detection',\n    NormalizeTable: 'Normalize to 3NF',\n    LosslessCheck: 'Lossless Decomposition',\n    ERDiagram: 'ER Diagram',\n    ConvertToCSV: 'CSV Converter',\n    KeyDetection: 'Key Detector',\n    DependencyPreservation: 'Check Dependency Preservation'\n  };\n\n  // Load saved positions on mount\n  useEffect(() => {\n    const savedPositions = localStorage.getItem(STORAGE_KEY);\n    if (savedPositions) {\n      try {\n        const parsedPositions = JSON.parse(savedPositions);\n        setPositions(parsedPositions);\n        positionsInitialized.current = true;\n      } catch {\n        console.warn('Failed to parse saved positions');\n      }\n    }\n  }, []);\n\n  // Initialize default positions if none saved, after we know box widths\n  useEffect(() => {\n    if (positionsInitialized.current) return;\n    if (!containerRef.current) return;\n    if (workflowSteps.length === 0) return;\n\n    // Wait until all box widths are measured for all workflowSteps\n    if (workflowSteps.some(step => !boxWidths[step])) return;\n    const containerWidth = containerRef.current.clientWidth;\n    const initialPositions = {};\n    let x = 50;\n    let y = 60;\n    workflowSteps.forEach(step => {\n      const width = boxWidths[step] || 140;\n      if (x + width > containerWidth - 20) {\n        x = 50;\n        y += boxHeight + verticalSpacing;\n      }\n      initialPositions[step] = {\n        x,\n        y\n      };\n      x += width + horizontalSpacing;\n    });\n    setPositions(prev => ({\n      ...prev,\n      ...initialPositions\n    }));\n    positionsInitialized.current = true;\n  }, [workflowSteps, boxWidths]);\n\n  // Save positions to localStorage when changed\n  useEffect(() => {\n    if (positionsInitialized.current) {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(positions));\n    }\n  }, [positions]);\n\n  // Ensure currentStepIndex stays valid when workflowSteps change\n  useEffect(() => {\n    if (currentStepIndex == null) return;\n    if (currentStepIndex >= workflowSteps.length) {\n      setCurrentStepIndex(workflowSteps.length - 1);\n    }\n  }, [workflowSteps, currentStepIndex]);\n\n  // Handle drag of step boxes with undo stack update\n  const handlePositionChange = (step, pos) => {\n    setPositions(prev => {\n      setUndoStack(undoPrev => [...undoPrev, prev]);\n      setRedoStack([]);\n      return {\n        ...prev,\n        [step]: pos\n      };\n    });\n  };\n  const handleClickStep = async step => {\n    try {\n      const response = await axios.get(`/api/code/${step}`);\n      setCurrentCode(response.data.code || '');\n    } catch {\n      setCurrentCode('Failed to load code');\n    }\n    const idx = workflowSteps.indexOf(step);\n    if (idx !== -1) setCurrentStepIndex(idx);\n  };\n\n  // Undo handler: undo 2 steps at once\n  const handleUndo = () => {\n    if (undoStack.length === 0) return;\n    setPositions(currentPositions => {\n      let newUndoStack = [...undoStack];\n      let newRedoStack = [...redoStack, currentPositions];\n      let previousPositions;\n      for (let i = 0; i < 2; i++) {\n        if (newUndoStack.length === 0) break;\n        previousPositions = newUndoStack.pop();\n        newRedoStack.push(previousPositions);\n      }\n      setUndoStack(newUndoStack);\n      setRedoStack(newRedoStack);\n      return previousPositions || currentPositions;\n    });\n  };\n\n  // Redo handler: redo 2 steps at once\n  const handleRedo = () => {\n    if (redoStack.length === 0) return;\n    setPositions(currentPositions => {\n      let newRedoStack = [...redoStack];\n      let newUndoStack = [...undoStack, currentPositions];\n      let nextPositions;\n      for (let i = 0; i < 2; i++) {\n        if (newRedoStack.length === 0) break;\n        nextPositions = newRedoStack.pop();\n        newUndoStack.push(nextPositions);\n      }\n      setRedoStack(newRedoStack);\n      setUndoStack(newUndoStack);\n      return nextPositions || currentPositions;\n    });\n  };\n\n  // Helper cubic BÃ©zier function for point at parameter t\n  function cubicBezierPoint(t, P0, P1, P2, P3) {\n    const u = 1 - t;\n    const tt = t * t;\n    const uu = u * u;\n    const uuu = uu * u;\n    const ttt = tt * t;\n    const x = uuu * P0.x + 3 * uu * t * P1.x + 3 * u * tt * P2.x + ttt * P3.x;\n    const y = uuu * P0.y + 3 * uu * t * P1.y + 3 * u * tt * P2.y + ttt * P3.y;\n    return {\n      x,\n      y\n    };\n  }\n  const renderLines = () => {\n    const dotRadius = 4.5;\n    const lines = [];\n    const t1 = 0.25; // parameter for first dot on curve\n    const t2 = 0.75; // parameter for second dot on curve\n\n    for (let i = 0; i < workflowSteps.length - 1; i++) {\n      const from = positions[workflowSteps[i]];\n      const to = positions[workflowSteps[i + 1]];\n\n      // Skip drawing lines if either box is removed\n      if (removedSteps.has(workflowSteps[i]) || removedSteps.has(workflowSteps[i + 1])) {\n        continue;\n      }\n      if (from && to) {\n        const fromWidth = boxWidths[workflowSteps[i]] || 140;\n        const padding = 6; // padding so lines don't overlap box edges\n\n        // Start point at right edge center of \"from\" box\n        const P0 = {\n          x: from.x + fromWidth + padding,\n          y: from.y + boxHeight / 2\n        };\n\n        // End point at left edge center of \"to\" box\n        const P3 = {\n          x: to.x - padding,\n          y: to.y + boxHeight / 2\n        };\n        const cp = controlPoints[i] || {};\n        let P1, P2;\n        if (cp.c1 && cp.c2) {\n          P1 = cp.c1;\n          P2 = cp.c2;\n        } else {\n          if (Math.abs(P3.x - P0.x) > Math.abs(P3.y - P0.y)) {\n            P1 = {\n              x: P0.x + (P3.x - P0.x) / 2,\n              y: P0.y\n            };\n            P2 = {\n              x: P0.x + (P3.x - P0.x) / 2,\n              y: P3.y\n            };\n          } else {\n            P1 = {\n              x: P0.x,\n              y: P0.y + (P3.y - P0.y) / 2\n            };\n            P2 = {\n              x: P3.x,\n              y: P0.y + (P3.y - P0.y) / 2\n            };\n          }\n        }\n\n        // Compute dot positions on the curve\n        const dot1Pos = cubicBezierPoint(t1, P0, P1, P2, P3);\n        const dot2Pos = cubicBezierPoint(t2, P0, P1, P2, P3);\n\n        // Build path string\n        const d = `M${P0.x},${P0.y} C${P1.x},${P1.y} ${P2.x},${P2.y} ${P3.x},${P3.y}`;\n        lines.push(/*#__PURE__*/_jsxDEV(\"path\", {\n          d: d,\n          fill: \"none\",\n          stroke: \"rgba(184, 212, 249, 0.9)\",\n          strokeWidth: \"1.5\",\n          markerEnd: \"url(#arrowhead)\"\n        }, `line-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this));\n\n        // Draggable dots placed on curve at dot1Pos and dot2Pos\n        lines.push(/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: dot1Pos.x,\n          cy: dot1Pos.y,\n          r: dotRadius,\n          fill: \"rgba(53, 143, 215, 0.9)\",\n          stroke: \"white\",\n          strokeWidth: \"1\",\n          cursor: \"move\",\n          onPointerDown: e => {\n            e.stopPropagation();\n            const startPos = {\n              x: e.clientX,\n              y: e.clientY\n            };\n            const initialC1 = P1;\n            const initialC2 = P2;\n            const onPointerMove = ev => {\n              ev.preventDefault();\n\n              // Calculate how far pointer moved relative to start\n              const dx = ev.clientX - startPos.x;\n              const dy = ev.clientY - startPos.y;\n\n              // Update control points based on which dot is dragged\n              setControlPoints(prev => {\n                const newControlPoints = {\n                  ...prev\n                };\n                const cpCopy = {\n                  ...newControlPoints[i]\n                };\n                if (ev.target === ev.currentTarget) {\n                  // Determine if dot1 or dot2 by key in the event target? We'll just check circle keys\n                  // This event handler is shared - to differentiate we need a better way\n                }\n\n                // Because this handler is shared, only handle for dot1 here\n                cpCopy.c1 = {\n                  x: initialC1.x + dx,\n                  y: initialC1.y + dy\n                };\n                newControlPoints[i] = cpCopy;\n                return newControlPoints;\n              });\n            };\n            const onPointerUp = () => {\n              window.removeEventListener('pointermove', onPointerMove);\n              window.removeEventListener('pointerup', onPointerUp);\n            };\n            window.addEventListener('pointermove', onPointerMove);\n            window.addEventListener('pointerup', onPointerUp);\n          }\n        }, `dot1-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: dot2Pos.x,\n          cy: dot2Pos.y,\n          r: dotRadius,\n          fill: \"rgba(53, 143, 215, 0.9)\",\n          stroke: \"white\",\n          strokeWidth: \"1\",\n          cursor: \"move\",\n          onPointerDown: e => {\n            e.stopPropagation();\n            const startPos = {\n              x: e.clientX,\n              y: e.clientY\n            };\n            const initialC1 = P1;\n            const initialC2 = P2;\n            const onPointerMove = ev => {\n              ev.preventDefault();\n              const dx = ev.clientX - startPos.x;\n              const dy = ev.clientY - startPos.y;\n              setControlPoints(prev => {\n                const newControlPoints = {\n                  ...prev\n                };\n                const cpCopy = {\n                  ...newControlPoints[i]\n                };\n\n                // For dot2 drag\n                cpCopy.c2 = {\n                  x: initialC2.x + dx,\n                  y: initialC2.y + dy\n                };\n                newControlPoints[i] = cpCopy;\n                return newControlPoints;\n              });\n            };\n            const onPointerUp = () => {\n              window.removeEventListener('pointermove', onPointerMove);\n              window.removeEventListener('pointerup', onPointerUp);\n            };\n            window.addEventListener('pointermove', onPointerMove);\n            window.addEventListener('pointerup', onPointerUp);\n          }\n        }, `dot2-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        pointerEvents: 'none'\n      },\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrowhead\",\n          markerWidth: \"10\",\n          markerHeight: \"7\",\n          refX: \"0\",\n          refY: \"3.5\",\n          orient: \"auto\",\n          fill: \"rgba(184, 212, 249, 0.9)\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"0 0, 10 3.5, 0 7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), lines]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Previous step (reverse button) handler\n  const prevStep = () => {\n    if (workflowSteps.length === 0) return;\n    if (currentStepIndex == null) {\n      // If no current index, remove last step\n      const lastIndex = workflowSteps.length - 1;\n      const stepToRemove = workflowSteps[lastIndex];\n      setRemovedSteps(prev => new Set(prev).add(stepToRemove));\n      setCurrentStepIndex(lastIndex - 1 >= 0 ? lastIndex - 1 : null);\n    } else if (currentStepIndex >= 0) {\n      const stepToRemove = workflowSteps[currentStepIndex];\n      setRemovedSteps(prev => new Set(prev).add(stepToRemove));\n      setCurrentStepIndex(currentStepIndex - 1 >= 0 ? currentStepIndex - 1 : null);\n    }\n    setActionPanelClicked(false); // Reset action panel flag on reverse\n  };\n\n  // Next step (forward button) handler\n  const nextStep = () => {\n    if (workflowSteps.length === 0) return;\n    const nextIndex = currentStepIndex == null ? 0 : currentStepIndex + 1;\n    if (nextIndex >= workflowSteps.length) return;\n    const step = workflowSteps[nextIndex];\n    if (actionPanelClicked) {\n      // If action panel clicked, do NOT restore removed step\n      // Just set current step index and action panel box will show\n      setCurrentStepIndex(nextIndex);\n    } else {\n      // Restore removed step if it was removed\n      setRemovedSteps(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(step);\n        return newSet;\n      });\n      setCurrentStepIndex(nextIndex);\n    }\n  };\n\n  // Action panel button click handler\n  // Call this in your actual action panel buttons\n  const onActionPanelButtonClick = () => {\n    setActionPanelClicked(true);\n    // Optionally set currentStepIndex to the action panel box index, if applicable\n  };\n\n  // Update box width measurements when size changes\n  const handleSizeChange = (step, size) => {\n    setBoxWidths(prev => ({\n      ...prev,\n      [step]: size.width\n    }));\n  };\n\n  // Handle zoom slider change\n  const handleZoomChange = event => {\n    const value = Number(event.target.value);\n    if (value < 0.5) setScale(0.5);else if (value > 2) setScale(2);else setScale(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'auto',\n      userSelect: 'none',\n      touchAction: 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '6px',\n        position: 'fixed',\n        top: 10,\n        left: 10,\n        background: 'white',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        disabled: undoStack.length === 0,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRedo,\n        disabled: redoStack.length === 0,\n        children: \"Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevStep,\n        disabled: currentStepIndex === null && workflowSteps.length === 0,\n        children: \"Reverse Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextStep,\n        disabled: currentStepIndex === workflowSteps.length - 1 || workflowSteps.length === 0,\n        children: \"Forward Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: 10\n        },\n        children: [\"Zoom:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0.5\",\n          max: \"2\",\n          step: \"0.01\",\n          value: scale,\n          onChange: handleZoomChange,\n          style: {\n            marginLeft: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), renderLines(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        transform: `scale(${scale})`,\n        transformOrigin: 'top left'\n      },\n      children: [workflowSteps.map((step, index) => {\n        if (removedSteps.has(step)) return null; // Hide removed steps\n\n        return /*#__PURE__*/_jsxDEV(DraggableStep, {\n          step: step,\n          displayName: stepDisplayNames[step] || step,\n          position: positions[step] || {\n            x: 0,\n            y: 0\n          },\n          onPositionChange: handlePositionChange,\n          onClick: handleClickStep,\n          isFirst: index === 0,\n          onSizeChange: handleSizeChange,\n          isActive: index === currentStepIndex\n        }, step, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this);\n      }), actionPanelClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          padding: 10,\n          background: '#f0f8ff',\n          border: '2px solid #3590d7',\n          borderRadius: 6,\n          zIndex: 2000\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Action Panel Box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            // Example: close action panel and clear flag\n            setActionPanelClicked(false);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 446,\n    columnNumber: 5\n  }, this);\n};\n_s(OutputPanel, \"2Vm7jK+g7+ckktbrqmnIU0D+zSc=\", false, function () {\n  return [useStateContext];\n});\n_c = OutputPanel;\nexport default OutputPanel;\nvar _c;\n$RefreshReg$(_c, \"OutputPanel\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useStateContext","DraggableStep","axios","jsxDEV","_jsxDEV","STORAGE_KEY","OutputPanel","_s","workflowSteps","setCurrentCode","positions","setPositions","boxWidths","setBoxWidths","scale","setScale","containerRef","controlPoints","setControlPoints","positionsInitialized","undoStack","setUndoStack","redoStack","setRedoStack","currentStepIndex","setCurrentStepIndex","removedSteps","setRemovedSteps","Set","actionPanelClicked","setActionPanelClicked","boxHeight","horizontalSpacing","verticalSpacing","stepDisplayNames","Upload","CleanModify","FDModified","NormalizeTable","LosslessCheck","ERDiagram","ConvertToCSV","KeyDetection","DependencyPreservation","savedPositions","localStorage","getItem","parsedPositions","JSON","parse","current","console","warn","length","some","step","containerWidth","clientWidth","initialPositions","x","y","forEach","width","prev","setItem","stringify","handlePositionChange","pos","undoPrev","handleClickStep","response","get","data","code","idx","indexOf","handleUndo","currentPositions","newUndoStack","newRedoStack","previousPositions","i","pop","push","handleRedo","nextPositions","cubicBezierPoint","t","P0","P1","P2","P3","u","tt","uu","uuu","ttt","renderLines","dotRadius","lines","t1","t2","from","to","has","fromWidth","padding","cp","c1","c2","Math","abs","dot1Pos","dot2Pos","d","fill","stroke","strokeWidth","markerEnd","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","r","cursor","onPointerDown","e","stopPropagation","startPos","clientX","clientY","initialC1","initialC2","onPointerMove","ev","preventDefault","dx","dy","newControlPoints","cpCopy","target","currentTarget","onPointerUp","window","removeEventListener","addEventListener","style","position","top","left","height","pointerEvents","xmlns","children","id","markerWidth","markerHeight","refX","refY","orient","points","prevStep","lastIndex","stepToRemove","add","nextStep","nextIndex","newSet","delete","onActionPanelButtonClick","handleSizeChange","size","handleZoomChange","event","value","Number","ref","overflow","userSelect","touchAction","background","zIndex","onClick","disabled","marginLeft","type","min","max","onChange","transform","transformOrigin","map","index","displayName","onPositionChange","isFirst","onSizeChange","isActive","border","borderRadius","_c","$RefreshReg$"],"sources":["D:/DBMS/DBMS Project/frontend/src/components/OutputPanel.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useStateContext } from '../context/StateContext';\r\nimport DraggableStep from './DraggableStep';\r\nimport axios from 'axios';\r\n\r\nconst STORAGE_KEY = 'workflowStepPositions';\r\n\r\nconst OutputPanel = () => {\r\n  const { workflowSteps, setCurrentCode } = useStateContext();\r\n  const [positions, setPositions] = useState({});\r\n  const [boxWidths, setBoxWidths] = useState({});\r\n  const [scale, setScale] = useState(1);\r\n  const containerRef = useRef(null);\r\n\r\n  const [controlPoints, setControlPoints] = useState({});\r\n  const positionsInitialized = useRef(false);\r\n\r\n  // Undo / Redo stacks\r\n  const [undoStack, setUndoStack] = useState([]);\r\n  const [redoStack, setRedoStack] = useState([]);\r\n\r\n  // Current focused step index for step-by-step navigation\r\n  const [currentStepIndex, setCurrentStepIndex] = useState(null);\r\n\r\n  // Track which steps are \"removed\" (hidden)\r\n  const [removedSteps, setRemovedSteps] = useState(new Set());\r\n\r\n  // Flag to track if any action panel button was clicked\r\n  const [actionPanelClicked, setActionPanelClicked] = useState(false);\r\n\r\n  const boxHeight = 44;\r\n  const horizontalSpacing = 60;\r\n  const verticalSpacing = 60;\r\n\r\n  // Map internal step IDs to user-friendly display names\r\n  const stepDisplayNames = {\r\n    Upload: 'Upload',\r\n    CleanModify: 'Noise Clean',\r\n    FDModified: 'FD Detection',\r\n    NormalizeTable: 'Normalize to 3NF',\r\n    LosslessCheck: 'Lossless Decomposition',\r\n    ERDiagram: 'ER Diagram',\r\n    ConvertToCSV: 'CSV Converter',\r\n    KeyDetection: 'Key Detector',\r\n    DependencyPreservation: 'Check Dependency Preservation',\r\n  };\r\n\r\n  // Load saved positions on mount\r\n  useEffect(() => {\r\n    const savedPositions = localStorage.getItem(STORAGE_KEY);\r\n    if (savedPositions) {\r\n      try {\r\n        const parsedPositions = JSON.parse(savedPositions);\r\n        setPositions(parsedPositions);\r\n        positionsInitialized.current = true;\r\n      } catch {\r\n        console.warn('Failed to parse saved positions');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Initialize default positions if none saved, after we know box widths\r\n  useEffect(() => {\r\n    if (positionsInitialized.current) return;\r\n    if (!containerRef.current) return;\r\n    if (workflowSteps.length === 0) return;\r\n\r\n    // Wait until all box widths are measured for all workflowSteps\r\n    if (workflowSteps.some((step) => !boxWidths[step])) return;\r\n\r\n    const containerWidth = containerRef.current.clientWidth;\r\n    const initialPositions = {};\r\n\r\n    let x = 50;\r\n    let y = 60;\r\n\r\n    workflowSteps.forEach((step) => {\r\n      const width = boxWidths[step] || 140;\r\n\r\n      if (x + width > containerWidth - 20) {\r\n        x = 50;\r\n        y += boxHeight + verticalSpacing;\r\n      }\r\n      initialPositions[step] = { x, y };\r\n      x += width + horizontalSpacing;\r\n    });\r\n\r\n    setPositions((prev) => ({ ...prev, ...initialPositions }));\r\n    positionsInitialized.current = true;\r\n  }, [workflowSteps, boxWidths]);\r\n\r\n  // Save positions to localStorage when changed\r\n  useEffect(() => {\r\n    if (positionsInitialized.current) {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(positions));\r\n    }\r\n  }, [positions]);\r\n\r\n  // Ensure currentStepIndex stays valid when workflowSteps change\r\n  useEffect(() => {\r\n    if (currentStepIndex == null) return;\r\n    if (currentStepIndex >= workflowSteps.length) {\r\n      setCurrentStepIndex(workflowSteps.length - 1);\r\n    }\r\n  }, [workflowSteps, currentStepIndex]);\r\n\r\n  // Handle drag of step boxes with undo stack update\r\n  const handlePositionChange = (step, pos) => {\r\n    setPositions((prev) => {\r\n      setUndoStack((undoPrev) => [...undoPrev, prev]);\r\n      setRedoStack([]);\r\n      return { ...prev, [step]: pos };\r\n    });\r\n  };\r\n\r\n  const handleClickStep = async (step) => {\r\n    try {\r\n      const response = await axios.get(`/api/code/${step}`);\r\n      setCurrentCode(response.data.code || '');\r\n    } catch {\r\n      setCurrentCode('Failed to load code');\r\n    }\r\n\r\n    const idx = workflowSteps.indexOf(step);\r\n    if (idx !== -1) setCurrentStepIndex(idx);\r\n  };\r\n\r\n  // Undo handler: undo 2 steps at once\r\n  const handleUndo = () => {\r\n    if (undoStack.length === 0) return;\r\n\r\n    setPositions((currentPositions) => {\r\n      let newUndoStack = [...undoStack];\r\n      let newRedoStack = [...redoStack, currentPositions];\r\n\r\n      let previousPositions;\r\n      for (let i = 0; i < 2; i++) {\r\n        if (newUndoStack.length === 0) break;\r\n        previousPositions = newUndoStack.pop();\r\n        newRedoStack.push(previousPositions);\r\n      }\r\n\r\n      setUndoStack(newUndoStack);\r\n      setRedoStack(newRedoStack);\r\n\r\n      return previousPositions || currentPositions;\r\n    });\r\n  };\r\n\r\n  // Redo handler: redo 2 steps at once\r\n  const handleRedo = () => {\r\n    if (redoStack.length === 0) return;\r\n\r\n    setPositions((currentPositions) => {\r\n      let newRedoStack = [...redoStack];\r\n      let newUndoStack = [...undoStack, currentPositions];\r\n\r\n      let nextPositions;\r\n      for (let i = 0; i < 2; i++) {\r\n        if (newRedoStack.length === 0) break;\r\n        nextPositions = newRedoStack.pop();\r\n        newUndoStack.push(nextPositions);\r\n      }\r\n\r\n      setRedoStack(newRedoStack);\r\n      setUndoStack(newUndoStack);\r\n\r\n      return nextPositions || currentPositions;\r\n    });\r\n  };\r\n\r\n  // Helper cubic BÃ©zier function for point at parameter t\r\n  function cubicBezierPoint(t, P0, P1, P2, P3) {\r\n    const u = 1 - t;\r\n    const tt = t * t;\r\n    const uu = u * u;\r\n    const uuu = uu * u;\r\n    const ttt = tt * t;\r\n\r\n    const x =\r\n      uuu * P0.x +\r\n      3 * uu * t * P1.x +\r\n      3 * u * tt * P2.x +\r\n      ttt * P3.x;\r\n    const y =\r\n      uuu * P0.y +\r\n      3 * uu * t * P1.y +\r\n      3 * u * tt * P2.y +\r\n      ttt * P3.y;\r\n\r\n    return { x, y };\r\n  }\r\n\r\n  const renderLines = () => {\r\n    const dotRadius = 4.5;\r\n    const lines = [];\r\n\r\n    const t1 = 0.25; // parameter for first dot on curve\r\n    const t2 = 0.75; // parameter for second dot on curve\r\n\r\n    for (let i = 0; i < workflowSteps.length - 1; i++) {\r\n      const from = positions[workflowSteps[i]];\r\n      const to = positions[workflowSteps[i + 1]];\r\n\r\n      // Skip drawing lines if either box is removed\r\n      if (removedSteps.has(workflowSteps[i]) || removedSteps.has(workflowSteps[i + 1])) {\r\n        continue;\r\n      }\r\n\r\n      if (from && to) {\r\n        const fromWidth = boxWidths[workflowSteps[i]] || 140;\r\n\r\n        const padding = 6; // padding so lines don't overlap box edges\r\n\r\n        // Start point at right edge center of \"from\" box\r\n        const P0 = {\r\n          x: from.x + fromWidth + padding,\r\n          y: from.y + boxHeight / 2,\r\n        };\r\n\r\n        // End point at left edge center of \"to\" box\r\n        const P3 = {\r\n          x: to.x - padding,\r\n          y: to.y + boxHeight / 2,\r\n        };\r\n\r\n        const cp = controlPoints[i] || {};\r\n\r\n        let P1, P2;\r\n\r\n        if (cp.c1 && cp.c2) {\r\n          P1 = cp.c1;\r\n          P2 = cp.c2;\r\n        } else {\r\n          if (Math.abs(P3.x - P0.x) > Math.abs(P3.y - P0.y)) {\r\n            P1 = { x: P0.x + (P3.x - P0.x) / 2, y: P0.y };\r\n            P2 = { x: P0.x + (P3.x - P0.x) / 2, y: P3.y };\r\n          } else {\r\n            P1 = { x: P0.x, y: P0.y + (P3.y - P0.y) / 2 };\r\n            P2 = { x: P3.x, y: P0.y + (P3.y - P0.y) / 2 };\r\n          }\r\n        }\r\n\r\n        // Compute dot positions on the curve\r\n        const dot1Pos = cubicBezierPoint(t1, P0, P1, P2, P3);\r\n        const dot2Pos = cubicBezierPoint(t2, P0, P1, P2, P3);\r\n\r\n        // Build path string\r\n        const d = `M${P0.x},${P0.y} C${P1.x},${P1.y} ${P2.x},${P2.y} ${P3.x},${P3.y}`;\r\n\r\n        lines.push(\r\n          <path\r\n            key={`line-${i}`}\r\n            d={d}\r\n            fill=\"none\"\r\n            stroke=\"rgba(184, 212, 249, 0.9)\"\r\n            strokeWidth=\"1.5\"\r\n            markerEnd=\"url(#arrowhead)\"\r\n          />\r\n        );\r\n\r\n        // Draggable dots placed on curve at dot1Pos and dot2Pos\r\n        lines.push(\r\n          <circle\r\n            key={`dot1-${i}`}\r\n            cx={dot1Pos.x}\r\n            cy={dot1Pos.y}\r\n            r={dotRadius}\r\n            fill=\"rgba(53, 143, 215, 0.9)\"\r\n            stroke=\"white\"\r\n            strokeWidth=\"1\"\r\n            cursor=\"move\"\r\n            onPointerDown={(e) => {\r\n              e.stopPropagation();\r\n              const startPos = { x: e.clientX, y: e.clientY };\r\n              const initialC1 = P1;\r\n              const initialC2 = P2;\r\n\r\n              const onPointerMove = (ev) => {\r\n                ev.preventDefault();\r\n\r\n                // Calculate how far pointer moved relative to start\r\n                const dx = ev.clientX - startPos.x;\r\n                const dy = ev.clientY - startPos.y;\r\n\r\n                // Update control points based on which dot is dragged\r\n                setControlPoints((prev) => {\r\n                  const newControlPoints = { ...prev };\r\n                  const cpCopy = { ...newControlPoints[i] };\r\n\r\n                  if (ev.target === ev.currentTarget) {\r\n                    // Determine if dot1 or dot2 by key in the event target? We'll just check circle keys\r\n                    // This event handler is shared - to differentiate we need a better way\r\n                  }\r\n\r\n                  // Because this handler is shared, only handle for dot1 here\r\n                  cpCopy.c1 = { x: initialC1.x + dx, y: initialC1.y + dy };\r\n                  newControlPoints[i] = cpCopy;\r\n\r\n                  return newControlPoints;\r\n                });\r\n              };\r\n\r\n              const onPointerUp = () => {\r\n                window.removeEventListener('pointermove', onPointerMove);\r\n                window.removeEventListener('pointerup', onPointerUp);\r\n              };\r\n\r\n              window.addEventListener('pointermove', onPointerMove);\r\n              window.addEventListener('pointerup', onPointerUp);\r\n            }}\r\n          />,\r\n          <circle\r\n            key={`dot2-${i}`}\r\n            cx={dot2Pos.x}\r\n            cy={dot2Pos.y}\r\n            r={dotRadius}\r\n            fill=\"rgba(53, 143, 215, 0.9)\"\r\n            stroke=\"white\"\r\n            strokeWidth=\"1\"\r\n            cursor=\"move\"\r\n            onPointerDown={(e) => {\r\n              e.stopPropagation();\r\n              const startPos = { x: e.clientX, y: e.clientY };\r\n              const initialC1 = P1;\r\n              const initialC2 = P2;\r\n\r\n              const onPointerMove = (ev) => {\r\n                ev.preventDefault();\r\n\r\n                const dx = ev.clientX - startPos.x;\r\n                const dy = ev.clientY - startPos.y;\r\n\r\n                setControlPoints((prev) => {\r\n                  const newControlPoints = { ...prev };\r\n                  const cpCopy = { ...newControlPoints[i] };\r\n\r\n                  // For dot2 drag\r\n                  cpCopy.c2 = { x: initialC2.x + dx, y: initialC2.y + dy };\r\n                  newControlPoints[i] = cpCopy;\r\n\r\n                  return newControlPoints;\r\n                });\r\n              };\r\n\r\n              const onPointerUp = () => {\r\n                window.removeEventListener('pointermove', onPointerMove);\r\n                window.removeEventListener('pointerup', onPointerUp);\r\n              };\r\n\r\n              window.addEventListener('pointermove', onPointerMove);\r\n              window.addEventListener('pointerup', onPointerUp);\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <svg\r\n        style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', pointerEvents: 'none' }}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <defs>\r\n          <marker\r\n            id=\"arrowhead\"\r\n            markerWidth=\"10\"\r\n            markerHeight=\"7\"\r\n            refX=\"0\"\r\n            refY=\"3.5\"\r\n            orient=\"auto\"\r\n            fill=\"rgba(184, 212, 249, 0.9)\"\r\n          >\r\n            <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n          </marker>\r\n        </defs>\r\n        {lines}\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  // Previous step (reverse button) handler\r\n  const prevStep = () => {\r\n    if (workflowSteps.length === 0) return;\r\n\r\n    if (currentStepIndex == null) {\r\n      // If no current index, remove last step\r\n      const lastIndex = workflowSteps.length - 1;\r\n      const stepToRemove = workflowSteps[lastIndex];\r\n      setRemovedSteps((prev) => new Set(prev).add(stepToRemove));\r\n      setCurrentStepIndex(lastIndex - 1 >= 0 ? lastIndex - 1 : null);\r\n    } else if (currentStepIndex >= 0) {\r\n      const stepToRemove = workflowSteps[currentStepIndex];\r\n      setRemovedSteps((prev) => new Set(prev).add(stepToRemove));\r\n      setCurrentStepIndex(currentStepIndex - 1 >= 0 ? currentStepIndex - 1 : null);\r\n    }\r\n\r\n    setActionPanelClicked(false); // Reset action panel flag on reverse\r\n  };\r\n\r\n  // Next step (forward button) handler\r\n  const nextStep = () => {\r\n    if (workflowSteps.length === 0) return;\r\n\r\n    const nextIndex = currentStepIndex == null ? 0 : currentStepIndex + 1;\r\n    if (nextIndex >= workflowSteps.length) return;\r\n\r\n    const step = workflowSteps[nextIndex];\r\n\r\n    if (actionPanelClicked) {\r\n      // If action panel clicked, do NOT restore removed step\r\n      // Just set current step index and action panel box will show\r\n      setCurrentStepIndex(nextIndex);\r\n    } else {\r\n      // Restore removed step if it was removed\r\n      setRemovedSteps((prev) => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(step);\r\n        return newSet;\r\n      });\r\n      setCurrentStepIndex(nextIndex);\r\n    }\r\n  };\r\n\r\n  // Action panel button click handler\r\n  // Call this in your actual action panel buttons\r\n  const onActionPanelButtonClick = () => {\r\n    setActionPanelClicked(true);\r\n    // Optionally set currentStepIndex to the action panel box index, if applicable\r\n  };\r\n\r\n  // Update box width measurements when size changes\r\n  const handleSizeChange = (step, size) => {\r\n    setBoxWidths((prev) => ({ ...prev, [step]: size.width }));\r\n  };\r\n\r\n  // Handle zoom slider change\r\n  const handleZoomChange = (event) => {\r\n    const value = Number(event.target.value);\r\n    if (value < 0.5) setScale(0.5);\r\n    else if (value > 2) setScale(2);\r\n    else setScale(value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      style={{\r\n        position: 'relative',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'auto',\r\n        userSelect: 'none',\r\n        touchAction: 'none',\r\n      }}\r\n    >\r\n      {/* Zoom control */}\r\n      <div style={{ padding: '6px', position: 'fixed', top: 10, left: 10, background: 'white', zIndex: 1000 }}>\r\n        <button onClick={handleUndo} disabled={undoStack.length === 0}>\r\n          Undo\r\n        </button>\r\n        <button onClick={handleRedo} disabled={redoStack.length === 0}>\r\n          Redo\r\n        </button>\r\n        <button onClick={prevStep} disabled={currentStepIndex === null && workflowSteps.length === 0}>\r\n          Reverse Step\r\n        </button>\r\n        <button onClick={nextStep} disabled={currentStepIndex === workflowSteps.length - 1 || workflowSteps.length === 0}>\r\n          Forward Step\r\n        </button>\r\n        <label style={{ marginLeft: 10 }}>\r\n          Zoom:\r\n          <input\r\n            type=\"range\"\r\n            min=\"0.5\"\r\n            max=\"2\"\r\n            step=\"0.01\"\r\n            value={scale}\r\n            onChange={handleZoomChange}\r\n            style={{ marginLeft: 6 }}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Render lines */}\r\n      {renderLines()}\r\n\r\n      {/* Render draggable step boxes */}\r\n      <div\r\n        style={{\r\n          position: 'relative',\r\n          width: '100%',\r\n          height: '100%',\r\n          transform: `scale(${scale})`,\r\n          transformOrigin: 'top left',\r\n        }}\r\n      >\r\n        {workflowSteps.map((step, index) => {\r\n          if (removedSteps.has(step)) return null; // Hide removed steps\r\n\r\n          return (\r\n            <DraggableStep\r\n              key={step}\r\n              step={step}\r\n              displayName={stepDisplayNames[step] || step}\r\n              position={positions[step] || { x: 0, y: 0 }}\r\n              onPositionChange={handlePositionChange}\r\n              onClick={handleClickStep}\r\n              isFirst={index === 0}\r\n              onSizeChange={handleSizeChange}\r\n              isActive={index === currentStepIndex}\r\n            />\r\n          );\r\n        })}\r\n\r\n        {/* Optionally render action panel box if actionPanelClicked is true */}\r\n        {actionPanelClicked && (\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: 10,\r\n              left: 10,\r\n              padding: 10,\r\n              background: '#f0f8ff',\r\n              border: '2px solid #3590d7',\r\n              borderRadius: 6,\r\n              zIndex: 2000,\r\n            }}\r\n          >\r\n            {/* Replace this with your actual action panel UI */}\r\n            <p>Action Panel Box</p>\r\n            <button\r\n              onClick={() => {\r\n                // Example: close action panel and clear flag\r\n                setActionPanelClicked(false);\r\n              }}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutputPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}